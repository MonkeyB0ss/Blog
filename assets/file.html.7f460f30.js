import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as s,e as n}from"./app.425888db.js";const i="/Blog/assets/file1.ea6948cb.png",l="/Blog/assets/file2.40d67046.png",t="/Blog/assets/file3.0ced1862.png",c={},o=n(`<h1 id="file类的使用" tabindex="-1"><a class="header-anchor" href="#file类的使用" aria-hidden="true">#</a> File类的使用</h1><h2 id="file类的理解" tabindex="-1"><a class="header-anchor" href="#file类的理解" aria-hidden="true">#</a> File类的理解</h2><ol><li>File类的一个对象，代表一个文件或一个文件目录(俗称：文件夹)</li><li>File类声明在<code>java.io</code>包下</li><li>File类中涉及到关于文件或文件目录的创建、删除、重命名、修改时间、文件大小等方法， 并未涉及到写入或读取文件内容的操作。如果需要读取或写入文件内容，必须使用IO流来完成。</li><li>后续File类的对象常会作为参数传递到流的构造器中，指明读取或写入的&quot;终点&quot;.</li></ol><h2 id="file的实例化" tabindex="-1"><a class="header-anchor" href="#file的实例化" aria-hidden="true">#</a> File的实例化</h2><h3 id="常用构造器" tabindex="-1"><a class="header-anchor" href="#常用构造器" aria-hidden="true">#</a> 常用构造器</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span>
<span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentPath<span class="token punctuation">,</span><span class="token class-name">String</span> childPath<span class="token punctuation">)</span>
<span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">File</span> parentFile<span class="token punctuation">,</span><span class="token class-name">String</span> childPath<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路径的分类" tabindex="-1"><a class="header-anchor" href="#路径的分类" aria-hidden="true">#</a> 路径的分类</h3><ul><li><code>相对路径</code>：相较于某个路径下，指明的路径。</li><li><code>绝对路径</code>：包含盘符在内的文件或文件目录的路径</li></ul><div class="custom-container info"><p class="custom-container-title">说明</p><ul><li>IDEA中： 如果大家开发使用JUnit中的单元测试方法测试，相对路径即为当前Module下。 如果大家使用main()测试，相对路径即为当前的Project下。</li><li>Eclipse中： 不管使用单元测试方法还是使用main()测试，相对路径都是当前的Project下。</li></ul></div><h3 id="路径分隔符" tabindex="-1"><a class="header-anchor" href="#路径分隔符" aria-hidden="true">#</a> 路径分隔符</h3><p>windows和DOS系统默认使用&quot;&quot;来表示</p><p>UNIX和URL使用&quot;/&quot;来表示</p><h2 id="file类的常用方法" tabindex="-1"><a class="header-anchor" href="#file类的常用方法" aria-hidden="true">#</a> File类的常用方法</h2><p><img src="`+i+'" alt="img.png"><img src="'+l+'" alt="img.png"><img src="'+t+'" alt="img.png"></p>',14),r=[o];function d(p,h){return e(),s("div",null,r)}const f=a(c,[["render",d],["__file","file.html.vue"]]);export{f as default};

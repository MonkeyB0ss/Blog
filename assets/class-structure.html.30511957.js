import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as e,e as a}from"./app.1e7550f3.js";const c={},o=a('<h1 id="类的结构之一-属性" tabindex="-1"><a class="header-anchor" href="#类的结构之一-属性" aria-hidden="true">#</a> 类的结构之一：属性</h1><p>类的设计中，两个重要结构之一：属性</p><h2 id="属性-🆚-局部变量" tabindex="-1"><a class="header-anchor" href="#属性-🆚-局部变量" aria-hidden="true">#</a> <code>属性</code> 🆚 <code>局部变量</code></h2><h3 id="相同点" tabindex="-1"><a class="header-anchor" href="#相同点" aria-hidden="true">#</a> 相同点</h3><ol><li>定义变量的格式：数据类型 <code>变量名 = 变量值</code></li><li>先声明，后使用</li><li>变量都其对应的作用域</li></ol><h3 id="不同点" tabindex="-1"><a class="header-anchor" href="#不同点" aria-hidden="true">#</a> 不同点</h3><ol><li>在类中声明的位置的不同 <ul><li>属性：直接定义在类的一对{}内</li><li>局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</li></ul></li><li>关于权限修饰符的不同 <ul><li>属性：可以在声明属性时，指明其权限，使用权限修饰符。<div class="custom-container info"><p class="custom-container-title">常用的权限修饰符</p><p><code>private</code>、<code>public</code>、<code>缺省</code>、<code>protected</code></p></div></li><li>局部变量：不可以使用权限修饰符。</li></ul></li><li>默认初始化值的情况： <ul><li>属性：类的属性，根据其类型，都默认初始化值。 <ul><li>整型（byte、short、int、long：0）</li><li>浮点型（float、double：0.0）</li><li>字符型（char：0 （或&#39;\\u0000&#39;））</li><li>布尔型（boolean：false）</li><li>引用数据类型（类、数组、接口：null）</li></ul></li><li>局部变量：没默认初始化值。<div class="custom-container warning"><p class="custom-container-title">注意</p><p>意味着，我们在调用局部变量之前，一定要显式赋值。</p></div></li></ul></li><li>在内存中加载的位置： <ul><li>属性：加载到堆空间中（非static）</li><li>局部变量：加载到栈空间</li></ul></li></ol>',7),t=[o];function d(r,s){return i(),e("div",null,t)}const u=l(c,[["render",d],["__file","class-structure.html.vue"]]);export{u as default};

const e=JSON.parse('{"key":"v-37b885a0","path":"/java/design-patterns/single.html","title":"单例模式","lang":"zh-CN","frontmatter":{"date":"2022-11-25T00:00:00.000Z","category":"基础","tag":["JAVA","设计模式"]},"headers":[{"level":2,"title":"设计模式的说明","slug":"设计模式的说明","link":"#设计模式的说明","children":[]},{"level":2,"title":"单例模式","slug":"单例模式-1","link":"#单例模式-1","children":[{"level":3,"title":"要解决的问题","slug":"要解决的问题","link":"#要解决的问题","children":[]},{"level":3,"title":"具体代码的实现","slug":"具体代码的实现","link":"#具体代码的实现","children":[]},{"level":3,"title":"两种方式的对比","slug":"两种方式的对比","link":"#两种方式的对比","children":[]}]}],"git":{"createdTime":1669649886000,"updatedTime":1669649886000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.9,"words":569},"filePathRelative":"java/design-patterns/single.md","localizedDate":"2022年11月25日","excerpt":"<h1> 单例模式</h1>\\n<h2> 设计模式的说明</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">设计模式</p>\\n<p>是在大量的实践中总结和理论化之后优的代码结构、编程风格、以及解决问题的思考方式.</p>\\n</div>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">常用设计模式</p>\\n<p>23种经典的设计模式</p>\\n<ul>\\n<li>创建型模式，共 5️⃣ 种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</li>\\n<li>结构型模式，共 7️⃣ 种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</li>\\n<li>行为型模式，共 1️⃣1️⃣ 种：策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</li>\\n</ul>\\n</div>"}');export{e as data};

import{_ as s,X as n,Y as a,a2 as e}from"./framework-a20dc394.js";const l={},t=e(`<h1 id="mysql主从配置" tabindex="-1"><a class="header-anchor" href="#mysql主从配置" aria-hidden="true">#</a> MySQL主从配置</h1><p>在 Docker 中实现 MySQL 主从（Master-Slave）的设置，可以使用 Docker Compose 来定义和管理多个 MySQL 容器，并配置它们之间的主从关系</p><h2 id="创建-docker-compose-文件" tabindex="-1"><a class="header-anchor" href="#创建-docker-compose-文件" aria-hidden="true">#</a> 创建 Docker Compose 文件</h2><p>创建一个名为 docker-compose.yml 的文件，并添加以下内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.8&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql-master</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>latest
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>master
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/master/log<span class="token punctuation">:</span>/var/log/mysql  
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/master/conf.d<span class="token punctuation">:</span>/etc/mysql/conf.d
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/master/data<span class="token punctuation">:</span>/var/lib/mysql
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token comment">######</span>
      <span class="token key atrule">MYSQL_USER</span><span class="token punctuation">:</span> synchronize<span class="token punctuation">-</span>user
      <span class="token key atrule">MYSQL_PASSWORD</span><span class="token punctuation">:</span> <span class="token comment">######</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;3306:3306&quot;</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql<span class="token punctuation">-</span>network

  <span class="token key atrule">mysql-slave1</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>latest
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>slave1
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave1/log<span class="token punctuation">:</span>/var/log/mysql  
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave1/conf.d<span class="token punctuation">:</span>/etc/mysql/conf.d
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave1/data<span class="token punctuation">:</span>/var/lib/mysql
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token comment">######</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql<span class="token punctuation">-</span>network

  <span class="token key atrule">mysql-slave2</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>latest
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>slave2
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave2/log<span class="token punctuation">:</span>/var/log/mysql  
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave2/conf.d<span class="token punctuation">:</span>/etc/mysql/conf.d
      <span class="token punctuation">-</span> /mnt/monkeyboss/Mysql/slave2/data<span class="token punctuation">:</span>/var/lib/mysql
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token comment">######</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> mysql<span class="token punctuation">-</span>network

<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">mysql-network</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，我们定义了三个 MySQL 服务：一个主节点 (mysql-master) 和两个从节点 (mysql-slave1 和 mysql-slave2)。它们都连接到一个自定义网络 mysql-network。</p><h2 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器" aria-hidden="true">#</a> 启动容器</h2><p>在包含 docker-compose.yml 文件的目录中，执行以下命令启动容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置主从关系" tabindex="-1"><a class="header-anchor" href="#配置主从关系" aria-hidden="true">#</a> 配置主从关系</h2><p>连接到 MySQL 主节点，为用于复制的用户赋权，并记录主节点状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-master mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 进入 MySQL 命令行后执行以下 SQL 语句</span>
<span class="token keyword">GRANT</span> <span class="token keyword">REPLICATION</span> SLAVE <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;synchronize-user&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">with</span> <span class="token keyword">grant</span> <span class="token keyword">option</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
<span class="token keyword">SHOW</span> MASTER <span class="token keyword">STATUS</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记录输出中的文件名(File)和位置(Position)。</p><p><img src="https://raw.githubusercontent.com/MonkeyB0ss/PicGo/master/MyNotes/images/202401130038989.png" alt=""></p><h2 id="配置从节点" tabindex="-1"><a class="header-anchor" href="#配置从节点" aria-hidden="true">#</a> 配置从节点</h2><h4 id="连接到-mysql-从节点" tabindex="-1"><a class="header-anchor" href="#连接到-mysql-从节点" aria-hidden="true">#</a> 连接到 MySQL 从节点</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-slave1 mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="先链接主节点验证网络是否通" tabindex="-1"><a class="header-anchor" href="#先链接主节点验证网络是否通" aria-hidden="true">#</a> 先链接主节点验证网络是否通</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql -usynchronize-user -hmysql-master <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="登录从节点配置复制主节点的数据" tabindex="-1"><a class="header-anchor" href="#登录从节点配置复制主节点的数据" aria-hidden="true">#</a> 登录从节点配置复制主节点的数据：</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 进入 MySQL 命令行后执行以下 SQL 语句，注意替换以下参数</span>
CHANGE MASTER <span class="token keyword">TO</span>
  MASTER_HOST<span class="token operator">=</span><span class="token string">&#39;mysql-master&#39;</span><span class="token punctuation">,</span>
  MASTER_PORT<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span>
  MASTER_USER<span class="token operator">=</span><span class="token string">&#39;synchronize-user&#39;</span><span class="token punctuation">,</span>
  MASTER_PASSWORD<span class="token operator">=</span><span class="token string">&#39;######&#39;</span><span class="token punctuation">,</span>
  MASTER_LOG_FILE<span class="token operator">=</span><span class="token string">&#39;[master_log_file]&#39;</span><span class="token punctuation">,</span>
  MASTER_LOG_POS<span class="token operator">=</span><span class="token punctuation">[</span>master_log_pos<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">START</span> SLAVE<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请替换 [master_log_file] 和 [master_log_pos] 为前面主节点 SHOW MASTER STATUS; 的输出。</p><h4 id="查看主从复制是否开启成功" tabindex="-1"><a class="header-anchor" href="#查看主从复制是否开启成功" aria-hidden="true">#</a> 查看主从复制是否开启成功</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> slave <span class="token keyword">status</span> \\G<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确保 Slave_IO_Running 和 Slave_SQL_Running 的值都为 Yes</p><p><img src="https://raw.githubusercontent.com/MonkeyB0ss/PicGo/master/MyNotes/images/202401131431675.png" alt=""></p><div class="hint-container tip"><p class="hint-container-title">注意</p><p>当 MySQL 主从复制中每次启动后，File 和 Position 的值都会变更，这可能会导致主从复制失败。这是因为主服务器的二进制日志（binary log）在关闭和重新启动时会生成新的文件，并且每个文件都有自己的位置信息。</p><p>解决这个问题的一种方法是使用 CHANGE MASTER TO 命令来更新从服务器的复制信息。在每次重新启动主从服务器后，你都需要获取新的主服务器的二进制日志文件名和位置，并将它们应用到从服务器上。以下是一般的步骤：</p><ol><li>在主服务器上执行以下 SQL 命令，获取新的二进制日志信息：<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> MASTER <span class="token keyword">STATUS</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>在从服务器上执行以下 SQL 命令，更新复制信息：<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>STOP SLAVE<span class="token punctuation">;</span>

CHANGE MASTER <span class="token keyword">TO</span>
  MASTER_LOG_FILE<span class="token operator">=</span><span class="token string">&#39;new_master_log_file&#39;</span><span class="token punctuation">,</span>
  MASTER_LOG_POS<span class="token operator">=</span>new_master_log_position<span class="token punctuation">;</span>

<span class="token keyword">START</span> SLAVE<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>请用主服务器输出的实际值替换 &#39;new_master_log_file&#39; 和 new_master_log_position。</li><li>检查从服务器的复制状态：<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> SLAVE <span class="token keyword">STATUS</span>\\G<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol></div><h2 id="启动第二个从节点" tabindex="-1"><a class="header-anchor" href="#启动第二个从节点" aria-hidden="true">#</a> 启动第二个从节点</h2><p>重复配置从节点步骤来配置第二个从节点 (mysql-slave2)。</p>`,31),i=[t];function p(o,c){return n(),a("div",null,i)}const u=s(l,[["render",p],["__file","mysql-master-slave.html.vue"]]);export{u as default};

const n=JSON.parse('{"key":"v-31ba6ac7","path":"/java/java-advanced/reflection/apply2.html","title":"反射应用二：获取运行时类的完整结构","lang":"zh-CN","frontmatter":{"date":"2022-12-04T00:00:00.000Z","category":"基础进阶","tag":["JAVA"]},"headers":[],"git":{"createdTime":1670087861000,"updatedTime":1670087861000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.73,"words":518},"filePathRelative":"java/java-advanced/reflection/apply2.md","localizedDate":"2022年12月4日","excerpt":"<h1> 反射应用二：获取运行时类的完整结构</h1>\\n<p>我们可以通过反射，获取对应的运行时类中所有的<code>属性</code>、<code>方法</code>、<code>构造器</code>、<code>父类</code>、<code>接口</code>、<code>父类的泛型</code>、<code>包</code>、<code>注解</code>、<code>异常</code>等。。。。</p>\\n<p>典型代码：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Test</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test1</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token class-name\\">Class</span> clazz <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token comment\\">// 获取属性结构</span>\\n\\t<span class=\\"token comment\\">// getFields():获取当前运行时类及其父类中声明为public访问权限的属性</span>\\n\\t<span class=\\"token class-name\\">Field</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> fields <span class=\\"token operator\\">=</span> clazz<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getFields</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Field</span> f <span class=\\"token operator\\">:</span> fields<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t\\n\\t<span class=\\"token comment\\">// getDeclaredFields():获取当前运行时类中声明的所属性。（不包含父类中声明的属性</span>\\n\\t<span class=\\"token class-name\\">Field</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> declaredFields <span class=\\"token operator\\">=</span> clazz<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getDeclaredFields</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Field</span> f <span class=\\"token operator\\">:</span> declaredFields<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

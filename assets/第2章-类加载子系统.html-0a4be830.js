const l=JSON.parse('{"key":"v-73cdf5ae","path":"/java/JVM/memory-garbageCollection/%E7%AC%AC2%E7%AB%A0-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F.html","title":"第2章-类加载子系统","lang":"zh-CN","frontmatter":{"date":"2023-03-09T00:00:00.000Z","category":"JVM","tag":["JAVA"]},"headers":[{"level":2,"title":"内存结构概述","slug":"内存结构概述","link":"#内存结构概述","children":[{"level":3,"title":"简图","slug":"简图","link":"#简图","children":[]},{"level":3,"title":"详细图","slug":"详细图","link":"#详细图","children":[]}]},{"level":2,"title":"类加载器子系统","slug":"类加载器子系统","link":"#类加载器子系统","children":[]},{"level":2,"title":"类加载器ClassLoader角色","slug":"类加载器classloader角色","link":"#类加载器classloader角色","children":[]},{"level":2,"title":"类加载过程","slug":"类加载过程","link":"#类加载过程","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"加载阶段","slug":"加载阶段","link":"#加载阶段","children":[]},{"level":3,"title":"链接阶段","slug":"链接阶段","link":"#链接阶段","children":[]},{"level":3,"title":"初始化阶段","slug":"初始化阶段","link":"#初始化阶段","children":[]},{"level":3,"title":"clinit()","slug":"clinit","link":"#clinit","children":[]}]},{"level":2,"title":"类加载器的分类","slug":"类加载器的分类","link":"#类加载器的分类","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"虚拟机自带的加载器","slug":"虚拟机自带的加载器","link":"#虚拟机自带的加载器","children":[]},{"level":3,"title":"用户自定义类加载器","slug":"用户自定义类加载器","link":"#用户自定义类加载器","children":[]},{"level":3,"title":"关于ClassLoader","slug":"关于classloader","link":"#关于classloader","children":[]}]},{"level":2,"title":"双亲委派机制","slug":"双亲委派机制","link":"#双亲委派机制","children":[{"level":3,"title":"双亲委派机制原理","slug":"双亲委派机制原理","link":"#双亲委派机制原理","children":[]},{"level":3,"title":"双亲委派机制代码演示","slug":"双亲委派机制代码演示","link":"#双亲委派机制代码演示","children":[]},{"level":3,"title":"双亲委派机制优势","slug":"双亲委派机制优势","link":"#双亲委派机制优势","children":[]}]},{"level":2,"title":"沙箱安全机制","slug":"沙箱安全机制","link":"#沙箱安全机制","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"如何判断两个class对象是否相同？","slug":"如何判断两个class对象是否相同","link":"#如何判断两个class对象是否相同","children":[]},{"level":3,"title":"对类加载器的引用","slug":"对类加载器的引用","link":"#对类加载器的引用","children":[]},{"level":3,"title":"类的主动使用和被动使用","slug":"类的主动使用和被动使用","link":"#类的主动使用和被动使用","children":[]}]}],"git":{"createdTime":1678375001000,"updatedTime":1678716384000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":2}]},"readingTime":{"minutes":18.62,"words":5587},"filePathRelative":"java/JVM/memory-garbageCollection/第2章-类加载子系统.md","localizedDate":"2023年3月9日","excerpt":"<h1> 第2章-类加载子系统</h1>\\n<h2> 内存结构概述</h2>\\n<h3> 简图</h3>\\n<p></p>\\n<h3> 详细图</h3>\\n<p></p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>方法区只有HotSpot虚拟机有，J9，JRockit都没有</p>\\n</div>\\n<p>如果自己想手写一个Java虚拟机的话，主要考虑哪些结构呢？</p>\\n<ol>\\n<li>类加载器</li>\\n<li>执行引擎</li>\\n</ol>\\n<h2> 类加载器子系统</h2>\\n<p><strong>类加载器子系统作用：</strong></p>"}');export{l as data};

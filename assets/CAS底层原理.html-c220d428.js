const e=JSON.parse('{"key":"v-c5de3364","path":"/other/audition/JUC/CAS%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html","title":"CAS底层原理","lang":"zh-CN","frontmatter":{"date":"2023-03-30T00:00:00.000Z","category":"面试","tag":["JUC"]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"代码使用","slug":"代码使用","link":"#代码使用","children":[]},{"level":2,"title":"CAS底层原理","slug":"cas底层原理-1","link":"#cas底层原理-1","children":[{"level":3,"title":"1、unsafe类","slug":"_1、unsafe类","link":"#_1、unsafe类","children":[]},{"level":3,"title":"2、变量valueOffset","slug":"_2、变量valueoffset","link":"#_2、变量valueoffset","children":[]},{"level":3,"title":"3、变量value用volatile修饰","slug":"_3、变量value用volatile修饰","link":"#_3、变量value用volatile修饰","children":[]}]},{"level":2,"title":"底层汇编","slug":"底层汇编","link":"#底层汇编","children":[]},{"level":2,"title":"CAS缺点","slug":"cas缺点","link":"#cas缺点","children":[]},{"level":2,"title":"ABA问题","slug":"aba问题","link":"#aba问题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"CAS","slug":"cas","link":"#cas","children":[]},{"level":3,"title":"CAS应用","slug":"cas应用","link":"#cas应用","children":[]}]}],"git":{"createdTime":1680189607000,"updatedTime":1680189607000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":6.44,"words":1932},"filePathRelative":"other/audition/JUC/CAS底层原理.md","localizedDate":"2023年3月30日","excerpt":"<h1> CAS底层原理</h1>\\n<h2> 概念</h2>\\n<p>CAS的全称是Compare-And-Swap，它是CPU并发原语</p>\\n<p>它的功能是判断内存某个位置的值是否为预期值，如果是则更改为新的值，这个过程是原子的</p>\\n<p>CAS并发原语体现在Java语言中就是sun.misc.Unsafe类的各个方法。调用UnSafe类中的CAS方法，JVM会帮我们实现出CAS汇编指令，这是一种完全依赖于硬件的功能，通过它实现了原子操作，再次强调，由于CAS是一种系统原语，原语属于操作系统用于范畴，是由若干条指令组成，用于完成某个功能的一个过程，并且原语的执行必须是连续的，在执行过程中不允许被中断，也就是说CAS是一条CPU的原子指令，不会造成所谓的数据不一致的问题，也就是说CAS是线程安全的。</p>"}');export{e as data};

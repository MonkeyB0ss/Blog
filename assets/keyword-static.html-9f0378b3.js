const e=JSON.parse('{"key":"v-38d6aec1","path":"/java/java-basic/object/lower/keyword-static.html","title":"关键字：static","lang":"zh-CN","frontmatter":{"date":"2022-11-25T00:00:00.000Z","category":"基础","tag":["JAVA"]},"headers":[{"level":2,"title":"可以用来修饰的结构","slug":"可以用来修饰的结构","link":"#可以用来修饰的结构","children":[]},{"level":2,"title":"static修饰属性：静态变量（或类变量）","slug":"static修饰属性-静态变量-或类变量","link":"#static修饰属性-静态变量-或类变量","children":[]},{"level":2,"title":"静态变量内存解析","slug":"静态变量内存解析","link":"#静态变量内存解析","children":[]},{"level":2,"title":"static修饰方法：静态方法、类方法","slug":"static修饰方法-静态方法、类方法","link":"#static修饰方法-静态方法、类方法","children":[]},{"level":2,"title":"static的注意点","slug":"static的注意点","link":"#static的注意点","children":[]},{"level":2,"title":"如何判定属性和方法应该使用static关键字","slug":"如何判定属性和方法应该使用static关键字","link":"#如何判定属性和方法应该使用static关键字","children":[]},{"level":2,"title":"使用举例","slug":"使用举例","link":"#使用举例","children":[]}],"git":{"createdTime":1669474184000,"updatedTime":1669649886000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":3}]},"readingTime":{"minutes":2.36,"words":707},"filePathRelative":"java/java-basic/object/lower/keyword-static.md","localizedDate":"2022年11月25日","excerpt":"<h1> 关键字：static</h1>\\n<p><code>static</code>: <strong>静态的</strong></p>\\n<h2> 可以用来修饰的结构</h2>\\n<p>主要用来修饰类的内部结构<br>\\n<code>属性</code>、<code>方法</code>、<code>代码块</code>、<code>内部类</code></p>\\n<h2> static修饰属性：静态变量（或类变量）</h2>\\n<ol>\\n<li>\\n<p>属性，是否使用static修饰，又分为：<code>静态属性</code> vs <code>非静态属性</code>(<code>实例变量</code>)</p>\\n<ul>\\n<li><code>实例变量</code>：我们创建了类的多个对象，每个对象都独立的拥一套类中的非静态属性。当修改其中一个对象中的非静态属性时，不会导致其他对象中同样的属性值的修改。</li>\\n<li><code>静态变量</code>：我们创建了类的多个对象，多个对象共享同一个静态变量。当通过某一个对象修改静态变量时，会导致其他对象调用此静态变量时，是修改过了的。</li>\\n</ul>\\n</li>\\n<li>\\n<p>static修饰属性的其他说明</p>\\n<ul>\\n<li>静态变量随着类的加载而加载。可以通过<code>类.静态变量</code>的方式进行调用</li>\\n<li>静态变量的加载要早于对象的创建。</li>\\n<li>由于类只会加载一次，则静态变量在内存中也只会存在一份：存在方法区的静态域中。</li>\\n</ul>\\n</li>\\n<li>\\n<p>静态属性举例：<code>System.out</code>; <code>Math.PI</code>;</p>\\n</li>\\n</ol>"}');export{e as data};

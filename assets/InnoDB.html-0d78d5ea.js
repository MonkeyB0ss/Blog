const e=JSON.parse('{"key":"v-1fd8fe0e","path":"/mysql/mysql-advanced/InnoDB.html","title":"第07章_InnoDB数据存储结构","lang":"zh-CN","frontmatter":{"date":"2022-12-13T00:00:00.000Z","category":"基础进阶","tag":["MySQL"]},"headers":[{"level":2,"title":"1. 数据库的存储结构：页","slug":"_1-数据库的存储结构-页","link":"#_1-数据库的存储结构-页","children":[{"level":3,"title":"1.1 磁盘与内存交互基本单位：页","slug":"_1-1-磁盘与内存交互基本单位-页","link":"#_1-1-磁盘与内存交互基本单位-页","children":[]},{"level":3,"title":"1.2 页结构概述","slug":"_1-2-页结构概述","link":"#_1-2-页结构概述","children":[]},{"level":3,"title":"1.3 页的上层结构","slug":"_1-3-页的上层结构","link":"#_1-3-页的上层结构","children":[]}]},{"level":2,"title":"2. 页的内部结构","slug":"_2-页的内部结构","link":"#_2-页的内部结构","children":[{"level":3,"title":"2.1 第1部分：文件头部和文件尾部","slug":"_2-1-第1部分-文件头部和文件尾部","link":"#_2-1-第1部分-文件头部和文件尾部","children":[]}]},{"level":2,"title":"2.1.1 File Header（文件头部）（38字节）","slug":"_2-1-1-file-header-文件头部-38字节","link":"#_2-1-1-file-header-文件头部-38字节","children":[]},{"level":2,"title":"2.1.2 File Trailer（文件尾部）（8字节）","slug":"_2-1-2-file-trailer-文件尾部-8字节","link":"#_2-1-2-file-trailer-文件尾部-8字节","children":[{"level":3,"title":"2.2 第2部分：空闲空间、用户记录和最小最大记录","slug":"_2-2-第2部分-空闲空间、用户记录和最小最大记录","link":"#_2-2-第2部分-空闲空间、用户记录和最小最大记录","children":[]}]},{"level":2,"title":"2.2.1 Free Space (空闲空间)","slug":"_2-2-1-free-space-空闲空间","link":"#_2-2-1-free-space-空闲空间","children":[]},{"level":2,"title":"2.2.2 User Records (用户记录)","slug":"_2-2-2-user-records-用户记录","link":"#_2-2-2-user-records-用户记录","children":[]},{"level":2,"title":"2.2.3 Infimum + Supremum（最小最大记录）","slug":"_2-2-3-infimum-supremum-最小最大记录","link":"#_2-2-3-infimum-supremum-最小最大记录","children":[{"level":3,"title":"2.3 第3部分：页目录和页面头部","slug":"_2-3-第3部分-页目录和页面头部","link":"#_2-3-第3部分-页目录和页面头部","children":[]}]},{"level":2,"title":"2.3.1 Page Directory（页目录）","slug":"_2-3-1-page-directory-页目录","link":"#_2-3-1-page-directory-页目录","children":[]},{"level":2,"title":"2.3.2 Page Header（页面头部）","slug":"_2-3-2-page-header-页面头部","link":"#_2-3-2-page-header-页面头部","children":[]},{"level":2,"title":"3. InnoDB行格式（或记录格式）","slug":"_3-innodb行格式-或记录格式","link":"#_3-innodb行格式-或记录格式","children":[{"level":3,"title":"3.1 指定行格式的语法","slug":"_3-1-指定行格式的语法","link":"#_3-1-指定行格式的语法","children":[]},{"level":3,"title":"3.2 COMPACT行格式","slug":"_3-2-compact行格式","link":"#_3-2-compact行格式","children":[]}]},{"level":2,"title":"3.2.1 变长字段长度列表","slug":"_3-2-1-变长字段长度列表","link":"#_3-2-1-变长字段长度列表","children":[]},{"level":2,"title":"3.2.2 NULL值列表","slug":"_3-2-2-null值列表","link":"#_3-2-2-null值列表","children":[]},{"level":2,"title":"3.2.3 记录头信息（5字节）","slug":"_3-2-3-记录头信息-5字节","link":"#_3-2-3-记录头信息-5字节","children":[]},{"level":2,"title":"3.2.4 记录的真实数据","slug":"_3-2-4-记录的真实数据","link":"#_3-2-4-记录的真实数据","children":[{"level":3,"title":"3.3 Dynamic和Compressed行格式","slug":"_3-3-dynamic和compressed行格式","link":"#_3-3-dynamic和compressed行格式","children":[]}]},{"level":2,"title":"4. 区、段和碎片区","slug":"_4-区、段和碎片区","link":"#_4-区、段和碎片区","children":[{"level":3,"title":"4.1 为什么要有区？","slug":"_4-1-为什么要有区","link":"#_4-1-为什么要有区","children":[]},{"level":3,"title":"4.2 为什么要有段？","slug":"_4-2-为什么要有段","link":"#_4-2-为什么要有段","children":[]},{"level":3,"title":"4.3 为什么要有碎片区？","slug":"_4-3-为什么要有碎片区","link":"#_4-3-为什么要有碎片区","children":[]},{"level":3,"title":"4.4 区的分类","slug":"_4-4-区的分类","link":"#_4-4-区的分类","children":[]}]}],"git":{"createdTime":1670945864000,"updatedTime":1670945864000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":21.57,"words":6471},"filePathRelative":"mysql/mysql-advanced/InnoDB.md","localizedDate":"2022年12月13日","excerpt":"<h1> 第07章_InnoDB数据存储结构</h1>\\n<h2> 1. 数据库的存储结构：页</h2>\\n<p>索引结构给我们提供了高效的索引方式，不过索引信息以及数据记录都保存在文件上的，确切说是存储在页结构中。另一方面，索引是在存储引擎中实现的，MySQL服务器上的<code>存储引擎</code>\\n负责对表中数据的读取和写入工作。不同存储引擎中<code>存放的格式</code>一般不同的，甚至有的存储引擎比如Memory都不用磁盘来存储数据。</p>\\n<p>由于<code>InnoDB</code>是MySQL的<code>默认存储引擎</code>，所以本章剖析InooDB存储引擎的数据存储结构。</p>"}');export{e as data};

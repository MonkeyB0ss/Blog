const e=JSON.parse('{"key":"v-f3af73a8","path":"/java/java-advanced/new-features/quote.html","title":"方法引用","lang":"zh-CN","frontmatter":{"date":"2022-12-04T00:00:00.000Z","category":"基础进阶","tag":["JAVA"]},"headers":[{"level":2,"title":"理解","slug":"理解","link":"#理解","children":[]},{"level":2,"title":"使用情境","slug":"使用情境","link":"#使用情境","children":[]},{"level":2,"title":"格式","slug":"格式","link":"#格式","children":[]},{"level":2,"title":"分为如下的三种情况","slug":"分为如下的三种情况","link":"#分为如下的三种情况","children":[]},{"level":2,"title":"要求","slug":"要求","link":"#要求","children":[]},{"level":2,"title":"使用建议","slug":"使用建议","link":"#使用建议","children":[]},{"level":2,"title":"使用举例","slug":"使用举例","link":"#使用举例","children":[]}],"git":{"createdTime":1670089651000,"updatedTime":1670089651000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":2.27,"words":681},"filePathRelative":"java/java-advanced/new-features/quote.md","localizedDate":"2022年12月4日","excerpt":"<h1> 方法引用</h1>\\n<h2> 理解</h2>\\n<p>方法引用可以看做是Lambda表达式深层次的表达。换句话说，方法引用就是Lambda表达式，也就是函数式接口的一个实例，通过方法的名字来指向一个方法。</p>\\n<h2> 使用情境</h2>\\n<p>当要传递给Lambda体的操作，已经实现的方法了，可以使用方法引用！</p>\\n<h2> 格式</h2>\\n<p>类(或对象) :: 方法名</p>\\n<h2> 分为如下的三种情况</h2>\\n<ul>\\n<li>情况1 对象 :: 非静态方法</li>\\n<li>情况2 类 :: 静态方法</li>\\n<li>情况3 类 :: 非静态方法</li>\\n</ul>"}');export{e as data};

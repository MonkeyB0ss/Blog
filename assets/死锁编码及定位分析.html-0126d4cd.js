const l=JSON.parse('{"key":"v-bc4804ee","path":"/other/audition/JUC/%E6%AD%BB%E9%94%81%E7%BC%96%E7%A0%81%E5%8F%8A%E5%AE%9A%E4%BD%8D%E5%88%86%E6%9E%90.html","title":"死锁编码及定位分析","lang":"zh-CN","frontmatter":{"date":"2023-04-02T00:00:00.000Z","category":"面试","tag":["JUC"]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"产生死锁的原因","slug":"产生死锁的原因","link":"#产生死锁的原因","children":[]},{"level":2,"title":"死锁产生的四个必要条件","slug":"死锁产生的四个必要条件","link":"#死锁产生的四个必要条件","children":[]},{"level":2,"title":"死锁代码","slug":"死锁代码","link":"#死锁代码","children":[]},{"level":2,"title":"如何排查死锁","slug":"如何排查死锁","link":"#如何排查死锁","children":[]}],"git":{"createdTime":1680449106000,"updatedTime":1680449908000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":2}]},"readingTime":{"minutes":2.37,"words":712},"filePathRelative":"other/audition/JUC/死锁编码及定位分析.md","localizedDate":"2023年4月2日","excerpt":"<h1> 死锁编码及定位分析</h1>\\n<h2> 概念</h2>\\n<p>死锁是指两个或多个以上的进程在执行过程中，因争夺资源而造成一种互相等待的现象，若无外力干涉那他们都将无法推进下去。如果资源充足，进程的资源请求都能够得到满足，死锁出现的可能性就很低，否则就会因争夺有限的资源而陷入死锁。</p>\\n<p></p>\\n<h2> 产生死锁的原因</h2>\\n<ul>\\n<li>系统资源不足</li>\\n<li>进程运行推进的顺序不对</li>\\n<li>资源分配不当</li>\\n</ul>\\n<h2> 死锁产生的四个必要条件</h2>\\n<ul>\\n<li>互斥\\n<ul>\\n<li>解决方法：把互斥的共享资源封装成可同时访问</li>\\n</ul>\\n</li>\\n<li>占有且等待\\n<ul>\\n<li>解决方法：进程请求资源时，要求它不占有任何其它资源，也就是它必须一次性申请到所有的资源，这种方式会导致资源效率低。</li>\\n</ul>\\n</li>\\n<li>非抢占式\\n<ul>\\n<li>解决方法：如果进程不能立即分配资源，要求它不占有任何其他资源，也就是只能够同时获得所有需要资源时，才执行分配操作</li>\\n</ul>\\n</li>\\n<li>循环等待\\n<ul>\\n<li>解决方法：对资源进行排序，要求进程按顺序请求资源。</li>\\n</ul>\\n</li>\\n</ul>"}');export{l as data};

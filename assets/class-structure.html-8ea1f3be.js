const l=JSON.parse(`{"key":"v-8406ca00","path":"/java/java-basic/object/upper/class-structure.html","title":"类的结构之一：属性","lang":"zh-CN","frontmatter":{"date":"2022-11-19T00:00:00.000Z","category":"基础","tag":["JAVA"]},"headers":[{"level":2,"title":"属性  🆚  局部变量","slug":"属性-🆚-局部变量","link":"#属性-🆚-局部变量","children":[{"level":3,"title":"相同点","slug":"相同点","link":"#相同点","children":[]},{"level":3,"title":"不同点","slug":"不同点","link":"#不同点","children":[]}]}],"git":{"createdTime":1669474184000,"updatedTime":1669474184000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"java/java-basic/object/upper/class-structure.md","localizedDate":"2022年11月19日","excerpt":"<h1> 类的结构之一：属性</h1>\\n<p>类的设计中，两个重要结构之一：属性</p>\\n<h2> <code>属性</code>  🆚  <code>局部变量</code></h2>\\n<h3> 相同点</h3>\\n<ol>\\n<li>定义变量的格式：数据类型  <code>变量名 = 变量值</code></li>\\n<li>先声明，后使用</li>\\n<li>变量都其对应的作用域</li>\\n</ol>\\n<h3> 不同点</h3>\\n<ol>\\n<li>在类中声明的位置的不同\\n<ul>\\n<li>属性：直接定义在类的一对{}内</li>\\n<li>局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</li>\\n</ul>\\n</li>\\n<li>关于权限修饰符的不同\\n<ul>\\n<li>属性：可以在声明属性时，指明其权限，使用权限修饰符。<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">常用的权限修饰符</p>\\n<p><code>private</code>、<code>public</code>、<code>缺省</code>、<code>protected</code></p>\\n</div>\\n</li>\\n<li>局部变量：不可以使用权限修饰符。</li>\\n</ul>\\n</li>\\n<li>默认初始化值的情况：\\n<ul>\\n<li>属性：类的属性，根据其类型，都默认初始化值。\\n<ul>\\n<li>整型（byte、short、int、long：0）</li>\\n<li>浮点型（float、double：0.0）</li>\\n<li>字符型（char：0 （或'\\\\u0000'））</li>\\n<li>布尔型（boolean：false）</li>\\n<li>引用数据类型（类、数组、接口：null）</li>\\n</ul>\\n</li>\\n<li>局部变量：没默认初始化值。<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>意味着，我们在调用局部变量之前，一定要显式赋值。</p>\\n</div>\\n</li>\\n</ul>\\n</li>\\n<li>在内存中加载的位置：\\n<ul>\\n<li>属性：加载到堆空间中（非static）</li>\\n<li>局部变量：加载到栈空间</li>\\n</ul>\\n</li>\\n</ol>"}`);export{l as data};

import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as s,e as n}from"./app.d651c0b0.js";const l="/Blog/assets/extends.426e62e6.png",i="/Blog/assets/extends2.8b958889.png",c={},t=n('<h1 id="面向对象的特征二-继承性" tabindex="-1"><a class="header-anchor" href="#面向对象的特征二-继承性" aria-hidden="true">#</a> 面向对象的特征二：继承性</h1><h2 id="为什么要有类的继承性-继承性的好处" tabindex="-1"><a class="header-anchor" href="#为什么要有类的继承性-继承性的好处" aria-hidden="true">#</a> 为什么要有类的继承性？(继承性的好处）</h2><ol><li>减少了代码的冗余，提高了代码的复用性</li><li>便于功能的扩展</li><li>为之后多态性的使用，提供了前提 <img src="'+l+`" alt="img.png" loading="lazy"></li></ol><h2 id="继承性的格式" tabindex="-1"><a class="header-anchor" href="#继承性的格式" aria-hidden="true">#</a> 继承性的格式</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// A:子类、派生类、subclass</span>
<span class="token comment">// B:父类、超类、基类、superclass</span>
<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="子类继承父类以后有哪些不同" tabindex="-1"><a class="header-anchor" href="#子类继承父类以后有哪些不同" aria-hidden="true">#</a> 子类继承父类以后有哪些不同？</h2><ol><li><p>体现：一旦子类A继承父类B以后，子类A中就获取了父类B中声明的所有的属性和方法。</p><p><strong>特别的，父类中声明为private的属性或方法，子类继承父类以后，仍然认为获取了父类中私的结构。只因为封装性的影响，使得子类不能直接调用父类的结构而已。</strong></p></li><li><p>子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。 子类和父类的关系，不同于子集和集合的关系。</p></li></ol><h2 id="java中继承性的说明" tabindex="-1"><a class="header-anchor" href="#java中继承性的说明" aria-hidden="true">#</a> Java中继承性的说明</h2><ol><li>一个类可以被多个子类继承。</li><li>Java中类的单继承性：一个类只能有一个父类</li><li>子父类是相对的概念。</li><li>子类直接继承的父类，称为：直接父类。间接继承的父类称为：间接父类</li><li>子类继承父类以后，就获取了直接父类以及所间接父类中声明的属性和方法 <img src="`+i+'" alt="img.png" loading="lazy"></li></ol><h2 id="java-lang-object类的理解" tabindex="-1"><a class="header-anchor" href="#java-lang-object类的理解" aria-hidden="true">#</a> java.lang.Object类的理解</h2><ol><li>如果我们没显式的声明一个类的父类的话，则此类继承于<code>java.lang.Object</code>类</li><li>所的java类（除<code>java.lang.Object</code>类之外都直接或间接的继承于<code>java.lang.Object</code>类</li><li>意味着，所的java类具有<code>java.lang.Object</code>类声明的功能。</li></ol>',11),d=[t];function o(r,h){return e(),s("div",null,d)}const m=a(c,[["render",o],["__file","class-extends.html.vue"]]);export{m as default};

import{d as defineAsyncComponent,r as ref,a as readonly,b as reactive,c as defineComponent,i as isString$1,e as isArray,f as dedupeHead,g as resolveLocalePath,o as onMounted,h as computed,j as h$2,k as isLinkHttp,l as removeLeadingSlash,m as inject,n as getCurrentInstance,p as camelize,q as capitalize,s as nextTick,u as unref,t as isRef,w as watch,v as getCurrentScope,x as onScopeDispose,y as shallowRef,z as watchEffect,T as Transition,A as useRouter,B as onBeforeUnmount,R as RouterLink,C as resolveComponent,D as isPlainObject,E as onUnmounted,F as provide,G as useRoute,H as isLinkMailto,I as toRef,J as isLinkTel,K as ensureEndingSlash,L as isLinkExternal,M as TransitionGroup,N as removeEndingSlash,O as useLink,P as resolveRoutePathFromUrl,Q as createRouter,S as START_LOCATION_NORMALIZED,U as createSSRApp,V as createWebHistory,W as RouterView}from"./framework-a20dc394.js";const scriptRel="modulepreload",assetsURL=function(Q){return"/"+Q},seen={},__vitePreload=function(nn,an,en){if(!an||an.length===0)return nn();const sn=document.getElementsByTagName("link");return Promise.all(an.map(tn=>{if(tn=assetsURL(tn),tn in seen)return;seen[tn]=!0;const on=tn.endsWith(".css"),ln=on?'[rel="stylesheet"]':"";if(!!en)for(let rn=sn.length-1;rn>=0;rn--){const un=sn[rn];if(un.href===tn&&(!on||un.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${tn}"]${ln}`))return;const cn=document.createElement("link");if(cn.rel=on?"stylesheet":scriptRel,on||(cn.as="script",cn.crossOrigin=""),cn.href=tn,document.head.appendChild(cn),on)return new Promise((rn,un)=>{cn.addEventListener("load",rn),cn.addEventListener("error",()=>un(new Error(`Unable to preload CSS for ${tn}`)))})})).then(()=>nn())},pagesData$1={"v-8daa1a0e":()=>__vitePreload(()=>import("./index.html-f08027b4.js"),[]).then(({data:Q})=>Q),"v-1844c2a8":()=>__vitePreload(()=>import("./intro.html-321c4582.js"),[]).then(({data:Q})=>Q),"v-78da0dd7":()=>__vitePreload(()=>import("./site.html-e8bec475.js"),[]).then(({data:Q})=>Q),"v-14c69af4":()=>__vitePreload(()=>import("./index.html-956dae05.js"),[]).then(({data:Q})=>Q),"v-6f3e1b94":()=>__vitePreload(()=>import("./elasticsearch.html-b8a797ab.js"),[]).then(({data:Q})=>Q),"v-71b07f05":()=>__vitePreload(()=>import("./agent.html-0f5b3abe.js"),[]).then(({data:Q})=>Q),"v-20984be0":()=>__vitePreload(()=>import("./factory.html-1215b441.js"),[]).then(({data:Q})=>Q),"v-28a7f309":()=>__vitePreload(()=>import("./single-threadsafety.html-340dd1e8.js"),[]).then(({data:Q})=>Q),"v-37b885a0":()=>__vitePreload(()=>import("./single.html-40cdc1d7.js"),[]).then(({data:Q})=>Q),"v-fbf47354":()=>__vitePreload(()=>import("./index.html-fab6971d.js"),[]).then(({data:Q})=>Q),"v-69e9ec58":()=>__vitePreload(()=>import("./index.html-8ba85899.js"),[]).then(({data:Q})=>Q),"v-2118a15a":()=>__vitePreload(()=>import("./java-array.html-cb7185f4.js"),[]).then(({data:Q})=>Q),"v-168baac4":()=>__vitePreload(()=>import("./java-basic.html-6ee36d2d.js"),[]).then(({data:Q})=>Q),"v-156e6cc6":()=>__vitePreload(()=>import("./java-exception.html-b6e2ae94.js"),[]).then(({data:Q})=>Q),"v-1fd8fe0e":()=>__vitePreload(()=>import("./InnoDB.html-0d78d5ea.js"),[]).then(({data:Q})=>Q),"v-17c1358e":()=>__vitePreload(()=>import("./MS-copy.html-4a9cb37c.js"),[]).then(({data:Q})=>Q),"v-2385bbd8":()=>__vitePreload(()=>import("./MVCC.html-f9723f55.js"),[]).then(({data:Q})=>Q),"v-3c744a85":()=>__vitePreload(()=>import("./NF.html-9d4f1bf6.js"),[]).then(({data:Q})=>Q),"v-5942281c":()=>__vitePreload(()=>import("./index.html-982af0fa.js"),[]).then(({data:Q})=>Q),"v-fa6dfa8a":()=>__vitePreload(()=>import("./backup.html-3e177d62.js"),[]).then(({data:Q})=>Q),"v-533df6da":()=>__vitePreload(()=>import("./data-dir.html-da99866e.js"),[]).then(({data:Q})=>Q),"v-7b212f24":()=>__vitePreload(()=>import("./engines.html-6f7d0977.js"),[]).then(({data:Q})=>Q),"v-c34dff74":()=>__vitePreload(()=>import("./index-create.html-1758eb45.js"),[]).then(({data:Q})=>Q),"v-7ac575f5":()=>__vitePreload(()=>import("./indexes.html-95eb65a7.js"),[]).then(({data:Q})=>Q),"v-2ee5941c":()=>__vitePreload(()=>import("./lock.html-f72c6600.js"),[]).then(({data:Q})=>Q),"v-55436e06":()=>__vitePreload(()=>import("./logical-architecture.html-0a5dca3d.js"),[]).then(({data:Q})=>Q),"v-9d59d500":()=>__vitePreload(()=>import("./optimize.html-cdcdb12d.js"),[]).then(({data:Q})=>Q),"v-4955c54e":()=>__vitePreload(()=>import("./other-log.html-4b461200.js"),[]).then(({data:Q})=>Q),"v-261f60e5":()=>__vitePreload(()=>import("./other.html-92d23fda.js"),[]).then(({data:Q})=>Q),"v-1d7189d1":()=>__vitePreload(()=>import("./setup-linux.html-13f6d69d.js"),[]).then(({data:Q})=>Q),"v-13cf2e7e":()=>__vitePreload(()=>import("./slow-query.html-c4ffd7db.js"),[]).then(({data:Q})=>Q),"v-1b8b1440":()=>__vitePreload(()=>import("./transaction-log.html-5ef595a5.js"),[]).then(({data:Q})=>Q),"v-0e25f8d7":()=>__vitePreload(()=>import("./transaction.html-d2c2bc60.js"),[]).then(({data:Q})=>Q),"v-34383352":()=>__vitePreload(()=>import("./user.html-2a99025c.js"),[]).then(({data:Q})=>Q),"v-24605052":()=>__vitePreload(()=>import("./index.html-1b653c1b.js"),[]).then(({data:Q})=>Q),"v-d9f5e2ec":()=>__vitePreload(()=>import("./constraint.html-cff14784.js"),[]).then(({data:Q})=>Q),"v-3a1185cb":()=>__vitePreload(()=>import("./create.html-f269e722.js"),[]).then(({data:Q})=>Q),"v-6dd3c849":()=>__vitePreload(()=>import("./crud.html-4e68aedc.js"),[]).then(({data:Q})=>Q),"v-371d7764":()=>__vitePreload(()=>import("./data-type.html-90132426.js"),[]).then(({data:Q})=>Q),"v-27d5225e":()=>__vitePreload(()=>import("./env.html-d47c6382.js"),[]).then(({data:Q})=>Q),"v-7dae299e":()=>__vitePreload(()=>import("./multi-table.html-acbce04b.js"),[]).then(({data:Q})=>Q),"v-903ed070":()=>__vitePreload(()=>import("./mysql-basic.html-f62925be.js"),[]).then(({data:Q})=>Q),"v-a3c94986":()=>__vitePreload(()=>import("./new-features.html-cf574723.js"),[]).then(({data:Q})=>Q),"v-37a1b8ba":()=>__vitePreload(()=>import("./operator.html-304b801b.js"),[]).then(({data:Q})=>Q),"v-7fdbac1d":()=>__vitePreload(()=>import("./order.html-c6a210f6.js"),[]).then(({data:Q})=>Q),"v-1a6efaf1":()=>__vitePreload(()=>import("./polymerization.html-da619f02.js"),[]).then(({data:Q})=>Q),"v-4aece2b8":()=>__vitePreload(()=>import("./procedure.html-3b8aaaa1.js"),[]).then(({data:Q})=>Q),"v-645471cb":()=>__vitePreload(()=>import("./select.html-9fb1a445.js"),[]).then(({data:Q})=>Q),"v-04028272":()=>__vitePreload(()=>import("./single-line.html-460342ad.js"),[]).then(({data:Q})=>Q),"v-4051f8e0":()=>__vitePreload(()=>import("./sub-query.html-2acaa243.js"),[]).then(({data:Q})=>Q),"v-000f2373":()=>__vitePreload(()=>import("./trigger.html-f320a797.js"),[]).then(({data:Q})=>Q),"v-1b76ee94":()=>__vitePreload(()=>import("./variables.html-4ead24ea.js"),[]).then(({data:Q})=>Q),"v-cbf45d7c":()=>__vitePreload(()=>import("./view.html-f2783ec1.js"),[]).then(({data:Q})=>Q),"v-7872cf98":()=>__vitePreload(()=>import("./oss.html-a38868c2.js"),[]).then(({data:Q})=>Q),"v-038b55a7":()=>__vitePreload(()=>import("./Github学习.html-ce79450a.js"),[]).then(({data:Q})=>Q),"v-d55d46bc":()=>__vitePreload(()=>import("./Linux相关命令.html-97052119.js"),[]).then(({data:Q})=>Q),"v-d4b45c94":()=>__vitePreload(()=>import("./第1章-JVM与Java体系结构.html-59d0a2ed.js"),[]).then(({data:Q})=>Q),"v-73cdf5ae":()=>__vitePreload(()=>import("./第2章-类加载子系统.html-0a4be830.js"),[]).then(({data:Q})=>Q),"v-4a0adab0":()=>__vitePreload(()=>import("./第3章-运行时数据区.html-473f4aaa.js"),[]).then(({data:Q})=>Q),"v-ba5bb3ce":()=>__vitePreload(()=>import("./第4章-虚拟机栈.html-fa983244.js"),[]).then(({data:Q})=>Q),"v-c96633fe":()=>__vitePreload(()=>import("./第5章-堆.html-7260d867.js"),[]).then(({data:Q})=>Q),"v-3c334100":()=>__vitePreload(()=>import("./IO.html-697e8667.js"),[]).then(({data:Q})=>Q),"v-2d4b817a":()=>__vitePreload(()=>import("./RandomAccessFile.html-9105b4ba.js"),[]).then(({data:Q})=>Q),"v-2a128727":()=>__vitePreload(()=>import("./buffered.html-7febd475.js"),[]).then(({data:Q})=>Q),"v-27d32cce":()=>__vitePreload(()=>import("./convert.html-1a61a293.js"),[]).then(({data:Q})=>Q),"v-f1e47790":()=>__vitePreload(()=>import("./file-reader.html-f2e41895.js"),[]).then(({data:Q})=>Q),"v-1bcd6b2a":()=>__vitePreload(()=>import("./file.html-4a79adbd.js"),[]).then(({data:Q})=>Q),"v-7032fff2":()=>__vitePreload(()=>import("./object.html-38bb0e9a.js"),[]).then(({data:Q})=>Q),"v-24b3e31c":()=>__vitePreload(()=>import("./other.html-07e8afe3.js"),[]).then(({data:Q})=>Q),"v-53c0be21":()=>__vitePreload(()=>import("./path.html-390949b2.js"),[]).then(({data:Q})=>Q),"v-536ec9a8":()=>__vitePreload(()=>import("./array-collection.html-b95859e1.js"),[]).then(({data:Q})=>Q),"v-87a74b40":()=>__vitePreload(()=>import("./collection.html-1e8ead0b.js"),[]).then(({data:Q})=>Q),"v-3be6a79f":()=>__vitePreload(()=>import("./collections.html-7d629cb4.js"),[]).then(({data:Q})=>Q),"v-9d865aa4":()=>__vitePreload(()=>import("./data-structure.html-fa31cb43.js"),[]).then(({data:Q})=>Q),"v-39d5b7d0":()=>__vitePreload(()=>import("./iterator.html-25e3c0d7.js"),[]).then(({data:Q})=>Q),"v-5531c820":()=>__vitePreload(()=>import("./list.html-8ce20db5.js"),[]).then(({data:Q})=>Q),"v-2e2d5738":()=>__vitePreload(()=>import("./map.html-104663cd.js"),[]).then(({data:Q})=>Q),"v-77e0b3f2":()=>__vitePreload(()=>import("./set.html-17e0f4f6.js"),[]).then(({data:Q})=>Q),"v-3470dfde":()=>__vitePreload(()=>import("./String.html-2a9e897d.js"),[]).then(({data:Q})=>Q),"v-6b47986a":()=>__vitePreload(()=>import("./StringBufferAndStringBuilder.html-23e10968.js"),[]).then(({data:Q})=>Q),"v-3549794e":()=>__vitePreload(()=>import("./comparator.html-4f648866.js"),[]).then(({data:Q})=>Q),"v-ae0fdffe":()=>__vitePreload(()=>import("./date.html-c2feed77.js"),[]).then(({data:Q})=>Q),"v-eeea671a":()=>__vitePreload(()=>import("./other.html-8dffa1b6.js"),[]).then(({data:Q})=>Q),"v-8c066f7c":()=>__vitePreload(()=>import("./time.html-604a4379.js"),[]).then(({data:Q})=>Q),"v-c50f2d5c":()=>__vitePreload(()=>import("./annotation.html-76961c80.js"),[]).then(({data:Q})=>Q),"v-60b668c0":()=>__vitePreload(()=>import("./enum.html-93a79c69.js"),[]).then(({data:Q})=>Q),"v-a75094a6":()=>__vitePreload(()=>import("./collection.html-2d14787e.js"),[]).then(({data:Q})=>Q),"v-3ff70dba":()=>__vitePreload(()=>import("./custom.html-28356568.js"),[]).then(({data:Q})=>Q),"v-005d1f24":()=>__vitePreload(()=>import("./extends.html-79acbc4b.js"),[]).then(({data:Q})=>Q),"v-558dbc20":()=>__vitePreload(()=>import("./generic.html-764c4a70.js"),[]).then(({data:Q})=>Q),"v-3e2fd871":()=>__vitePreload(()=>import("./wildcard.html-28456f78.js"),[]).then(({data:Q})=>Q),"v-8eaec032":()=>__vitePreload(()=>import("./concurrent.html-57d53cbf.js"),[]).then(({data:Q})=>Q),"v-88462fd6":()=>__vitePreload(()=>import("./introduce.html-b82c4043.js"),[]).then(({data:Q})=>Q),"v-0746fc97":()=>__vitePreload(()=>import("./thread-lifeCycle.html-6610dd38.js"),[]).then(({data:Q})=>Q),"v-7f6489a2":()=>__vitePreload(()=>import("./thread-methods.html-3b91e8a1.js"),[]).then(({data:Q})=>Q),"v-28368601":()=>__vitePreload(()=>import("./thread-new.html-58a9c714.js"),[]).then(({data:Q})=>Q),"v-09a2e130":()=>__vitePreload(()=>import("./thread-notify.html-e97504aa.js"),[]).then(({data:Q})=>Q),"v-7efbc941":()=>__vitePreload(()=>import("./thread-synchronization.html-43114042.js"),[]).then(({data:Q})=>Q),"v-1beca418":()=>__vitePreload(()=>import("./thread.html-fd343d05.js"),[]).then(({data:Q})=>Q),"v-5785aa50":()=>__vitePreload(()=>import("./InetAddress.html-620b8e64.js"),[]).then(({data:Q})=>Q),"v-5af222cf":()=>__vitePreload(()=>import("./TCP.html-21e60ff8.js"),[]).then(({data:Q})=>Q),"v-108cea22":()=>__vitePreload(()=>import("./UDP.html-27d0e95a.js"),[]).then(({data:Q})=>Q),"v-550533fe":()=>__vitePreload(()=>import("./URL.html-ad890cc0.js"),[]).then(({data:Q})=>Q),"v-84dcaf5c":()=>__vitePreload(()=>import("./FunctionalInterface.html-d264a29a.js"),[]).then(({data:Q})=>Q),"v-4ca20ce3":()=>__vitePreload(()=>import("./Lambda.html-2050516d.js"),[]).then(({data:Q})=>Q),"v-448856ac":()=>__vitePreload(()=>import("./Optional.html-e5281a2e.js"),[]).then(({data:Q})=>Q),"v-2d8b618e":()=>__vitePreload(()=>import("./StreamAPI.html-efc42844.js"),[]).then(({data:Q})=>Q),"v-463a97a4":()=>__vitePreload(()=>import("./constructor.html-704b1ba4.js"),[]).then(({data:Q})=>Q),"v-f3af73a8":()=>__vitePreload(()=>import("./quote.html-ff824f32.js"),[]).then(({data:Q})=>Q),"v-86f91362":()=>__vitePreload(()=>import("./Class.html-fce1854d.js"),[]).then(({data:Q})=>Q),"v-4c65917c":()=>__vitePreload(()=>import("./ClassLoader.html-0755be04.js"),[]).then(({data:Q})=>Q),"v-30059228":()=>__vitePreload(()=>import("./apply1.html-19943d2f.js"),[]).then(({data:Q})=>Q),"v-31ba6ac7":()=>__vitePreload(()=>import("./apply2.html-bc0c23d6.js"),[]).then(({data:Q})=>Q),"v-336f4366":()=>__vitePreload(()=>import("./apply3.html-b6eeaecf.js"),[]).then(({data:Q})=>Q),"v-35241c05":()=>__vitePreload(()=>import("./apply4.html-8f0ceadd.js"),[]).then(({data:Q})=>Q),"v-bfc9df00":()=>__vitePreload(()=>import("./reflection.html-53a0d722.js"),[]).then(({data:Q})=>Q),"v-9c6fc078":()=>__vitePreload(()=>import("./ArrayList.html-17a1cbef.js"),[]).then(({data:Q})=>Q),"v-ca1551da":()=>__vitePreload(()=>import("./exception-handling.html-0e9088ed.js"),[]).then(({data:Q})=>Q),"v-5af48dfd":()=>__vitePreload(()=>import("./validation.html-16a65806.js"),[]).then(({data:Q})=>Q),"v-3c7e9249":()=>__vitePreload(()=>import("./value-inject.html-16e47bfc.js"),[]).then(({data:Q})=>Q),"v-5ac030d7":()=>__vitePreload(()=>import("./ArrayList线程不安全的举例.html-464637e7.js"),[]).then(({data:Q})=>Q),"v-1987ca6a":()=>__vitePreload(()=>import("./AtomicInteger的ABA问题.html-18ef3c3e.js"),[]).then(({data:Q})=>Q),"v-c5de3364":()=>__vitePreload(()=>import("./CAS底层原理.html-c220d428.js"),[]).then(({data:Q})=>Q),"v-73e7cb85":()=>__vitePreload(()=>import("./CountDownLatch.html-b3d9ec3f.js"),[]).then(({data:Q})=>Q),"v-1450f1bc":()=>__vitePreload(()=>import("./CyclicBarrier.html-b7e3d692.js"),[]).then(({data:Q})=>Q),"v-50691d19":()=>__vitePreload(()=>import("./Java锁之公平锁和非公平锁.html-c75cbd0d.js"),[]).then(({data:Q})=>Q),"v-0237c77a":()=>__vitePreload(()=>import("./Java锁之可重入锁和递归锁.html-2687f37c.js"),[]).then(({data:Q})=>Q),"v-2fa9d5fe":()=>__vitePreload(()=>import("./Java锁之自旋锁.html-7a70494f.js"),[]).then(({data:Q})=>Q),"v-c60a508e":()=>__vitePreload(()=>import("./Java锁之读写锁.html-cf2e2e7e.js"),[]).then(({data:Q})=>Q),"v-5c881476":()=>__vitePreload(()=>import("./Semaphore.html-98088696.js"),[]).then(({data:Q})=>Q),"v-19968dde":()=>__vitePreload(()=>import("./Synchronized和Lock的区别.html-03ec6d5f.js"),[]).then(({data:Q})=>Q),"v-ee8ad7fc":()=>__vitePreload(()=>import("./Synchronized无法禁止指令重排却能保证有序性.html-18d587ed.js"),[]).then(({data:Q})=>Q),"v-6bdaf652":()=>__vitePreload(()=>import("./Volatile不保证原子性.html-963e7519.js"),[]).then(({data:Q})=>Q),"v-20305f5e":()=>__vitePreload(()=>import("./Volatile和JMM内存模型的可见性.html-75000570.js"),[]).then(({data:Q})=>Q),"v-0bc86b6e":()=>__vitePreload(()=>import("./Volatile的应用.html-ddf34d39.js"),[]).then(({data:Q})=>Q),"v-15868bda":()=>__vitePreload(()=>import("./Volatile禁止指令重排.html-defd6191.js"),[]).then(({data:Q})=>Q),"v-c1ed0eaa":()=>__vitePreload(()=>import("./乐观锁和悲观锁.html-2bea06d8.js"),[]).then(({data:Q})=>Q),"v-65b076e8":()=>__vitePreload(()=>import("./值传递和引用传递.html-9c4d9d2d.js"),[]).then(({data:Q})=>Q),"v-bc4804ee":()=>__vitePreload(()=>import("./死锁编码及定位分析.html-0126d4cd.js"),[]).then(({data:Q})=>Q),"v-55b50432":()=>__vitePreload(()=>import("./线程池.html-884245f4.js"),[]).then(({data:Q})=>Q),"v-7bf5fab5":()=>__vitePreload(()=>import("./阻塞队列.html-fcc697d7.js"),[]).then(({data:Q})=>Q),"v-ef415652":()=>__vitePreload(()=>import("./GC Roots.html-11afbd42.js"),[]).then(({data:Q})=>Q),"v-f5e4303e":()=>__vitePreload(()=>import("./JVM体系结构.html-6139c50e.js"),[]).then(({data:Q})=>Q),"v-26a155c8":()=>__vitePreload(()=>import("./JVM参数调优.html-e43bec4b.js"),[]).then(({data:Q})=>Q),"v-35242adc":()=>__vitePreload(()=>import("./Java中的引用.html-0725e706.js"),[]).then(({data:Q})=>Q),"v-ce39e9e0":()=>__vitePreload(()=>import("./Java内存溢出OOM.html-ef8f2ece.js"),[]).then(({data:Q})=>Q),"v-ff4661a4":()=>__vitePreload(()=>import("./垃圾收集器.html-b97b4837.js"),[]).then(({data:Q})=>Q),"v-2b13dc0f":()=>__vitePreload(()=>import("./class-coder.html-f4c90920.js"),[]).then(({data:Q})=>Q),"v-6f34ec08":()=>__vitePreload(()=>import("./class-innerClass.html-8566c263.js"),[]).then(({data:Q})=>Q),"v-b4d8d1b6":()=>__vitePreload(()=>import("./class-main.html-b9b37d00.js"),[]).then(({data:Q})=>Q),"v-1d981fe6":()=>__vitePreload(()=>import("./keyword-abstract.html-9a98c517.js"),[]).then(({data:Q})=>Q),"v-7fc97266":()=>__vitePreload(()=>import("./keyword-final.html-3e9a5d7e.js"),[]).then(({data:Q})=>Q),"v-a4d4d02c":()=>__vitePreload(()=>import("./keyword-interface.html-99a70e43.js"),[]).then(({data:Q})=>Q),"v-38d6aec1":()=>__vitePreload(()=>import("./keyword-static.html-9f0378b3.js"),[]).then(({data:Q})=>Q),"v-87a67b52":()=>__vitePreload(()=>import("./class-extends.html-a1929622.js"),[]).then(({data:Q})=>Q),"v-619018ba":()=>__vitePreload(()=>import("./class-object.html-079872c0.js"),[]).then(({data:Q})=>Q),"v-09bf4e9d":()=>__vitePreload(()=>import("./class-wrapper.html-eb852b51.js"),[]).then(({data:Q})=>Q),"v-5b3d0bee":()=>__vitePreload(()=>import("./instantiation.html-6a01e088.js"),[]).then(({data:Q})=>Q),"v-b16bee38":()=>__vitePreload(()=>import("./keyword-super.html-ffeaf68b.js"),[]).then(({data:Q})=>Q),"v-af4c19ea":()=>__vitePreload(()=>import("./override.html-0253469d.js"),[]).then(({data:Q})=>Q),"v-0a02e885":()=>__vitePreload(()=>import("./polymorphic.html-033b9670.js"),[]).then(({data:Q})=>Q),"v-2d386659":()=>__vitePreload(()=>import("./class-constructor.html-0b40f1a2.js"),[]).then(({data:Q})=>Q),"v-7db4671e":()=>__vitePreload(()=>import("./class-method.html-7c7ea308.js"),[]).then(({data:Q})=>Q),"v-8406ca00":()=>__vitePreload(()=>import("./class-structure.html-8ea1f3be.js"),[]).then(({data:Q})=>Q),"v-40bbb766":()=>__vitePreload(()=>import("./class.html-6323664c.js"),[]).then(({data:Q})=>Q),"v-6d24fe2c":()=>__vitePreload(()=>import("./encapsulation.html-01419f93.js"),[]).then(({data:Q})=>Q),"v-141471ea":()=>__vitePreload(()=>import("./keyword-import.html-537db68a.js"),[]).then(({data:Q})=>Q),"v-54fd2172":()=>__vitePreload(()=>import("./keyword-this.html-b5def6ac.js"),[]).then(({data:Q})=>Q),"v-3706649a":()=>__vitePreload(()=>import("./404.html-f04ced3e.js"),[]).then(({data:Q})=>Q),"v-74bc627b":()=>__vitePreload(()=>import("./index.html-272c41cd.js"),[]).then(({data:Q})=>Q),"v-e4cb1150":()=>__vitePreload(()=>import("./index.html-ebf81760.js"),[]).then(({data:Q})=>Q),"v-91ced15e":()=>__vitePreload(()=>import("./index.html-682d28a1.js"),[]).then(({data:Q})=>Q),"v-eb072ff4":()=>__vitePreload(()=>import("./index.html-26dea783.js"),[]).then(({data:Q})=>Q),"v-93b8c1ec":()=>__vitePreload(()=>import("./index.html-8db12da5.js"),[]).then(({data:Q})=>Q),"v-15054f24":()=>__vitePreload(()=>import("./index.html-e83c816d.js"),[]).then(({data:Q})=>Q),"v-4801eb2a":()=>__vitePreload(()=>import("./index.html-dbb57136.js"),[]).then(({data:Q})=>Q),"v-440250b4":()=>__vitePreload(()=>import("./index.html-a36d1b7d.js"),[]).then(({data:Q})=>Q),"v-6d0a1e7c":()=>__vitePreload(()=>import("./index.html-ec5226ff.js"),[]).then(({data:Q})=>Q),"v-1ad2b313":()=>__vitePreload(()=>import("./index.html-ce22bc8f.js"),[]).then(({data:Q})=>Q),"v-3a1fa58a":()=>__vitePreload(()=>import("./index.html-a5f7b32d.js"),[]).then(({data:Q})=>Q),"v-1b060d2a":()=>__vitePreload(()=>import("./index.html-59539091.js"),[]).then(({data:Q})=>Q),"v-7129cab8":()=>__vitePreload(()=>import("./index.html-a5d6837a.js"),[]).then(({data:Q})=>Q),"v-54757ce4":()=>__vitePreload(()=>import("./index.html-e24b67bc.js"),[]).then(({data:Q})=>Q),"v-6f31d83b":()=>__vitePreload(()=>import("./index.html-dc828760.js"),[]).then(({data:Q})=>Q),"v-8fb207d2":()=>__vitePreload(()=>import("./index.html-2c31c250.js"),[]).then(({data:Q})=>Q),"v-a7cf45e2":()=>__vitePreload(()=>import("./index.html-1671dc39.js"),[]).then(({data:Q})=>Q),"v-d044bd64":()=>__vitePreload(()=>import("./index.html-6c7b4d0a.js"),[]).then(({data:Q})=>Q),"v-0ecb4afc":()=>__vitePreload(()=>import("./index.html-f1d0178e.js"),[]).then(({data:Q})=>Q),"v-4fed98a4":()=>__vitePreload(()=>import("./index.html-f93a5b8f.js"),[]).then(({data:Q})=>Q),"v-0728b3a3":()=>__vitePreload(()=>import("./index.html-6cc86418.js"),[]).then(({data:Q})=>Q),"v-934e9182":()=>__vitePreload(()=>import("./index.html-4666b322.js"),[]).then(({data:Q})=>Q),"v-51873101":()=>__vitePreload(()=>import("./index.html-0594b70b.js"),[]).then(({data:Q})=>Q),"v-518735f8":()=>__vitePreload(()=>import("./index.html-38898c7e.js"),[]).then(({data:Q})=>Q),"v-14b300c6":()=>__vitePreload(()=>import("./index.html-3e133746.js"),[]).then(({data:Q})=>Q),"v-35cfc578":()=>__vitePreload(()=>import("./index.html-c6508984.js"),[]).then(({data:Q})=>Q),"v-a96c067c":()=>__vitePreload(()=>import("./index.html-7f8320e1.js"),[]).then(({data:Q})=>Q),"v-24198745":()=>__vitePreload(()=>import("./index.html-a994175a.js"),[]).then(({data:Q})=>Q),"v-5bc93818":()=>__vitePreload(()=>import("./index.html-e609b71c.js"),[]).then(({data:Q})=>Q),"v-744d024e":()=>__vitePreload(()=>import("./index.html-04a11369.js"),[]).then(({data:Q})=>Q),"v-e52c881c":()=>__vitePreload(()=>import("./index.html-d1922e1a.js"),[]).then(({data:Q})=>Q),"v-154dc4c4":()=>__vitePreload(()=>import("./index.html-c43655ce.js"),[]).then(({data:Q})=>Q),"v-01560935":()=>__vitePreload(()=>import("./index.html-b67245ca.js"),[]).then(({data:Q})=>Q),"v-13b66e9c":()=>__vitePreload(()=>import("./index.html-7877112e.js"),[]).then(({data:Q})=>Q),"v-b99e3274":()=>__vitePreload(()=>import("./index.html-9aecbbc5.js"),[]).then(({data:Q})=>Q),"v-2ae54282":()=>__vitePreload(()=>import("./index.html-02c26267.js"),[]).then(({data:Q})=>Q),"v-28a1d8bf":()=>__vitePreload(()=>import("./index.html-253ac6f7.js"),[]).then(({data:Q})=>Q),"v-64c6f0ae":()=>__vitePreload(()=>import("./index.html-3e6ca90c.js"),[]).then(({data:Q})=>Q),"v-a59eec78":()=>__vitePreload(()=>import("./index.html-9d365c54.js"),[]).then(({data:Q})=>Q),"v-49425445":()=>__vitePreload(()=>import("./index.html-6d03a066.js"),[]).then(({data:Q})=>Q),"v-2cce94e0":()=>__vitePreload(()=>import("./index.html-75e5d337.js"),[]).then(({data:Q})=>Q),"v-116a43a7":()=>__vitePreload(()=>import("./index.html-8b2f303a.js"),[]).then(({data:Q})=>Q),"v-05b88e01":()=>__vitePreload(()=>import("./index.html-a5ed9564.js"),[]).then(({data:Q})=>Q),"v-65f163c6":()=>__vitePreload(()=>import("./index.html-7f756195.js"),[]).then(({data:Q})=>Q),"v-1bee38ca":()=>__vitePreload(()=>import("./index.html-2d33cf66.js"),[]).then(({data:Q})=>Q),"v-09599fc8":()=>__vitePreload(()=>import("./index.html-d3cfa9b0.js"),[]).then(({data:Q})=>Q),"v-c8142fd8":()=>__vitePreload(()=>import("./index.html-bcdbb0b5.js"),[]).then(({data:Q})=>Q),"v-b30dba08":()=>__vitePreload(()=>import("./index.html-05f18af2.js"),[]).then(({data:Q})=>Q),"v-7d0ba9b4":()=>__vitePreload(()=>import("./index.html-ba8ffefb.js"),[]).then(({data:Q})=>Q),"v-b30dc3f6":()=>__vitePreload(()=>import("./index.html-9185a6ce.js"),[]).then(({data:Q})=>Q)},siteData$1=JSON.parse('{"base":"/","lang":"en-US","title":"","description":"","head":[["link",{"rel":"icon","href":"/favicon.ico"}],["link",{"rel":"manifest","href":"/manifest.webmanifest","crossorigin":"use-credentials"}],["meta",{"name":"theme-color","content":"#46bd87"}],["meta",{"name":"viewport","content":"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover"}]],"locales":{"/":{"lang":"zh-CN","title":"MonkeyBoss","description":"旨在整理所学，亦是梳理自己的知识体系"}}}'),pagesComponents={"v-8daa1a0e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0fe32e0f.js"),["assets/index.html-0fe32e0f.js","assets/framework-a20dc394.js"])),"v-1844c2a8":defineAsyncComponent(()=>__vitePreload(()=>import("./intro.html-3f2a5260.js"),["assets/intro.html-3f2a5260.js","assets/framework-a20dc394.js"])),"v-78da0dd7":defineAsyncComponent(()=>__vitePreload(()=>import("./site.html-b6c70d4d.js"),["assets/site.html-b6c70d4d.js","assets/framework-a20dc394.js"])),"v-14c69af4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-bb8520bc.js"),["assets/index.html-bb8520bc.js","assets/framework-a20dc394.js"])),"v-6f3e1b94":defineAsyncComponent(()=>__vitePreload(()=>import("./elasticsearch.html-fa8cbef6.js"),["assets/elasticsearch.html-fa8cbef6.js","assets/framework-a20dc394.js"])),"v-71b07f05":defineAsyncComponent(()=>__vitePreload(()=>import("./agent.html-5e059c86.js"),["assets/agent.html-5e059c86.js","assets/framework-a20dc394.js"])),"v-20984be0":defineAsyncComponent(()=>__vitePreload(()=>import("./factory.html-b4242b99.js"),["assets/factory.html-b4242b99.js","assets/framework-a20dc394.js"])),"v-28a7f309":defineAsyncComponent(()=>__vitePreload(()=>import("./single-threadsafety.html-ef65571f.js"),["assets/single-threadsafety.html-ef65571f.js","assets/framework-a20dc394.js"])),"v-37b885a0":defineAsyncComponent(()=>__vitePreload(()=>import("./single.html-ed192db8.js"),["assets/single.html-ed192db8.js","assets/framework-a20dc394.js"])),"v-fbf47354":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-492aa17c.js"),["assets/index.html-492aa17c.js","assets/framework-a20dc394.js"])),"v-69e9ec58":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-cd84bc34.js"),["assets/index.html-cd84bc34.js","assets/framework-a20dc394.js"])),"v-2118a15a":defineAsyncComponent(()=>__vitePreload(()=>import("./java-array.html-3ec7563f.js"),["assets/java-array.html-3ec7563f.js","assets/framework-a20dc394.js"])),"v-168baac4":defineAsyncComponent(()=>__vitePreload(()=>import("./java-basic.html-82ba9c29.js"),["assets/java-basic.html-82ba9c29.js","assets/framework-a20dc394.js"])),"v-156e6cc6":defineAsyncComponent(()=>__vitePreload(()=>import("./java-exception.html-525f6f36.js"),["assets/java-exception.html-525f6f36.js","assets/framework-a20dc394.js"])),"v-1fd8fe0e":defineAsyncComponent(()=>__vitePreload(()=>import("./InnoDB.html-ad001947.js"),["assets/InnoDB.html-ad001947.js","assets/framework-a20dc394.js"])),"v-17c1358e":defineAsyncComponent(()=>__vitePreload(()=>import("./MS-copy.html-139ddeb3.js"),["assets/MS-copy.html-139ddeb3.js","assets/framework-a20dc394.js"])),"v-2385bbd8":defineAsyncComponent(()=>__vitePreload(()=>import("./MVCC.html-8e389532.js"),["assets/MVCC.html-8e389532.js","assets/framework-a20dc394.js"])),"v-3c744a85":defineAsyncComponent(()=>__vitePreload(()=>import("./NF.html-a0b91d02.js"),["assets/NF.html-a0b91d02.js","assets/framework-a20dc394.js"])),"v-5942281c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8c1e0ad7.js"),["assets/index.html-8c1e0ad7.js","assets/framework-a20dc394.js"])),"v-fa6dfa8a":defineAsyncComponent(()=>__vitePreload(()=>import("./backup.html-154ffa14.js"),["assets/backup.html-154ffa14.js","assets/framework-a20dc394.js"])),"v-533df6da":defineAsyncComponent(()=>__vitePreload(()=>import("./data-dir.html-c88d6f17.js"),["assets/data-dir.html-c88d6f17.js","assets/framework-a20dc394.js"])),"v-7b212f24":defineAsyncComponent(()=>__vitePreload(()=>import("./engines.html-775d1054.js"),["assets/engines.html-775d1054.js","assets/framework-a20dc394.js"])),"v-c34dff74":defineAsyncComponent(()=>__vitePreload(()=>import("./index-create.html-619c502d.js"),["assets/index-create.html-619c502d.js","assets/framework-a20dc394.js"])),"v-7ac575f5":defineAsyncComponent(()=>__vitePreload(()=>import("./indexes.html-604744c5.js"),["assets/indexes.html-604744c5.js","assets/framework-a20dc394.js"])),"v-2ee5941c":defineAsyncComponent(()=>__vitePreload(()=>import("./lock.html-be7faa95.js"),["assets/lock.html-be7faa95.js","assets/framework-a20dc394.js"])),"v-55436e06":defineAsyncComponent(()=>__vitePreload(()=>import("./logical-architecture.html-78d7d2b7.js"),["assets/logical-architecture.html-78d7d2b7.js","assets/framework-a20dc394.js"])),"v-9d59d500":defineAsyncComponent(()=>__vitePreload(()=>import("./optimize.html-ee23b624.js"),["assets/optimize.html-ee23b624.js","assets/framework-a20dc394.js"])),"v-4955c54e":defineAsyncComponent(()=>__vitePreload(()=>import("./other-log.html-dbaefe22.js"),["assets/other-log.html-dbaefe22.js","assets/framework-a20dc394.js"])),"v-261f60e5":defineAsyncComponent(()=>__vitePreload(()=>import("./other.html-373ac102.js"),["assets/other.html-373ac102.js","assets/framework-a20dc394.js"])),"v-1d7189d1":defineAsyncComponent(()=>__vitePreload(()=>import("./setup-linux.html-f258e6e9.js"),["assets/setup-linux.html-f258e6e9.js","assets/framework-a20dc394.js"])),"v-13cf2e7e":defineAsyncComponent(()=>__vitePreload(()=>import("./slow-query.html-9585ca39.js"),["assets/slow-query.html-9585ca39.js","assets/framework-a20dc394.js"])),"v-1b8b1440":defineAsyncComponent(()=>__vitePreload(()=>import("./transaction-log.html-98e78e1f.js"),["assets/transaction-log.html-98e78e1f.js","assets/framework-a20dc394.js"])),"v-0e25f8d7":defineAsyncComponent(()=>__vitePreload(()=>import("./transaction.html-1433a133.js"),["assets/transaction.html-1433a133.js","assets/framework-a20dc394.js"])),"v-34383352":defineAsyncComponent(()=>__vitePreload(()=>import("./user.html-b89f9582.js"),["assets/user.html-b89f9582.js","assets/framework-a20dc394.js"])),"v-24605052":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-5846b381.js"),["assets/index.html-5846b381.js","assets/framework-a20dc394.js"])),"v-d9f5e2ec":defineAsyncComponent(()=>__vitePreload(()=>import("./constraint.html-b02e50fa.js"),["assets/constraint.html-b02e50fa.js","assets/framework-a20dc394.js"])),"v-3a1185cb":defineAsyncComponent(()=>__vitePreload(()=>import("./create.html-3f81d630.js"),["assets/create.html-3f81d630.js","assets/framework-a20dc394.js"])),"v-6dd3c849":defineAsyncComponent(()=>__vitePreload(()=>import("./crud.html-5b35332e.js"),["assets/crud.html-5b35332e.js","assets/framework-a20dc394.js"])),"v-371d7764":defineAsyncComponent(()=>__vitePreload(()=>import("./data-type.html-9cd3d6a5.js"),["assets/data-type.html-9cd3d6a5.js","assets/framework-a20dc394.js"])),"v-27d5225e":defineAsyncComponent(()=>__vitePreload(()=>import("./env.html-eea7e4b2.js"),["assets/env.html-eea7e4b2.js","assets/framework-a20dc394.js"])),"v-7dae299e":defineAsyncComponent(()=>__vitePreload(()=>import("./multi-table.html-66111c7f.js"),["assets/multi-table.html-66111c7f.js","assets/framework-a20dc394.js"])),"v-903ed070":defineAsyncComponent(()=>__vitePreload(()=>import("./mysql-basic.html-6d217dac.js"),["assets/mysql-basic.html-6d217dac.js","assets/framework-a20dc394.js"])),"v-a3c94986":defineAsyncComponent(()=>__vitePreload(()=>import("./new-features.html-001c724c.js"),["assets/new-features.html-001c724c.js","assets/framework-a20dc394.js"])),"v-37a1b8ba":defineAsyncComponent(()=>__vitePreload(()=>import("./operator.html-42e68521.js"),["assets/operator.html-42e68521.js","assets/framework-a20dc394.js"])),"v-7fdbac1d":defineAsyncComponent(()=>__vitePreload(()=>import("./order.html-25a72667.js"),["assets/order.html-25a72667.js","assets/framework-a20dc394.js"])),"v-1a6efaf1":defineAsyncComponent(()=>__vitePreload(()=>import("./polymerization.html-26fe60f1.js"),["assets/polymerization.html-26fe60f1.js","assets/framework-a20dc394.js"])),"v-4aece2b8":defineAsyncComponent(()=>__vitePreload(()=>import("./procedure.html-ede09297.js"),["assets/procedure.html-ede09297.js","assets/framework-a20dc394.js"])),"v-645471cb":defineAsyncComponent(()=>__vitePreload(()=>import("./select.html-0a6471ab.js"),["assets/select.html-0a6471ab.js","assets/framework-a20dc394.js"])),"v-04028272":defineAsyncComponent(()=>__vitePreload(()=>import("./single-line.html-254ded42.js"),["assets/single-line.html-254ded42.js","assets/framework-a20dc394.js"])),"v-4051f8e0":defineAsyncComponent(()=>__vitePreload(()=>import("./sub-query.html-f00cc0bc.js"),["assets/sub-query.html-f00cc0bc.js","assets/framework-a20dc394.js"])),"v-000f2373":defineAsyncComponent(()=>__vitePreload(()=>import("./trigger.html-7cd95c13.js"),["assets/trigger.html-7cd95c13.js","assets/framework-a20dc394.js"])),"v-1b76ee94":defineAsyncComponent(()=>__vitePreload(()=>import("./variables.html-97f82982.js"),["assets/variables.html-97f82982.js","assets/framework-a20dc394.js"])),"v-cbf45d7c":defineAsyncComponent(()=>__vitePreload(()=>import("./view.html-ebbc5ebb.js"),["assets/view.html-ebbc5ebb.js","assets/framework-a20dc394.js"])),"v-7872cf98":defineAsyncComponent(()=>__vitePreload(()=>import("./oss.html-168c468a.js"),["assets/oss.html-168c468a.js","assets/framework-a20dc394.js"])),"v-038b55a7":defineAsyncComponent(()=>__vitePreload(()=>import("./Github学习.html-c2ed6c97.js"),["assets/Github学习.html-c2ed6c97.js","assets/framework-a20dc394.js"])),"v-d55d46bc":defineAsyncComponent(()=>__vitePreload(()=>import("./Linux相关命令.html-e9cbff45.js"),["assets/Linux相关命令.html-e9cbff45.js","assets/framework-a20dc394.js"])),"v-d4b45c94":defineAsyncComponent(()=>__vitePreload(()=>import("./第1章-JVM与Java体系结构.html-7a846ad6.js"),["assets/第1章-JVM与Java体系结构.html-7a846ad6.js","assets/framework-a20dc394.js"])),"v-73cdf5ae":defineAsyncComponent(()=>__vitePreload(()=>import("./第2章-类加载子系统.html-34c7b8cc.js"),["assets/第2章-类加载子系统.html-34c7b8cc.js","assets/framework-a20dc394.js"])),"v-4a0adab0":defineAsyncComponent(()=>__vitePreload(()=>import("./第3章-运行时数据区.html-de30ea79.js"),["assets/第3章-运行时数据区.html-de30ea79.js","assets/framework-a20dc394.js"])),"v-ba5bb3ce":defineAsyncComponent(()=>__vitePreload(()=>import("./第4章-虚拟机栈.html-cd51c4ef.js"),["assets/第4章-虚拟机栈.html-cd51c4ef.js","assets/framework-a20dc394.js"])),"v-c96633fe":defineAsyncComponent(()=>__vitePreload(()=>import("./第5章-堆.html-3327ccd4.js"),["assets/第5章-堆.html-3327ccd4.js","assets/framework-a20dc394.js"])),"v-3c334100":defineAsyncComponent(()=>__vitePreload(()=>import("./IO.html-5eebff13.js"),["assets/IO.html-5eebff13.js","assets/framework-a20dc394.js"])),"v-2d4b817a":defineAsyncComponent(()=>__vitePreload(()=>import("./RandomAccessFile.html-cac8c953.js"),["assets/RandomAccessFile.html-cac8c953.js","assets/framework-a20dc394.js"])),"v-2a128727":defineAsyncComponent(()=>__vitePreload(()=>import("./buffered.html-604c1f52.js"),["assets/buffered.html-604c1f52.js","assets/framework-a20dc394.js"])),"v-27d32cce":defineAsyncComponent(()=>__vitePreload(()=>import("./convert.html-64b7ac40.js"),["assets/convert.html-64b7ac40.js","assets/framework-a20dc394.js"])),"v-f1e47790":defineAsyncComponent(()=>__vitePreload(()=>import("./file-reader.html-2a4dae1f.js"),["assets/file-reader.html-2a4dae1f.js","assets/framework-a20dc394.js"])),"v-1bcd6b2a":defineAsyncComponent(()=>__vitePreload(()=>import("./file.html-bb854213.js"),["assets/file.html-bb854213.js","assets/framework-a20dc394.js"])),"v-7032fff2":defineAsyncComponent(()=>__vitePreload(()=>import("./object.html-d4059676.js"),["assets/object.html-d4059676.js","assets/framework-a20dc394.js"])),"v-24b3e31c":defineAsyncComponent(()=>__vitePreload(()=>import("./other.html-695d6cf9.js"),["assets/other.html-695d6cf9.js","assets/framework-a20dc394.js"])),"v-53c0be21":defineAsyncComponent(()=>__vitePreload(()=>import("./path.html-d5e10af4.js"),["assets/path.html-d5e10af4.js","assets/framework-a20dc394.js"])),"v-536ec9a8":defineAsyncComponent(()=>__vitePreload(()=>import("./array-collection.html-fdbba4d2.js"),["assets/array-collection.html-fdbba4d2.js","assets/framework-a20dc394.js"])),"v-87a74b40":defineAsyncComponent(()=>__vitePreload(()=>import("./collection.html-879c4320.js"),["assets/collection.html-879c4320.js","assets/framework-a20dc394.js"])),"v-3be6a79f":defineAsyncComponent(()=>__vitePreload(()=>import("./collections.html-62e58cb6.js"),["assets/collections.html-62e58cb6.js","assets/framework-a20dc394.js"])),"v-9d865aa4":defineAsyncComponent(()=>__vitePreload(()=>import("./data-structure.html-cbd411b8.js"),["assets/data-structure.html-cbd411b8.js","assets/framework-a20dc394.js"])),"v-39d5b7d0":defineAsyncComponent(()=>__vitePreload(()=>import("./iterator.html-5dff423a.js"),["assets/iterator.html-5dff423a.js","assets/framework-a20dc394.js"])),"v-5531c820":defineAsyncComponent(()=>__vitePreload(()=>import("./list.html-83abea41.js"),["assets/list.html-83abea41.js","assets/framework-a20dc394.js"])),"v-2e2d5738":defineAsyncComponent(()=>__vitePreload(()=>import("./map.html-77e9d5ca.js"),["assets/map.html-77e9d5ca.js","assets/framework-a20dc394.js"])),"v-77e0b3f2":defineAsyncComponent(()=>__vitePreload(()=>import("./set.html-0293848b.js"),["assets/set.html-0293848b.js","assets/framework-a20dc394.js"])),"v-3470dfde":defineAsyncComponent(()=>__vitePreload(()=>import("./String.html-5bf2fa18.js"),["assets/String.html-5bf2fa18.js","assets/framework-a20dc394.js"])),"v-6b47986a":defineAsyncComponent(()=>__vitePreload(()=>import("./StringBufferAndStringBuilder.html-58ac4c87.js"),["assets/StringBufferAndStringBuilder.html-58ac4c87.js","assets/framework-a20dc394.js"])),"v-3549794e":defineAsyncComponent(()=>__vitePreload(()=>import("./comparator.html-a77dd687.js"),["assets/comparator.html-a77dd687.js","assets/framework-a20dc394.js"])),"v-ae0fdffe":defineAsyncComponent(()=>__vitePreload(()=>import("./date.html-0633fe80.js"),["assets/date.html-0633fe80.js","assets/framework-a20dc394.js"])),"v-eeea671a":defineAsyncComponent(()=>__vitePreload(()=>import("./other.html-adcfd3f6.js"),["assets/other.html-adcfd3f6.js","assets/framework-a20dc394.js"])),"v-8c066f7c":defineAsyncComponent(()=>__vitePreload(()=>import("./time.html-4045abab.js"),["assets/time.html-4045abab.js","assets/framework-a20dc394.js"])),"v-c50f2d5c":defineAsyncComponent(()=>__vitePreload(()=>import("./annotation.html-396c34e8.js"),["assets/annotation.html-396c34e8.js","assets/framework-a20dc394.js"])),"v-60b668c0":defineAsyncComponent(()=>__vitePreload(()=>import("./enum.html-f0d23085.js"),["assets/enum.html-f0d23085.js","assets/framework-a20dc394.js"])),"v-a75094a6":defineAsyncComponent(()=>__vitePreload(()=>import("./collection.html-e1bcdfee.js"),["assets/collection.html-e1bcdfee.js","assets/framework-a20dc394.js"])),"v-3ff70dba":defineAsyncComponent(()=>__vitePreload(()=>import("./custom.html-b5a794ca.js"),["assets/custom.html-b5a794ca.js","assets/framework-a20dc394.js"])),"v-005d1f24":defineAsyncComponent(()=>__vitePreload(()=>import("./extends.html-ab013926.js"),["assets/extends.html-ab013926.js","assets/framework-a20dc394.js"])),"v-558dbc20":defineAsyncComponent(()=>__vitePreload(()=>import("./generic.html-f6ab762e.js"),["assets/generic.html-f6ab762e.js","assets/framework-a20dc394.js"])),"v-3e2fd871":defineAsyncComponent(()=>__vitePreload(()=>import("./wildcard.html-ade3c842.js"),["assets/wildcard.html-ade3c842.js","assets/framework-a20dc394.js"])),"v-8eaec032":defineAsyncComponent(()=>__vitePreload(()=>import("./concurrent.html-21ce68f0.js"),["assets/concurrent.html-21ce68f0.js","assets/framework-a20dc394.js"])),"v-88462fd6":defineAsyncComponent(()=>__vitePreload(()=>import("./introduce.html-af7e1c75.js"),["assets/introduce.html-af7e1c75.js","assets/framework-a20dc394.js"])),"v-0746fc97":defineAsyncComponent(()=>__vitePreload(()=>import("./thread-lifeCycle.html-43ca73d2.js"),["assets/thread-lifeCycle.html-43ca73d2.js","assets/framework-a20dc394.js"])),"v-7f6489a2":defineAsyncComponent(()=>__vitePreload(()=>import("./thread-methods.html-6404e75d.js"),["assets/thread-methods.html-6404e75d.js","assets/framework-a20dc394.js"])),"v-28368601":defineAsyncComponent(()=>__vitePreload(()=>import("./thread-new.html-3cdbebf1.js"),["assets/thread-new.html-3cdbebf1.js","assets/framework-a20dc394.js"])),"v-09a2e130":defineAsyncComponent(()=>__vitePreload(()=>import("./thread-notify.html-48c83872.js"),["assets/thread-notify.html-48c83872.js","assets/framework-a20dc394.js"])),"v-7efbc941":defineAsyncComponent(()=>__vitePreload(()=>import("./thread-synchronization.html-1de5eca6.js"),["assets/thread-synchronization.html-1de5eca6.js","assets/framework-a20dc394.js"])),"v-1beca418":defineAsyncComponent(()=>__vitePreload(()=>import("./thread.html-62752890.js"),["assets/thread.html-62752890.js","assets/framework-a20dc394.js"])),"v-5785aa50":defineAsyncComponent(()=>__vitePreload(()=>import("./InetAddress.html-ee2eb889.js"),["assets/InetAddress.html-ee2eb889.js","assets/framework-a20dc394.js"])),"v-5af222cf":defineAsyncComponent(()=>__vitePreload(()=>import("./TCP.html-dfcef728.js"),["assets/TCP.html-dfcef728.js","assets/framework-a20dc394.js"])),"v-108cea22":defineAsyncComponent(()=>__vitePreload(()=>import("./UDP.html-4e9056f1.js"),["assets/UDP.html-4e9056f1.js","assets/framework-a20dc394.js"])),"v-550533fe":defineAsyncComponent(()=>__vitePreload(()=>import("./URL.html-cc805e25.js"),["assets/URL.html-cc805e25.js","assets/framework-a20dc394.js"])),"v-84dcaf5c":defineAsyncComponent(()=>__vitePreload(()=>import("./FunctionalInterface.html-eb98a988.js"),["assets/FunctionalInterface.html-eb98a988.js","assets/framework-a20dc394.js"])),"v-4ca20ce3":defineAsyncComponent(()=>__vitePreload(()=>import("./Lambda.html-035d0c2f.js"),["assets/Lambda.html-035d0c2f.js","assets/framework-a20dc394.js"])),"v-448856ac":defineAsyncComponent(()=>__vitePreload(()=>import("./Optional.html-1910bf98.js"),["assets/Optional.html-1910bf98.js","assets/framework-a20dc394.js"])),"v-2d8b618e":defineAsyncComponent(()=>__vitePreload(()=>import("./StreamAPI.html-442bf7e6.js"),["assets/StreamAPI.html-442bf7e6.js","assets/framework-a20dc394.js"])),"v-463a97a4":defineAsyncComponent(()=>__vitePreload(()=>import("./constructor.html-492e2206.js"),["assets/constructor.html-492e2206.js","assets/framework-a20dc394.js"])),"v-f3af73a8":defineAsyncComponent(()=>__vitePreload(()=>import("./quote.html-08ff6eaf.js"),["assets/quote.html-08ff6eaf.js","assets/framework-a20dc394.js"])),"v-86f91362":defineAsyncComponent(()=>__vitePreload(()=>import("./Class.html-c6c2f9e3.js"),["assets/Class.html-c6c2f9e3.js","assets/framework-a20dc394.js"])),"v-4c65917c":defineAsyncComponent(()=>__vitePreload(()=>import("./ClassLoader.html-4563548b.js"),["assets/ClassLoader.html-4563548b.js","assets/framework-a20dc394.js"])),"v-30059228":defineAsyncComponent(()=>__vitePreload(()=>import("./apply1.html-e077eb6d.js"),["assets/apply1.html-e077eb6d.js","assets/framework-a20dc394.js"])),"v-31ba6ac7":defineAsyncComponent(()=>__vitePreload(()=>import("./apply2.html-db1e4d51.js"),["assets/apply2.html-db1e4d51.js","assets/framework-a20dc394.js"])),"v-336f4366":defineAsyncComponent(()=>__vitePreload(()=>import("./apply3.html-349b2de1.js"),["assets/apply3.html-349b2de1.js","assets/framework-a20dc394.js"])),"v-35241c05":defineAsyncComponent(()=>__vitePreload(()=>import("./apply4.html-da69c2f7.js"),["assets/apply4.html-da69c2f7.js","assets/framework-a20dc394.js"])),"v-bfc9df00":defineAsyncComponent(()=>__vitePreload(()=>import("./reflection.html-c2d2463b.js"),["assets/reflection.html-c2d2463b.js","assets/framework-a20dc394.js"])),"v-9c6fc078":defineAsyncComponent(()=>__vitePreload(()=>import("./ArrayList.html-5c5d533d.js"),["assets/ArrayList.html-5c5d533d.js","assets/framework-a20dc394.js"])),"v-ca1551da":defineAsyncComponent(()=>__vitePreload(()=>import("./exception-handling.html-9b62a944.js"),["assets/exception-handling.html-9b62a944.js","assets/framework-a20dc394.js"])),"v-5af48dfd":defineAsyncComponent(()=>__vitePreload(()=>import("./validation.html-80ba5165.js"),["assets/validation.html-80ba5165.js","assets/framework-a20dc394.js"])),"v-3c7e9249":defineAsyncComponent(()=>__vitePreload(()=>import("./value-inject.html-7a51598f.js"),["assets/value-inject.html-7a51598f.js","assets/framework-a20dc394.js"])),"v-5ac030d7":defineAsyncComponent(()=>__vitePreload(()=>import("./ArrayList线程不安全的举例.html-12fb51a8.js"),["assets/ArrayList线程不安全的举例.html-12fb51a8.js","assets/framework-a20dc394.js"])),"v-1987ca6a":defineAsyncComponent(()=>__vitePreload(()=>import("./AtomicInteger的ABA问题.html-a8b702b0.js"),["assets/AtomicInteger的ABA问题.html-a8b702b0.js","assets/framework-a20dc394.js"])),"v-c5de3364":defineAsyncComponent(()=>__vitePreload(()=>import("./CAS底层原理.html-116c3120.js"),["assets/CAS底层原理.html-116c3120.js","assets/framework-a20dc394.js"])),"v-73e7cb85":defineAsyncComponent(()=>__vitePreload(()=>import("./CountDownLatch.html-3e503caf.js"),["assets/CountDownLatch.html-3e503caf.js","assets/framework-a20dc394.js"])),"v-1450f1bc":defineAsyncComponent(()=>__vitePreload(()=>import("./CyclicBarrier.html-67bff445.js"),["assets/CyclicBarrier.html-67bff445.js","assets/framework-a20dc394.js"])),"v-50691d19":defineAsyncComponent(()=>__vitePreload(()=>import("./Java锁之公平锁和非公平锁.html-89003cd1.js"),["assets/Java锁之公平锁和非公平锁.html-89003cd1.js","assets/framework-a20dc394.js"])),"v-0237c77a":defineAsyncComponent(()=>__vitePreload(()=>import("./Java锁之可重入锁和递归锁.html-ae051ea2.js"),["assets/Java锁之可重入锁和递归锁.html-ae051ea2.js","assets/framework-a20dc394.js"])),"v-2fa9d5fe":defineAsyncComponent(()=>__vitePreload(()=>import("./Java锁之自旋锁.html-4b10bed3.js"),["assets/Java锁之自旋锁.html-4b10bed3.js","assets/framework-a20dc394.js"])),"v-c60a508e":defineAsyncComponent(()=>__vitePreload(()=>import("./Java锁之读写锁.html-03bd6fa5.js"),["assets/Java锁之读写锁.html-03bd6fa5.js","assets/framework-a20dc394.js"])),"v-5c881476":defineAsyncComponent(()=>__vitePreload(()=>import("./Semaphore.html-05252cc3.js"),["assets/Semaphore.html-05252cc3.js","assets/framework-a20dc394.js"])),"v-19968dde":defineAsyncComponent(()=>__vitePreload(()=>import("./Synchronized和Lock的区别.html-c9b8acee.js"),["assets/Synchronized和Lock的区别.html-c9b8acee.js","assets/framework-a20dc394.js"])),"v-ee8ad7fc":defineAsyncComponent(()=>__vitePreload(()=>import("./Synchronized无法禁止指令重排却能保证有序性.html-d6aaa5dd.js"),["assets/Synchronized无法禁止指令重排却能保证有序性.html-d6aaa5dd.js","assets/framework-a20dc394.js"])),"v-6bdaf652":defineAsyncComponent(()=>__vitePreload(()=>import("./Volatile不保证原子性.html-53398fd4.js"),["assets/Volatile不保证原子性.html-53398fd4.js","assets/framework-a20dc394.js"])),"v-20305f5e":defineAsyncComponent(()=>__vitePreload(()=>import("./Volatile和JMM内存模型的可见性.html-f777ff0b.js"),["assets/Volatile和JMM内存模型的可见性.html-f777ff0b.js","assets/img-39052729.js","assets/framework-a20dc394.js"])),"v-0bc86b6e":defineAsyncComponent(()=>__vitePreload(()=>import("./Volatile的应用.html-bfdd842d.js"),["assets/Volatile的应用.html-bfdd842d.js","assets/framework-a20dc394.js"])),"v-15868bda":defineAsyncComponent(()=>__vitePreload(()=>import("./Volatile禁止指令重排.html-e486adee.js"),["assets/Volatile禁止指令重排.html-e486adee.js","assets/framework-a20dc394.js"])),"v-c1ed0eaa":defineAsyncComponent(()=>__vitePreload(()=>import("./乐观锁和悲观锁.html-bf661f5c.js"),["assets/乐观锁和悲观锁.html-bf661f5c.js","assets/img-39052729.js","assets/framework-a20dc394.js"])),"v-65b076e8":defineAsyncComponent(()=>__vitePreload(()=>import("./值传递和引用传递.html-2f6e206d.js"),["assets/值传递和引用传递.html-2f6e206d.js","assets/framework-a20dc394.js"])),"v-bc4804ee":defineAsyncComponent(()=>__vitePreload(()=>import("./死锁编码及定位分析.html-ea9075eb.js"),["assets/死锁编码及定位分析.html-ea9075eb.js","assets/framework-a20dc394.js"])),"v-55b50432":defineAsyncComponent(()=>__vitePreload(()=>import("./线程池.html-542b96e9.js"),["assets/线程池.html-542b96e9.js","assets/framework-a20dc394.js"])),"v-7bf5fab5":defineAsyncComponent(()=>__vitePreload(()=>import("./阻塞队列.html-0b7f698c.js"),["assets/阻塞队列.html-0b7f698c.js","assets/framework-a20dc394.js"])),"v-ef415652":defineAsyncComponent(()=>__vitePreload(()=>import("./GC Roots.html-9611785d.js"),["assets/GC Roots.html-9611785d.js","assets/framework-a20dc394.js"])),"v-f5e4303e":defineAsyncComponent(()=>__vitePreload(()=>import("./JVM体系结构.html-723258d0.js"),["assets/JVM体系结构.html-723258d0.js","assets/framework-a20dc394.js"])),"v-26a155c8":defineAsyncComponent(()=>__vitePreload(()=>import("./JVM参数调优.html-3e525a41.js"),["assets/JVM参数调优.html-3e525a41.js","assets/framework-a20dc394.js"])),"v-35242adc":defineAsyncComponent(()=>__vitePreload(()=>import("./Java中的引用.html-0cdb242b.js"),["assets/Java中的引用.html-0cdb242b.js","assets/framework-a20dc394.js"])),"v-ce39e9e0":defineAsyncComponent(()=>__vitePreload(()=>import("./Java内存溢出OOM.html-e02dfd56.js"),["assets/Java内存溢出OOM.html-e02dfd56.js","assets/framework-a20dc394.js"])),"v-ff4661a4":defineAsyncComponent(()=>__vitePreload(()=>import("./垃圾收集器.html-0b3f2e73.js"),["assets/垃圾收集器.html-0b3f2e73.js","assets/framework-a20dc394.js"])),"v-2b13dc0f":defineAsyncComponent(()=>__vitePreload(()=>import("./class-coder.html-5c4c6e7f.js"),["assets/class-coder.html-5c4c6e7f.js","assets/framework-a20dc394.js"])),"v-6f34ec08":defineAsyncComponent(()=>__vitePreload(()=>import("./class-innerClass.html-17751c01.js"),["assets/class-innerClass.html-17751c01.js","assets/framework-a20dc394.js"])),"v-b4d8d1b6":defineAsyncComponent(()=>__vitePreload(()=>import("./class-main.html-c4ca4859.js"),["assets/class-main.html-c4ca4859.js","assets/framework-a20dc394.js"])),"v-1d981fe6":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-abstract.html-89664212.js"),["assets/keyword-abstract.html-89664212.js","assets/framework-a20dc394.js"])),"v-7fc97266":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-final.html-7e2253d3.js"),["assets/keyword-final.html-7e2253d3.js","assets/framework-a20dc394.js"])),"v-a4d4d02c":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-interface.html-58e91547.js"),["assets/keyword-interface.html-58e91547.js","assets/framework-a20dc394.js"])),"v-38d6aec1":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-static.html-e7e35739.js"),["assets/keyword-static.html-e7e35739.js","assets/framework-a20dc394.js"])),"v-87a67b52":defineAsyncComponent(()=>__vitePreload(()=>import("./class-extends.html-f6656d7f.js"),["assets/class-extends.html-f6656d7f.js","assets/framework-a20dc394.js"])),"v-619018ba":defineAsyncComponent(()=>__vitePreload(()=>import("./class-object.html-4312c7bc.js"),["assets/class-object.html-4312c7bc.js","assets/framework-a20dc394.js"])),"v-09bf4e9d":defineAsyncComponent(()=>__vitePreload(()=>import("./class-wrapper.html-ac806326.js"),["assets/class-wrapper.html-ac806326.js","assets/framework-a20dc394.js"])),"v-5b3d0bee":defineAsyncComponent(()=>__vitePreload(()=>import("./instantiation.html-86b6baf6.js"),["assets/instantiation.html-86b6baf6.js","assets/framework-a20dc394.js"])),"v-b16bee38":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-super.html-2034bacc.js"),["assets/keyword-super.html-2034bacc.js","assets/framework-a20dc394.js"])),"v-af4c19ea":defineAsyncComponent(()=>__vitePreload(()=>import("./override.html-f3a56fe1.js"),["assets/override.html-f3a56fe1.js","assets/framework-a20dc394.js"])),"v-0a02e885":defineAsyncComponent(()=>__vitePreload(()=>import("./polymorphic.html-c6039d8b.js"),["assets/polymorphic.html-c6039d8b.js","assets/framework-a20dc394.js"])),"v-2d386659":defineAsyncComponent(()=>__vitePreload(()=>import("./class-constructor.html-a2e892cb.js"),["assets/class-constructor.html-a2e892cb.js","assets/framework-a20dc394.js"])),"v-7db4671e":defineAsyncComponent(()=>__vitePreload(()=>import("./class-method.html-5b80caf6.js"),["assets/class-method.html-5b80caf6.js","assets/framework-a20dc394.js"])),"v-8406ca00":defineAsyncComponent(()=>__vitePreload(()=>import("./class-structure.html-71d8ee44.js"),["assets/class-structure.html-71d8ee44.js","assets/framework-a20dc394.js"])),"v-40bbb766":defineAsyncComponent(()=>__vitePreload(()=>import("./class.html-c496f660.js"),["assets/class.html-c496f660.js","assets/framework-a20dc394.js"])),"v-6d24fe2c":defineAsyncComponent(()=>__vitePreload(()=>import("./encapsulation.html-a7da56c6.js"),["assets/encapsulation.html-a7da56c6.js","assets/framework-a20dc394.js"])),"v-141471ea":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-import.html-72748b81.js"),["assets/keyword-import.html-72748b81.js","assets/framework-a20dc394.js"])),"v-54fd2172":defineAsyncComponent(()=>__vitePreload(()=>import("./keyword-this.html-5524d4f5.js"),["assets/keyword-this.html-5524d4f5.js","assets/framework-a20dc394.js"])),"v-3706649a":defineAsyncComponent(()=>__vitePreload(()=>import("./404.html-4d30c539.js"),["assets/404.html-4d30c539.js","assets/framework-a20dc394.js"])),"v-74bc627b":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-6314be1a.js"),["assets/index.html-6314be1a.js","assets/framework-a20dc394.js"])),"v-e4cb1150":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-1a481e69.js"),["assets/index.html-1a481e69.js","assets/framework-a20dc394.js"])),"v-91ced15e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-78b635ac.js"),["assets/index.html-78b635ac.js","assets/framework-a20dc394.js"])),"v-eb072ff4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-b5d29ceb.js"),["assets/index.html-b5d29ceb.js","assets/framework-a20dc394.js"])),"v-93b8c1ec":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-33f0889b.js"),["assets/index.html-33f0889b.js","assets/framework-a20dc394.js"])),"v-15054f24":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-aab95617.js"),["assets/index.html-aab95617.js","assets/framework-a20dc394.js"])),"v-4801eb2a":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-75eff59d.js"),["assets/index.html-75eff59d.js","assets/framework-a20dc394.js"])),"v-440250b4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-1580396b.js"),["assets/index.html-1580396b.js","assets/framework-a20dc394.js"])),"v-6d0a1e7c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-4b304d51.js"),["assets/index.html-4b304d51.js","assets/framework-a20dc394.js"])),"v-1ad2b313":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-930edb4d.js"),["assets/index.html-930edb4d.js","assets/framework-a20dc394.js"])),"v-3a1fa58a":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-4bcc3bb2.js"),["assets/index.html-4bcc3bb2.js","assets/framework-a20dc394.js"])),"v-1b060d2a":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8c930677.js"),["assets/index.html-8c930677.js","assets/framework-a20dc394.js"])),"v-7129cab8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-bd659930.js"),["assets/index.html-bd659930.js","assets/framework-a20dc394.js"])),"v-54757ce4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-d0464b95.js"),["assets/index.html-d0464b95.js","assets/framework-a20dc394.js"])),"v-6f31d83b":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-b006dca0.js"),["assets/index.html-b006dca0.js","assets/framework-a20dc394.js"])),"v-8fb207d2":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-435530dd.js"),["assets/index.html-435530dd.js","assets/framework-a20dc394.js"])),"v-a7cf45e2":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-5af24fa6.js"),["assets/index.html-5af24fa6.js","assets/framework-a20dc394.js"])),"v-d044bd64":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-faf7bb35.js"),["assets/index.html-faf7bb35.js","assets/framework-a20dc394.js"])),"v-0ecb4afc":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-2f8eee79.js"),["assets/index.html-2f8eee79.js","assets/framework-a20dc394.js"])),"v-4fed98a4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-7b17cb8a.js"),["assets/index.html-7b17cb8a.js","assets/framework-a20dc394.js"])),"v-0728b3a3":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-41e499c3.js"),["assets/index.html-41e499c3.js","assets/framework-a20dc394.js"])),"v-934e9182":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-390ae22d.js"),["assets/index.html-390ae22d.js","assets/framework-a20dc394.js"])),"v-51873101":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0b8dd8de.js"),["assets/index.html-0b8dd8de.js","assets/framework-a20dc394.js"])),"v-518735f8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-3187edd4.js"),["assets/index.html-3187edd4.js","assets/framework-a20dc394.js"])),"v-14b300c6":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-20625951.js"),["assets/index.html-20625951.js","assets/framework-a20dc394.js"])),"v-35cfc578":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f104739b.js"),["assets/index.html-f104739b.js","assets/framework-a20dc394.js"])),"v-a96c067c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-7f7423e5.js"),["assets/index.html-7f7423e5.js","assets/framework-a20dc394.js"])),"v-24198745":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-cbad673e.js"),["assets/index.html-cbad673e.js","assets/framework-a20dc394.js"])),"v-5bc93818":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-c98c6c6f.js"),["assets/index.html-c98c6c6f.js","assets/framework-a20dc394.js"])),"v-744d024e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-be75bfa1.js"),["assets/index.html-be75bfa1.js","assets/framework-a20dc394.js"])),"v-e52c881c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-76742899.js"),["assets/index.html-76742899.js","assets/framework-a20dc394.js"])),"v-154dc4c4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-348347a6.js"),["assets/index.html-348347a6.js","assets/framework-a20dc394.js"])),"v-01560935":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-07a2d87f.js"),["assets/index.html-07a2d87f.js","assets/framework-a20dc394.js"])),"v-13b66e9c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-52901171.js"),["assets/index.html-52901171.js","assets/framework-a20dc394.js"])),"v-b99e3274":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-01f013c9.js"),["assets/index.html-01f013c9.js","assets/framework-a20dc394.js"])),"v-2ae54282":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f1d2d3d8.js"),["assets/index.html-f1d2d3d8.js","assets/framework-a20dc394.js"])),"v-28a1d8bf":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-c477db10.js"),["assets/index.html-c477db10.js","assets/framework-a20dc394.js"])),"v-64c6f0ae":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-fb740bf5.js"),["assets/index.html-fb740bf5.js","assets/framework-a20dc394.js"])),"v-a59eec78":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-a77abae7.js"),["assets/index.html-a77abae7.js","assets/framework-a20dc394.js"])),"v-49425445":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ff27dc05.js"),["assets/index.html-ff27dc05.js","assets/framework-a20dc394.js"])),"v-2cce94e0":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-59ebe96c.js"),["assets/index.html-59ebe96c.js","assets/framework-a20dc394.js"])),"v-116a43a7":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-9f578c53.js"),["assets/index.html-9f578c53.js","assets/framework-a20dc394.js"])),"v-05b88e01":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-98196210.js"),["assets/index.html-98196210.js","assets/framework-a20dc394.js"])),"v-65f163c6":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0556e1b5.js"),["assets/index.html-0556e1b5.js","assets/framework-a20dc394.js"])),"v-1bee38ca":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-52a0d6e5.js"),["assets/index.html-52a0d6e5.js","assets/framework-a20dc394.js"])),"v-09599fc8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ba0559d0.js"),["assets/index.html-ba0559d0.js","assets/framework-a20dc394.js"])),"v-c8142fd8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8a2ef066.js"),["assets/index.html-8a2ef066.js","assets/framework-a20dc394.js"])),"v-b30dba08":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-5f753d0b.js"),["assets/index.html-5f753d0b.js","assets/framework-a20dc394.js"])),"v-7d0ba9b4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-144dbb57.js"),["assets/index.html-144dbb57.js","assets/framework-a20dc394.js"])),"v-b30dc3f6":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-16467b5d.js"),["assets/index.html-16467b5d.js","assets/framework-a20dc394.js"]))};var layoutsSymbol=Symbol(""),pagesData=ref(pagesData$1),pageDataEmpty=readonly({key:"",path:"",title:"",lang:"",frontmatter:{},headers:[]}),pageData=ref(pageDataEmpty),usePageData=()=>pageData,pageFrontmatterSymbol=Symbol(""),usePageFrontmatter=()=>{const Q=inject(pageFrontmatterSymbol);if(!Q)throw new Error("usePageFrontmatter() is called without provider.");return Q},pageHeadSymbol=Symbol(""),usePageHead=()=>{const Q=inject(pageHeadSymbol);if(!Q)throw new Error("usePageHead() is called without provider.");return Q},pageHeadTitleSymbol=Symbol(""),usePageHeadTitle=()=>{const Q=inject(pageHeadTitleSymbol);if(!Q)throw new Error("usePageHeadTitle() is called without provider.");return Q},pageLangSymbol=Symbol(""),usePageLang=()=>{const Q=inject(pageLangSymbol);if(!Q)throw new Error("usePageLang() is called without provider.");return Q},pageLayoutSymbol=Symbol(""),usePageLayout=()=>{const Q=inject(pageLayoutSymbol);if(!Q)throw new Error("usePageLayout() is called without provider.");return Q},routeLocaleSymbol=Symbol(""),useRouteLocale=()=>{const Q=inject(routeLocaleSymbol);if(!Q)throw new Error("useRouteLocale() is called without provider.");return Q},siteData=ref(siteData$1),useSiteData=()=>siteData,siteLocaleDataSymbol=Symbol(""),useSiteLocaleData=()=>{const Q=inject(siteLocaleDataSymbol);if(!Q)throw new Error("useSiteLocaleData() is called without provider.");return Q},updateHeadSymbol=Symbol(""),LAYOUT_NAME_DEFAULT="Layout",LAYOUT_NAME_NOT_FOUND="NotFound",resolvers=reactive({resolveLayouts:Q=>Q.reduce((nn,an)=>({...nn,...an.layouts}),{}),resolvePageData:async Q=>{const nn=pagesData.value[Q];return await(nn==null?void 0:nn())??pageDataEmpty},resolvePageFrontmatter:Q=>Q.frontmatter,resolvePageHead:(Q,nn,an)=>{const en=isString$1(nn.description)?nn.description:an.description,sn=[...isArray(nn.head)?nn.head:[],...an.head,["title",{},Q],["meta",{name:"description",content:en}]];return dedupeHead(sn)},resolvePageHeadTitle:(Q,nn)=>[Q.title,nn.title].filter(an=>!!an).join(" | "),resolvePageLang:Q=>Q.lang||"en",resolvePageLayout:(Q,nn)=>{let an;if(Q.path){const en=Q.frontmatter.layout;isString$1(en)?an=en:an=LAYOUT_NAME_DEFAULT}else an=LAYOUT_NAME_NOT_FOUND;return nn[an]},resolveRouteLocale:(Q,nn)=>resolveLocalePath(Q,nn),resolveSiteLocaleData:(Q,nn)=>({...Q,...Q.locales[nn]})}),ClientOnly=defineComponent({name:"ClientOnly",setup(Q,nn){const an=ref(!1);return onMounted(()=>{an.value=!0}),()=>{var en,sn;return an.value?(sn=(en=nn.slots).default)==null?void 0:sn.call(en):null}}}),Content=defineComponent({name:"Content",props:{pageKey:{type:String,required:!1,default:""}},setup(Q){const nn=usePageData(),an=computed(()=>pagesComponents[Q.pageKey||nn.value.key]);return()=>an.value?h$2(an.value):h$2("div","404 Not Found")}}),defineClientConfig=(Q={})=>Q,withBase=Q=>isLinkHttp(Q)?Q:`/${removeLeadingSlash(Q)}`;const hopeInject="",clientConfig0={};var u8=Uint8Array,u16=Uint16Array,u32=Uint32Array,fleb=new u8([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),clim=new u8([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),freb=function(Q,nn){for(var an=new u16(31),en=0;en<31;++en)an[en]=nn+=1<<Q[en-1];for(var sn=new u32(an[30]),en=1;en<30;++en)for(var tn=an[en];tn<an[en+1];++tn)sn[tn]=tn-an[en]<<5|en;return[an,sn]},_a$1=freb(fleb,2),fl=_a$1[0],revfl=_a$1[1];fl[28]=258,revfl[258]=28;var _b=freb(fdeb,0),fd=_b[0],rev=new u16(32768);for(var i$5=0;i$5<32768;++i$5){var x$3=(i$5&43690)>>>1|(i$5&21845)<<1;x$3=(x$3&52428)>>>2|(x$3&13107)<<2,x$3=(x$3&61680)>>>4|(x$3&3855)<<4,rev[i$5]=((x$3&65280)>>>8|(x$3&255)<<8)>>>1}var hMap=function(Q,nn,an){for(var en=Q.length,sn=0,tn=new u16(nn);sn<en;++sn)Q[sn]&&++tn[Q[sn]-1];var on=new u16(nn);for(sn=0;sn<nn;++sn)on[sn]=on[sn-1]+tn[sn-1]<<1;var ln;if(an){ln=new u16(1<<nn);var pn=15-nn;for(sn=0;sn<en;++sn)if(Q[sn])for(var cn=sn<<4|Q[sn],rn=nn-Q[sn],un=on[Q[sn]-1]++<<rn,dn=un|(1<<rn)-1;un<=dn;++un)ln[rev[un]>>>pn]=cn}else for(ln=new u16(en),sn=0;sn<en;++sn)Q[sn]&&(ln[sn]=rev[on[Q[sn]-1]++]>>>15-Q[sn]);return ln},flt=new u8(288);for(var i$5=0;i$5<144;++i$5)flt[i$5]=8;for(var i$5=144;i$5<256;++i$5)flt[i$5]=9;for(var i$5=256;i$5<280;++i$5)flt[i$5]=7;for(var i$5=280;i$5<288;++i$5)flt[i$5]=8;var fdt=new u8(32);for(var i$5=0;i$5<32;++i$5)fdt[i$5]=5;var flrm=hMap(flt,9,1),fdrm=hMap(fdt,5,1),max=function(Q){for(var nn=Q[0],an=1;an<Q.length;++an)Q[an]>nn&&(nn=Q[an]);return nn},bits=function(Q,nn,an){var en=nn/8|0;return(Q[en]|Q[en+1]<<8)>>(nn&7)&an},bits16=function(Q,nn){var an=nn/8|0;return(Q[an]|Q[an+1]<<8|Q[an+2]<<16)>>(nn&7)},shft=function(Q){return(Q+7)/8|0},slc=function(Q,nn,an){(nn==null||nn<0)&&(nn=0),(an==null||an>Q.length)&&(an=Q.length);var en=new(Q.BYTES_PER_ELEMENT==2?u16:Q.BYTES_PER_ELEMENT==4?u32:u8)(an-nn);return en.set(Q.subarray(nn,an)),en},ec=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],err=function(Q,nn,an){var en=new Error(nn||ec[Q]);if(en.code=Q,Error.captureStackTrace&&Error.captureStackTrace(en,err),!an)throw en;return en},inflt=function(Q,nn,an){var en=Q.length;if(!en||an&&an.f&&!an.l)return nn||new u8(0);var sn=!nn||an,tn=!an||an.i;an||(an={}),nn||(nn=new u8(en*3));var on=function(Mn){var Jn=nn.length;if(Mn>Jn){var qn=new u8(Math.max(Jn*2,Mn));qn.set(nn),nn=qn}},ln=an.f||0,pn=an.p||0,cn=an.b||0,rn=an.l,un=an.d,dn=an.m,vn=an.n,mn=en*8;do{if(!rn){ln=bits(Q,pn,1);var kn=bits(Q,pn+1,3);if(pn+=3,kn)if(kn==1)rn=flrm,un=fdrm,dn=9,vn=5;else if(kn==2){var En=bits(Q,pn,31)+257,wn=bits(Q,pn+10,15)+4,Pn=En+bits(Q,pn+5,31)+1;pn+=14;for(var gn=new u8(Pn),bn=new u8(19),_n=0;_n<wn;++_n)bn[clim[_n]]=bits(Q,pn+_n*3,7);pn+=wn*3;for(var An=max(bn),Ln=(1<<An)-1,Fn=hMap(bn,An,1),_n=0;_n<Pn;){var Vn=Fn[bits(Q,pn,Ln)];pn+=Vn&15;var hn=Vn>>>4;if(hn<16)gn[_n++]=hn;else{var In=0,Tn=0;for(hn==16?(Tn=3+bits(Q,pn,3),pn+=2,In=gn[_n-1]):hn==17?(Tn=3+bits(Q,pn,7),pn+=3):hn==18&&(Tn=11+bits(Q,pn,127),pn+=7);Tn--;)gn[_n++]=In}}var Bn=gn.subarray(0,En),Cn=gn.subarray(En);dn=max(Bn),vn=max(Cn),rn=hMap(Bn,dn,1),un=hMap(Cn,vn,1)}else err(1);else{var hn=shft(pn)+4,fn=Q[hn-4]|Q[hn-3]<<8,yn=hn+fn;if(yn>en){tn&&err(0);break}sn&&on(cn+fn),nn.set(Q.subarray(hn,yn),cn),an.b=cn+=fn,an.p=pn=yn*8,an.f=ln;continue}if(pn>mn){tn&&err(0);break}}sn&&on(cn+131072);for(var Nn=(1<<dn)-1,zn=(1<<vn)-1,jn=pn;;jn=pn){var In=rn[bits16(Q,pn)&Nn],$n=In>>>4;if(pn+=In&15,pn>mn){tn&&err(0);break}if(In||err(2),$n<256)nn[cn++]=$n;else if($n==256){jn=pn,rn=null;break}else{var Rn=$n-254;if($n>264){var _n=$n-257,Sn=fleb[_n];Rn=bits(Q,pn,(1<<Sn)-1)+fl[_n],pn+=Sn}var Dn=un[bits16(Q,pn)&zn],On=Dn>>>4;Dn||err(3),pn+=Dn&15;var Cn=fd[On];if(On>3){var Sn=fdeb[On];Cn+=bits16(Q,pn)&(1<<Sn)-1,pn+=Sn}if(pn>mn){tn&&err(0);break}sn&&on(cn+131072);for(var xn=cn+Rn;cn<xn;cn+=4)nn[cn]=nn[cn-Cn],nn[cn+1]=nn[cn+1-Cn],nn[cn+2]=nn[cn+2-Cn],nn[cn+3]=nn[cn+3-Cn];cn=xn}}an.l=rn,an.p=jn,an.b=cn,an.f=ln,rn&&(ln=1,an.m=dn,an.d=un,an.n=vn)}while(!ln);return cn==nn.length?nn:slc(nn,0,cn)},et=new u8(0),zlv=function(Q){((Q[0]&15)!=8||Q[0]>>>4>7||(Q[0]<<8|Q[1])%31)&&err(6,"invalid zlib data"),Q[1]&32&&err(6,"invalid zlib data: preset dictionaries not supported")};function unzlibSync(Q,nn){return inflt((zlv(Q),Q.subarray(2,-4)),nn)}var te$1=typeof TextEncoder<"u"&&new TextEncoder,td=typeof TextDecoder<"u"&&new TextDecoder,tds=0;try{td.decode(et,{stream:!0}),tds=1}catch{}var dutf8=function(Q){for(var nn="",an=0;;){var en=Q[an++],sn=(en>127)+(en>223)+(en>239);if(an+sn>Q.length)return[nn,slc(Q,an-1)];sn?sn==3?(en=((en&15)<<18|(Q[an++]&63)<<12|(Q[an++]&63)<<6|Q[an++]&63)-65536,nn+=String.fromCharCode(55296|en>>10,56320|en&1023)):sn&1?nn+=String.fromCharCode((en&31)<<6|Q[an++]&63):nn+=String.fromCharCode((en&15)<<12|(Q[an++]&63)<<6|Q[an++]&63):nn+=String.fromCharCode(en)}};function strToU8(Q,nn){if(nn){for(var an=new u8(Q.length),en=0;en<Q.length;++en)an[en]=Q.charCodeAt(en);return an}if(te$1)return te$1.encode(Q);for(var sn=Q.length,tn=new u8(Q.length+(Q.length>>1)),on=0,ln=function(rn){tn[on++]=rn},en=0;en<sn;++en){if(on+5>tn.length){var pn=new u8(on+8+(sn-en<<1));pn.set(tn),tn=pn}var cn=Q.charCodeAt(en);cn<128||nn?ln(cn):cn<2048?(ln(192|cn>>6),ln(128|cn&63)):cn>55295&&cn<57344?(cn=65536+(cn&1023<<10)|Q.charCodeAt(++en)&1023,ln(240|cn>>18),ln(128|cn>>12&63),ln(128|cn>>6&63),ln(128|cn&63)):(ln(224|cn>>12),ln(128|cn>>6&63),ln(128|cn&63))}return slc(tn,0,on)}function strFromU8(Q,nn){if(nn){for(var an="",en=0;en<Q.length;en+=16384)an+=String.fromCharCode.apply(null,Q.subarray(en,en+16384));return an}else{if(td)return td.decode(Q);var sn=dutf8(Q),tn=sn[0],on=sn[1];return on.length&&err(8),tn}}const c$3=({name:Q="",color:nn="currentColor"},{slots:an})=>{var en;return h$2("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${Q}-icon`],viewBox:"0 0 1024 1024",fill:nn,"aria-label":`${Q} icon`},(en=an.default)==null?void 0:en.call(an))};c$3.displayName="IconBase";const I$2=({size:Q=48,stroke:nn=4,wrapper:an=!0,height:en=2*Q})=>{const sn=h$2("svg",{xmlns:"http://www.w3.org/2000/svg",width:Q,height:Q,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h$2("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h$2("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":nn,"stroke-linecap":"round"},[h$2("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h$2("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return an?h$2("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${en}px`},sn):sn};I$2.displayName="LoadingIcon";const J$1=(Q,{slots:nn})=>{var an;return((an=nn.default)==null?void 0:an.call(nn))||null},O$2=()=>h$2(c$3,{name:"github"},()=>h$2("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));O$2.displayName="GitHubIcon";const _$1=()=>h$2(c$3,{name:"gitlab"},()=>h$2("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));_$1.displayName="GitLabIcon";const k$2=()=>h$2(c$3,{name:"gitee"},()=>h$2("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));k$2.displayName="GiteeIcon";const S$4=()=>h$2(c$3,{name:"bitbucket"},()=>h$2("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));S$4.displayName="BitbucketIcon";const x$2=()=>h$2(c$3,{name:"source"},()=>h$2("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));x$2.displayName="SourceIcon";const m$4=Array.isArray,X=Q=>typeof Q=="function",r$3=Q=>typeof Q=="string";var C$3=Q=>/^(https?:)?\/\//.test(Q),u$1=Q=>Object.prototype.toString.call(Q)==="[object Object]";const Z=(Q,nn)=>{const an=nn?nn._instance:getCurrentInstance();return u$1(an==null?void 0:an.appContext.components)&&(Q in an.appContext.components||camelize(Q)in an.appContext.components||capitalize(camelize(Q))in an.appContext.components)};function ee(Q){return Q}function te(Q,nn=!0){getCurrentInstance()?onMounted(Q):nn?Q():nextTick(Q)}function ne(Q,nn=!1){const an=ref(),en=()=>an.value=!!Q();return en(),te(en,nn),an}const z$1=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},N="__vueuse_ssr_handlers__";z$1[N]=z$1[N]||{};var L$1;(function(Q){Q.UP="UP",Q.RIGHT="RIGHT",Q.DOWN="DOWN",Q.LEFT="LEFT",Q.NONE="NONE"})(L$1||(L$1={}));var oe=Object.defineProperty,M$1=Object.getOwnPropertySymbols,se=Object.prototype.hasOwnProperty,ie=Object.prototype.propertyIsEnumerable,P$1=(Q,nn,an)=>nn in Q?oe(Q,nn,{enumerable:!0,configurable:!0,writable:!0,value:an}):Q[nn]=an,ae=(Q,nn)=>{for(var an in nn||(nn={}))se.call(nn,an)&&P$1(Q,an,nn[an]);if(M$1)for(var an of M$1(nn))ie.call(nn,an)&&P$1(Q,an,nn[an]);return Q};const re={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};ae({linear:ee},re);const T$5=()=>ne(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),ce=()=>{const Q=T$5();return computed(()=>Q.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},le=Q=>{const nn=useRouteLocale();return computed(()=>Q[nn.value])},ye=(Q="")=>{if(Q){if(typeof Q=="number")return new Date(Q);const nn=Date.parse(Q.toString());if(!Number.isNaN(nn))return new Date(nn)}return null},Ee=(Q,nn)=>{let an=1;for(let en=0;en<Q.length;en++)an+=Q.charCodeAt(en),an+=an<<10,an^=an>>6;return an+=an<<3,an^=an>>11,an%nn},A$1=(Q,nn)=>r$3(Q)&&Q.startsWith(nn),Ie=(Q,nn)=>r$3(Q)&&Q.endsWith(nn),$$1=Object.entries,h$1=Object.keys,f$1=(Q,...nn)=>{if(nn.length===0)return Q;const an=nn.shift()||null;return an&&$$1(an).forEach(([en,sn])=>{en==="__proto__"||en==="constructor"||(u$1(Q[en])&&u$1(sn)?f$1(Q[en],sn):m$4(sn)?Q[en]=[...sn]:u$1(sn)?Q[en]={...sn}:Q[en]=an[en])}),f$1(Q,...nn)},B$1=Q=>u$1(Q)&&r$3(Q.name),ke=(Q,nn=!1)=>Q?m$4(Q)?Q.map(an=>r$3(an)?{name:an}:B$1(an)?an:null).filter(an=>an!==null):r$3(Q)?[{name:Q}]:B$1(Q)?[Q]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${nn?"":"| false"} | undefined\`, but got`,Q),[]):[],g$2=(Q,nn)=>{if(Q){if(m$4(Q)&&Q.every(r$3))return Q;if(r$3(Q))return[Q];console.error(`Expect ${nn||"value"} to be \`string[] | string | undefined\`, but got`,Q)}return[]},Se=Q=>g$2(Q,"category"),xe=Q=>g$2(Q,"tag"),ze=Q=>A$1(Q,"/");class Ne{constructor(){this.messageElements={};const nn="message-container",an=document.getElementById(nn);an?this.containerElement=an:(this.containerElement=document.createElement("div"),this.containerElement.id=nn,document.body.appendChild(this.containerElement))}pop(nn,an=2e3){const en=document.createElement("div"),sn=Date.now();return en.className="message move-in",en.innerHTML=nn,this.containerElement.appendChild(en),this.messageElements[sn]=en,an>0&&setTimeout(()=>{this.close(sn)},an),sn}close(nn){if(nn){const an=this.messageElements[nn];an.classList.remove("move-in"),an.classList.add("move-out"),an.addEventListener("animationend",()=>{an.remove(),delete this.messageElements[nn]})}else h$1(this.messageElements).forEach(an=>this.close(Number(an)))}destroy(){document.body.removeChild(this.containerElement)}}const H$2=/#.*$/u,R=Q=>{const nn=H$2.exec(Q);return nn?nn[0]:""},b$4=Q=>decodeURI(Q).replace(H$2,"").replace(/(index)?\.(md|html)$/,""),Le=(Q,nn)=>{if(nn===void 0)return!1;const an=b$4(Q.path),en=b$4(nn),sn=R(nn);return sn?sn===Q.hash&&(!en||an===en):an===en},Te=Q=>{const nn=atob(Q);return strFromU8(unzlibSync(strToU8(nn,!0)))},Ae=Q=>C$3(Q)?Q:`https://github.com/${Q}`,$e=Q=>!C$3(Q)||/github\.com/.test(Q)?"GitHub":/bitbucket\.org/.test(Q)?"Bitbucket":/gitlab\.com/.test(Q)?"GitLab":/gitee\.com/.test(Q)?"Gitee":null,j=(Q,...nn)=>{const an=Q.resolve(...nn),en=an.matched[an.matched.length-1];if(!(en!=null&&en.redirect))return an;const{redirect:sn}=en,tn=X(sn)?sn(an):sn,on=r$3(tn)?{path:tn}:tn;return j(Q,{hash:an.hash,query:an.query,params:an.params,...on})};var _a;const isClient=typeof window<"u",isFunction=Q=>typeof Q=="function",isString=Q=>typeof Q=="string",noop=()=>{},isIOS=isClient&&((_a=window==null?void 0:window.navigator)==null?void 0:_a.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function resolveUnref(Q){return typeof Q=="function"?Q():unref(Q)}function createFilterWrapper(Q,nn){function an(...en){return new Promise((sn,tn)=>{Promise.resolve(Q(()=>nn.apply(this,en),{fn:nn,thisArg:this,args:en})).then(sn).catch(tn)})}return an}const bypassFilter=Q=>Q();function debounceFilter(Q,nn={}){let an,en,sn=noop;const tn=ln=>{clearTimeout(ln),sn(),sn=noop};return ln=>{const pn=resolveUnref(Q),cn=resolveUnref(nn.maxWait);return an&&tn(an),pn<=0||cn!==void 0&&cn<=0?(en&&(tn(en),en=null),Promise.resolve(ln())):new Promise((rn,un)=>{sn=nn.rejectOnCancel?un:rn,cn&&!en&&(en=setTimeout(()=>{an&&tn(an),en=null,rn(ln())},cn)),an=setTimeout(()=>{en&&tn(en),en=null,rn(ln())},pn)})}}function throttleFilter(Q,nn=!0,an=!0,en=!1){let sn=0,tn,on=!0,ln=noop,pn;const cn=()=>{tn&&(clearTimeout(tn),tn=void 0,ln(),ln=noop)};return un=>{const dn=resolveUnref(Q),vn=Date.now()-sn,mn=()=>pn=un();return cn(),dn<=0?(sn=Date.now(),mn()):(vn>dn&&(an||!on)?(sn=Date.now(),mn()):nn&&(pn=new Promise((kn,hn)=>{ln=en?hn:kn,tn=setTimeout(()=>{sn=Date.now(),on=!0,kn(mn()),cn()},Math.max(0,dn-vn))})),!an&&!tn&&(tn=setTimeout(()=>on=!0,dn)),on=!1,pn)}}function pausableFilter(Q=bypassFilter){const nn=ref(!0);function an(){nn.value=!1}function en(){nn.value=!0}const sn=(...tn)=>{nn.value&&Q(...tn)};return{isActive:readonly(nn),pause:an,resume:en,eventFilter:sn}}function identity(Q){return Q}function tryOnScopeDispose(Q){return getCurrentScope()?(onScopeDispose(Q),!0):!1}function useDebounceFn(Q,nn=200,an={}){return createFilterWrapper(debounceFilter(nn,an),Q)}function useThrottleFn(Q,nn=200,an=!1,en=!0,sn=!1){return createFilterWrapper(throttleFilter(nn,an,en,sn),Q)}function resolveRef(Q){return typeof Q=="function"?computed(Q):ref(Q)}function tryOnMounted(Q,nn=!0){getCurrentInstance()?onMounted(Q):nn?Q():nextTick(Q)}function useTimeoutFn(Q,nn,an={}){const{immediate:en=!0}=an,sn=ref(!1);let tn=null;function on(){tn&&(clearTimeout(tn),tn=null)}function ln(){sn.value=!1,on()}function pn(...cn){on(),sn.value=!0,tn=setTimeout(()=>{sn.value=!1,tn=null,Q(...cn)},resolveUnref(nn))}return en&&(sn.value=!0,isClient&&pn()),tryOnScopeDispose(ln),{isPending:readonly(sn),start:pn,stop:ln}}function useToggle(Q=!1,nn={}){const{truthyValue:an=!0,falsyValue:en=!1}=nn,sn=isRef(Q),tn=ref(Q);function on(ln){if(arguments.length)return tn.value=ln,tn.value;{const pn=resolveUnref(an);return tn.value=tn.value===pn?resolveUnref(en):pn,tn.value}}return sn?on:[tn,on]}var __getOwnPropSymbols$6=Object.getOwnPropertySymbols,__hasOwnProp$6=Object.prototype.hasOwnProperty,__propIsEnum$6=Object.prototype.propertyIsEnumerable,__objRest$5=(Q,nn)=>{var an={};for(var en in Q)__hasOwnProp$6.call(Q,en)&&nn.indexOf(en)<0&&(an[en]=Q[en]);if(Q!=null&&__getOwnPropSymbols$6)for(var en of __getOwnPropSymbols$6(Q))nn.indexOf(en)<0&&__propIsEnum$6.call(Q,en)&&(an[en]=Q[en]);return an};function watchWithFilter(Q,nn,an={}){const en=an,{eventFilter:sn=bypassFilter}=en,tn=__objRest$5(en,["eventFilter"]);return watch(Q,createFilterWrapper(sn,nn),tn)}var __defProp$2=Object.defineProperty,__defProps$2=Object.defineProperties,__getOwnPropDescs$2=Object.getOwnPropertyDescriptors,__getOwnPropSymbols$2=Object.getOwnPropertySymbols,__hasOwnProp$2=Object.prototype.hasOwnProperty,__propIsEnum$2=Object.prototype.propertyIsEnumerable,__defNormalProp$2=(Q,nn,an)=>nn in Q?__defProp$2(Q,nn,{enumerable:!0,configurable:!0,writable:!0,value:an}):Q[nn]=an,__spreadValues$2=(Q,nn)=>{for(var an in nn||(nn={}))__hasOwnProp$2.call(nn,an)&&__defNormalProp$2(Q,an,nn[an]);if(__getOwnPropSymbols$2)for(var an of __getOwnPropSymbols$2(nn))__propIsEnum$2.call(nn,an)&&__defNormalProp$2(Q,an,nn[an]);return Q},__spreadProps$2=(Q,nn)=>__defProps$2(Q,__getOwnPropDescs$2(nn)),__objRest$1$1=(Q,nn)=>{var an={};for(var en in Q)__hasOwnProp$2.call(Q,en)&&nn.indexOf(en)<0&&(an[en]=Q[en]);if(Q!=null&&__getOwnPropSymbols$2)for(var en of __getOwnPropSymbols$2(Q))nn.indexOf(en)<0&&__propIsEnum$2.call(Q,en)&&(an[en]=Q[en]);return an};function watchPausable(Q,nn,an={}){const en=an,{eventFilter:sn}=en,tn=__objRest$1$1(en,["eventFilter"]),{eventFilter:on,pause:ln,resume:pn,isActive:cn}=pausableFilter(sn);return{stop:watchWithFilter(Q,nn,__spreadProps$2(__spreadValues$2({},tn),{eventFilter:on})),pause:ln,resume:pn,isActive:cn}}function unrefElement(Q){var nn;const an=resolveUnref(Q);return(nn=an==null?void 0:an.$el)!=null?nn:an}const defaultWindow=isClient?window:void 0,defaultDocument=isClient?window.document:void 0,defaultNavigator=isClient?window.navigator:void 0;function useEventListener(...Q){let nn,an,en,sn;if(isString(Q[0])||Array.isArray(Q[0])?([an,en,sn]=Q,nn=defaultWindow):[nn,an,en,sn]=Q,!nn)return noop;Array.isArray(an)||(an=[an]),Array.isArray(en)||(en=[en]);const tn=[],on=()=>{tn.forEach(rn=>rn()),tn.length=0},ln=(rn,un,dn,vn)=>(rn.addEventListener(un,dn,vn),()=>rn.removeEventListener(un,dn,vn)),pn=watch(()=>[unrefElement(nn),resolveUnref(sn)],([rn,un])=>{on(),rn&&tn.push(...an.flatMap(dn=>en.map(vn=>ln(rn,dn,vn,un))))},{immediate:!0,flush:"post"}),cn=()=>{pn(),on()};return tryOnScopeDispose(cn),cn}let _iOSWorkaround=!1;function onClickOutside(Q,nn,an={}){const{window:en=defaultWindow,ignore:sn=[],capture:tn=!0,detectIframe:on=!1}=an;if(!en)return;isIOS&&!_iOSWorkaround&&(_iOSWorkaround=!0,Array.from(en.document.body.children).forEach(dn=>dn.addEventListener("click",noop)));let ln=!0;const pn=dn=>sn.some(vn=>{if(typeof vn=="string")return Array.from(en.document.querySelectorAll(vn)).some(mn=>mn===dn.target||dn.composedPath().includes(mn));{const mn=unrefElement(vn);return mn&&(dn.target===mn||dn.composedPath().includes(mn))}}),rn=[useEventListener(en,"click",dn=>{const vn=unrefElement(Q);if(!(!vn||vn===dn.target||dn.composedPath().includes(vn))){if(dn.detail===0&&(ln=!pn(dn)),!ln){ln=!0;return}nn(dn)}},{passive:!0,capture:tn}),useEventListener(en,"pointerdown",dn=>{const vn=unrefElement(Q);vn&&(ln=!dn.composedPath().includes(vn)&&!pn(dn))},{passive:!0}),on&&useEventListener(en,"blur",dn=>{var vn;const mn=unrefElement(Q);((vn=en.document.activeElement)==null?void 0:vn.tagName)==="IFRAME"&&!(mn!=null&&mn.contains(en.document.activeElement))&&nn(dn)})].filter(Boolean);return()=>rn.forEach(dn=>dn())}function useSupported(Q,nn=!1){const an=ref(),en=()=>an.value=Boolean(Q());return en(),tryOnMounted(en,nn),an}function useMediaQuery(Q,nn={}){const{window:an=defaultWindow}=nn,en=useSupported(()=>an&&"matchMedia"in an&&typeof an.matchMedia=="function");let sn;const tn=ref(!1),on=()=>{sn&&("removeEventListener"in sn?sn.removeEventListener("change",ln):sn.removeListener(ln))},ln=()=>{en.value&&(on(),sn=an.matchMedia(resolveRef(Q).value),tn.value=sn.matches,"addEventListener"in sn?sn.addEventListener("change",ln):sn.addListener(ln))};return watchEffect(ln),tryOnScopeDispose(()=>on()),tn}function useClipboard(Q={}){const{navigator:nn=defaultNavigator,read:an=!1,source:en,copiedDuring:sn=1500,legacy:tn=!1}=Q,on=["copy","cut"],ln=useSupported(()=>nn&&"clipboard"in nn),pn=computed(()=>ln.value||tn),cn=ref(""),rn=ref(!1),un=useTimeoutFn(()=>rn.value=!1,sn);function dn(){ln.value?nn.clipboard.readText().then(hn=>{cn.value=hn}):cn.value=kn()}if(pn.value&&an)for(const hn of on)useEventListener(hn,dn);async function vn(hn=resolveUnref(en)){pn.value&&hn!=null&&(ln.value?await nn.clipboard.writeText(hn):mn(hn),cn.value=hn,rn.value=!0,un.start())}function mn(hn){const fn=document.createElement("textarea");fn.value=hn??"",fn.style.position="absolute",fn.style.opacity="0",document.body.appendChild(fn),fn.select(),document.execCommand("copy"),fn.remove()}function kn(){var hn,fn,yn;return(yn=(fn=(hn=document==null?void 0:document.getSelection)==null?void 0:hn.call(document))==null?void 0:fn.toString())!=null?yn:""}return{isSupported:pn,text:cn,copied:rn,copy:vn}}const _global=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},globalKey="__vueuse_ssr_handlers__";_global[globalKey]=_global[globalKey]||{};const handlers=_global[globalKey];function getSSRHandler(Q,nn){return handlers[Q]||nn}function guessSerializerType(Q){return Q==null?"any":Q instanceof Set?"set":Q instanceof Map?"map":Q instanceof Date?"date":typeof Q=="boolean"?"boolean":typeof Q=="string"?"string":typeof Q=="object"?"object":Number.isNaN(Q)?"any":"number"}var __defProp$k=Object.defineProperty,__getOwnPropSymbols$m=Object.getOwnPropertySymbols,__hasOwnProp$m=Object.prototype.hasOwnProperty,__propIsEnum$m=Object.prototype.propertyIsEnumerable,__defNormalProp$k=(Q,nn,an)=>nn in Q?__defProp$k(Q,nn,{enumerable:!0,configurable:!0,writable:!0,value:an}):Q[nn]=an,__spreadValues$k=(Q,nn)=>{for(var an in nn||(nn={}))__hasOwnProp$m.call(nn,an)&&__defNormalProp$k(Q,an,nn[an]);if(__getOwnPropSymbols$m)for(var an of __getOwnPropSymbols$m(nn))__propIsEnum$m.call(nn,an)&&__defNormalProp$k(Q,an,nn[an]);return Q};const StorageSerializers={boolean:{read:Q=>Q==="true",write:Q=>String(Q)},object:{read:Q=>JSON.parse(Q),write:Q=>JSON.stringify(Q)},number:{read:Q=>Number.parseFloat(Q),write:Q=>String(Q)},any:{read:Q=>Q,write:Q=>String(Q)},string:{read:Q=>Q,write:Q=>String(Q)},map:{read:Q=>new Map(JSON.parse(Q)),write:Q=>JSON.stringify(Array.from(Q.entries()))},set:{read:Q=>new Set(JSON.parse(Q)),write:Q=>JSON.stringify(Array.from(Q))},date:{read:Q=>new Date(Q),write:Q=>Q.toISOString()}},customStorageEventName="vueuse-storage";function useStorage(Q,nn,an,en={}){var sn;const{flush:tn="pre",deep:on=!0,listenToStorageChanges:ln=!0,writeDefaults:pn=!0,mergeDefaults:cn=!1,shallow:rn,window:un=defaultWindow,eventFilter:dn,onError:vn=_n=>{console.error(_n)}}=en,mn=(rn?shallowRef:ref)(nn);if(!an)try{an=getSSRHandler("getDefaultStorage",()=>{var _n;return(_n=defaultWindow)==null?void 0:_n.localStorage})()}catch(_n){vn(_n)}if(!an)return mn;const kn=resolveUnref(nn),hn=guessSerializerType(kn),fn=(sn=en.serializer)!=null?sn:StorageSerializers[hn],{pause:yn,resume:En}=watchPausable(mn,()=>wn(mn.value),{flush:tn,deep:on,eventFilter:dn});return un&&ln&&(useEventListener(un,"storage",bn),useEventListener(un,customStorageEventName,gn)),bn(),mn;function wn(_n){try{if(_n==null)an.removeItem(Q);else{const An=fn.write(_n),Ln=an.getItem(Q);Ln!==An&&(an.setItem(Q,An),un&&un.dispatchEvent(new CustomEvent(customStorageEventName,{detail:{key:Q,oldValue:Ln,newValue:An,storageArea:an}})))}}catch(An){vn(An)}}function Pn(_n){const An=_n?_n.newValue:an.getItem(Q);if(An==null)return pn&&kn!==null&&an.setItem(Q,fn.write(kn)),kn;if(!_n&&cn){const Ln=fn.read(An);return isFunction(cn)?cn(Ln,kn):hn==="object"&&!Array.isArray(Ln)?__spreadValues$k(__spreadValues$k({},kn),Ln):Ln}else return typeof An!="string"?An:fn.read(An)}function gn(_n){bn(_n.detail)}function bn(_n){if(!(_n&&_n.storageArea!==an)){if(_n&&_n.key==null){mn.value=kn;return}if(!(_n&&_n.key!==Q)){yn();try{mn.value=Pn(_n)}catch(An){vn(An)}finally{_n?nextTick(En):En()}}}}}function usePreferredDark(Q){return useMediaQuery("(prefers-color-scheme: dark)",Q)}const functionsMap=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]];function useFullscreen(Q,nn={}){const{document:an=defaultDocument,autoExit:en=!1}=nn,sn=Q||(an==null?void 0:an.querySelector("html")),tn=ref(!1);let on=functionsMap[0];const ln=useSupported(()=>{if(an){for(const kn of functionsMap)if(kn[1]in an)return on=kn,!0}else return!1;return!1}),[pn,cn,rn,,un]=on;async function dn(){ln.value&&(an!=null&&an[rn]&&await an[cn](),tn.value=!1)}async function vn(){if(!ln.value)return;await dn();const kn=unrefElement(sn);kn&&(await kn[pn](),tn.value=!0)}async function mn(){tn.value?await dn():await vn()}return an&&useEventListener(an,un,()=>{tn.value=!!(an!=null&&an[rn])},!1),en&&tryOnScopeDispose(dn),{isSupported:ln,isFullscreen:tn,enter:vn,exit:dn,toggle:mn}}var __getOwnPropSymbols$8=Object.getOwnPropertySymbols,__hasOwnProp$8=Object.prototype.hasOwnProperty,__propIsEnum$8=Object.prototype.propertyIsEnumerable,__objRest$1=(Q,nn)=>{var an={};for(var en in Q)__hasOwnProp$8.call(Q,en)&&nn.indexOf(en)<0&&(an[en]=Q[en]);if(Q!=null&&__getOwnPropSymbols$8)for(var en of __getOwnPropSymbols$8(Q))nn.indexOf(en)<0&&__propIsEnum$8.call(Q,en)&&(an[en]=Q[en]);return an};function useMutationObserver(Q,nn,an={}){const en=an,{window:sn=defaultWindow}=en,tn=__objRest$1(en,["window"]);let on;const ln=useSupported(()=>sn&&"MutationObserver"in sn),pn=()=>{on&&(on.disconnect(),on=void 0)},cn=watch(()=>unrefElement(Q),un=>{pn(),ln.value&&sn&&un&&(on=new MutationObserver(nn),on.observe(un,tn))},{immediate:!0}),rn=()=>{pn(),cn()};return tryOnScopeDispose(rn),{isSupported:ln,stop:rn}}var SwipeDirection;(function(Q){Q.UP="UP",Q.RIGHT="RIGHT",Q.DOWN="DOWN",Q.LEFT="LEFT",Q.NONE="NONE"})(SwipeDirection||(SwipeDirection={}));function checkOverflowScroll(Q){const nn=window.getComputedStyle(Q);if(nn.overflowX==="scroll"||nn.overflowY==="scroll"||nn.overflowX==="auto"&&Q.clientHeight<Q.scrollHeight||nn.overflowY==="auto"&&Q.clientWidth<Q.scrollWidth)return!0;{const an=Q.parentNode;return!an||an.tagName==="BODY"?!1:checkOverflowScroll(an)}}function preventDefault(Q){const nn=Q||window.event,an=nn.target;return checkOverflowScroll(an)?!1:nn.touches.length>1?!0:(nn.preventDefault&&nn.preventDefault(),!1)}function useScrollLock(Q,nn=!1){const an=ref(nn);let en=null,sn;watch(resolveRef(Q),ln=>{if(ln){const pn=ln;sn=pn.style.overflow,an.value&&(pn.style.overflow="hidden")}},{immediate:!0});const tn=()=>{const ln=resolveUnref(Q);!ln||an.value||(isIOS&&(en=useEventListener(ln,"touchmove",pn=>{preventDefault(pn)},{passive:!1})),ln.style.overflow="hidden",an.value=!0)},on=()=>{const ln=resolveUnref(Q);!ln||!an.value||(isIOS&&(en==null||en()),ln.style.overflow=sn,an.value=!1)};return tryOnScopeDispose(on),computed({get(){return an.value},set(ln){ln?tn():on()}})}let _id=0;function useStyleTag(Q,nn={}){const an=ref(!1),{document:en=defaultDocument,immediate:sn=!0,manual:tn=!1,id:on=`vueuse_styletag_${++_id}`}=nn,ln=ref(Q);let pn=()=>{};const cn=()=>{if(!en)return;const un=en.getElementById(on)||en.createElement("style");un.isConnected||(un.type="text/css",un.id=on,nn.media&&(un.media=nn.media),en.head.appendChild(un)),!an.value&&(pn=watch(ln,dn=>{un.textContent=dn},{immediate:!0}),an.value=!0)},rn=()=>{!en||!an.value||(pn(),en.head.removeChild(en.getElementById(on)),an.value=!1)};return sn&&!tn&&tryOnMounted(cn),tn||tryOnScopeDispose(rn),{id:on,css:ln,unload:rn,load:cn,isLoaded:readonly(an)}}var __defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(Q,nn,an)=>nn in Q?__defProp(Q,nn,{enumerable:!0,configurable:!0,writable:!0,value:an}):Q[nn]=an,__spreadValues=(Q,nn)=>{for(var an in nn||(nn={}))__hasOwnProp.call(nn,an)&&__defNormalProp(Q,an,nn[an]);if(__getOwnPropSymbols)for(var an of __getOwnPropSymbols(nn))__propIsEnum.call(nn,an)&&__defNormalProp(Q,an,nn[an]);return Q};const _TransitionPresets={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};__spreadValues({linear:identity},_TransitionPresets);function useWindowScroll({window:Q=defaultWindow}={}){if(!Q)return{x:ref(0),y:ref(0)};const nn=ref(Q.scrollX),an=ref(Q.scrollY);return useEventListener(Q,"scroll",()=>{nn.value=Q.scrollX,an.value=Q.scrollY},{capture:!1,passive:!0}),{x:nn,y:an}}const badge="",t$2=({type:Q="info",text:nn="",vertical:an="top",color:en},{slots:sn})=>{var tn;return h$2("span",{class:["badge",Q,{diy:en}],style:{verticalAlign:an,...en?{backgroundColor:en}:{}}},nn||((tn=sn.default)==null?void 0:tn.call(sn)))};t$2.displayName="Badge";const fontIcon="";var m$3=defineComponent({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(Q){const nn=computed(()=>{const en=["font-icon icon"],sn=`iconfont icon-${Q.icon}`;return en.push(sn),en}),an=computed(()=>{const en={};return Q.color&&(en.color=Q.color),Q.size&&(en["font-size"]=Number.isNaN(Number(Q.size))?Q.size:`${Q.size}px`),h$1(en).length?en:null});return()=>Q.icon?h$2("span",{key:Q.icon,class:nn.value,style:an.value}):null}});const l$3=()=>h$2(c$3,{name:"back-to-top"},()=>[h$2("path",{d:"M512 843.2c-36.2 0-66.4-13.6-85.8-21.8-10.8-4.6-22.6 3.6-21.8 15.2l7 102c.4 6.2 7.6 9.4 12.6 5.6l29-22c3.6-2.8 9-1.8 11.4 2l41 64.2c3 4.8 10.2 4.8 13.2 0l41-64.2c2.4-3.8 7.8-4.8 11.4-2l29 22c5 3.8 12.2.6 12.6-5.6l7-102c.8-11.6-11-20-21.8-15.2-19.6 8.2-49.6 21.8-85.8 21.8z"}),h$2("path",{d:"m795.4 586.2-96-98.2C699.4 172 513 32 513 32S324.8 172 324.8 488l-96 98.2c-3.6 3.6-5.2 9-4.4 14.2L261.2 824c1.8 11.4 14.2 17 23.6 10.8L419 744s41.4 40 94.2 40c52.8 0 92.2-40 92.2-40l134.2 90.8c9.2 6.2 21.6.6 23.6-10.8l37-223.8c.4-5.2-1.2-10.4-4.8-14zM513 384c-34 0-61.4-28.6-61.4-64s27.6-64 61.4-64c34 0 61.4 28.6 61.4 64S547 384 513 384z"})]);l$3.displayName="BackToTopIcon";const balloon="",backToTop="";var T$4=defineComponent({name:"BackToTop",props:{threshold:{type:Number,default:300}},setup(Q){const nn=usePageFrontmatter(),an=le({"/":{backToTop:"返回顶部"}}),{y:en}=useWindowScroll(),sn=computed(()=>nn.value.backToTop!==!1&&en.value>Q.threshold);return()=>h$2(Transition,{name:"fade"},()=>sn.value?h$2("button",{type:"button",class:"back-to-top","aria-label":an.value.backToTop,"data-balloon-pos":"left",onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},h$2(l$3)):null)}});const srOnly="",clientConfig1=defineClientConfig({enhance:({app:Q})=>{Z("Badge")||Q.component("Badge",t$2),Z("FontIcon")||Q.component("FontIcon",m$3)},setup:()=>{useStyleTag(`  @import url("https://at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");
  `)},rootComponents:[()=>h$2(T$4,{threshold:300})]});function r$2(Q,nn,an){var en,sn,tn;nn===void 0&&(nn=50),an===void 0&&(an={});var on=(en=an.isImmediate)!=null&&en,ln=(sn=an.callback)!=null&&sn,pn=an.maxWait,cn=Date.now(),rn=[];function un(){if(pn!==void 0){var vn=Date.now()-cn;if(vn+nn>=pn)return pn-vn}return nn}var dn=function(){var vn=[].slice.call(arguments),mn=this;return new Promise(function(kn,hn){var fn=on&&tn===void 0;if(tn!==void 0&&clearTimeout(tn),tn=setTimeout(function(){if(tn=void 0,cn=Date.now(),!on){var En=Q.apply(mn,vn);ln&&ln(En),rn.forEach(function(wn){return(0,wn.resolve)(En)}),rn=[]}},un()),fn){var yn=Q.apply(mn,vn);return ln&&ln(yn),kn(yn)}rn.push({resolve:kn,reject:hn})})};return dn.cancel=function(vn){tn!==void 0&&clearTimeout(tn),rn.forEach(function(mn){return(0,mn.reject)(vn)}),rn=[]},dn}const useActiveHeaderLinks=({headerLinkSelector:Q,headerAnchorSelector:nn,delay:an,offset:en=5})=>{const sn=useRouter(),on=r$2(()=>{var kn,hn;const ln=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(ln-0)<en){updateHash(sn,"");return}const cn=window.innerHeight+ln,rn=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),un=Math.abs(rn-cn)<en,dn=Array.from(document.querySelectorAll(Q)),mn=Array.from(document.querySelectorAll(nn)).filter(fn=>dn.some(yn=>yn.hash===fn.hash));for(let fn=0;fn<mn.length;fn++){const yn=mn[fn],En=mn[fn+1],wn=ln>=(((kn=yn.parentElement)==null?void 0:kn.offsetTop)??0)-en,Pn=!En||ln<(((hn=En.parentElement)==null?void 0:hn.offsetTop)??0)-en;if(!(wn&&Pn))continue;const bn=decodeURIComponent(sn.currentRoute.value.hash),_n=decodeURIComponent(yn.hash);if(bn===_n)return;if(un){for(let An=fn+1;An<mn.length;An++)if(bn===decodeURIComponent(mn[An].hash))return}updateHash(sn,_n);return}},an);onMounted(()=>{window.addEventListener("scroll",on)}),onBeforeUnmount(()=>{window.removeEventListener("scroll",on)})},updateHash=async(Q,nn)=>{const{scrollBehavior:an}=Q.options;Q.options.scrollBehavior=void 0,await Q.replace({query:Q.currentRoute.value.query,hash:nn,force:!0}).finally(()=>Q.options.scrollBehavior=an)},headerLinkSelector=".sidebar-link, .toc-link",headerAnchorSelector=".header-anchor",delay=200,offset=5,clientConfig2=defineClientConfig({setup(){useActiveHeaderLinks({headerLinkSelector,headerAnchorSelector,delay,offset})}}),autoCatalog="";var D=defineComponent({name:"AutoCatalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean},setup(Q,{slots:nn}){const an=le({"/":{title:"目录"}}),en=usePageData(),sn=useRouter(),tn=useSiteData(),on=cn=>{const rn=cn.I;return typeof rn>"u"||rn},ln=()=>{const cn=Q.base||en.value.path.replace(/\/[^/]+$/,"/"),rn=sn.getRoutes(),un=[];return rn.filter(({meta:dn,path:vn})=>{if(!A$1(vn,cn)||vn===cn)return!1;if(cn==="/"){const mn=h$1(tn.value.locales).filter(kn=>kn!=="/");if(vn==="/404.html"||mn.some(kn=>A$1(vn,kn)))return!1}return(Ie(vn,".html")&&!Ie(vn,"/index.html")||Ie(vn,"/"))&&on(dn)}).map(({path:dn,meta:vn})=>{const mn=dn.substring(cn.length).split("/").length;return{title:vn.t||"",icon:vn.i,base:dn.replace(/\/[^/]+\/?$/,"/"),order:vn.O||null,level:Ie(dn,"/")?mn-1:mn,path:dn}}).filter(({title:dn,level:vn})=>typeof dn=="string"&&dn&&vn<=Q.level).sort(({title:dn,level:vn,path:mn,order:kn},{title:hn,level:fn,path:yn,order:En})=>vn-fn||(Ie(mn,"/index.html")?-1:Ie(yn,"/index.html")?1:kn===null?En===null?dn.localeCompare(hn):En:En===null?kn:kn>0?En>0?kn-En:-1:En<0?kn-En:1)).forEach(dn=>{var vn;const{base:mn,level:kn}=dn;switch(kn){case 1:un.push(dn);break;case 2:{const hn=un.find(fn=>fn.path===mn);hn&&(hn.children??(hn.children=[])).push(dn);break}default:{const hn=un.find(fn=>fn.path===mn.replace(/\/[^/]+\/$/,"/"));if(hn){const fn=(vn=hn.children)==null?void 0:vn.find(yn=>yn.path===mn);fn&&(fn.children??(fn.children=[])).push(dn)}}}}),un},pn=computed(()=>ln());return()=>h$2("div",{class:"auto-catalog-wrapper"},[h$2("h2",{class:"main-title"},an.value.title),...pn.value.map(({children:cn=[],icon:rn,path:un,title:dn},vn)=>[h$2("h3",{id:dn,class:["child-title",{"has-children":cn.length}]},[h$2("a",{href:`#${dn}`,class:"header-anchor"},"#"),h$2(RouterLink,{class:"catalog-title",to:un},()=>[Q.index?`${vn+1}.`:null,rn&&nn.icon?nn.icon({icon:rn}):null,dn||"Unknown"])]),cn.length?h$2("ul",{class:"child-catalog-wrapper"},cn.map(({children:mn=[],icon:kn,path:hn,title:fn},yn)=>h$2("li",{class:"child-catalog-item"},[h$2("div",{class:["sub-title",{"has-children":mn.length}]},[h$2("a",{href:`#${fn}`,class:"header-anchor"},"#"),h$2(RouterLink,{class:"catalog-title",to:hn},()=>[Q.index?`${vn+1}.${yn+1}`:null,kn&&nn.icon?nn.icon({icon:kn}):null,fn||"Unknown"])]),mn.length?h$2("div",{class:"sub-catalog-wrapper"},mn.map(({icon:En,path:wn,title:Pn},gn)=>h$2(RouterLink,{class:"sub-catalog-item",to:wn},()=>[Q.index?`${vn+1}.${yn+1}.${gn+1}`:null,En&&nn.icon?nn.icon({icon:En}):null,Pn||"Unknown"]))):null]))):null])])}}),K$1=defineClientConfig({enhance:({app:Q})=>{Z("AutoCatalog",Q)||Q.component("AutoCatalog",nn=>h$2(D,nn,{icon:({icon:an})=>h$2(resolveComponent("HopeIcon"),{icon:an})}))}});const vars$1="",externalLinkIcon="",svg=h$2("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[h$2("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),h$2("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),ExternalLinkIcon=defineComponent({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(Q){const nn=useRouteLocale(),an=computed(()=>Q.locales[nn.value]??{openInNewWindow:"open in new window"});return()=>h$2("span",[svg,h$2("span",{class:"external-link-icon-sr-only"},an.value.openInNewWindow)])}}),locales={},clientConfig4=defineClientConfig({enhance({app:Q}){Q.component("ExternalLinkIcon",h$2(ExternalLinkIcon,{locales}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const nprogress$1={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:Q=>{const nn=nprogress$1.isStarted();Q=clamp(Q,nprogress$1.settings.minimum,1),nprogress$1.status=Q===1?null:Q;const an=nprogress$1.render(!nn),en=an.querySelector(nprogress$1.settings.barSelector),sn=nprogress$1.settings.speed,tn=nprogress$1.settings.easing;return an.offsetWidth,queue(on=>{css(en,{transform:"translate3d("+toBarPerc(Q)+"%,0,0)",transition:"all "+sn+"ms "+tn}),Q===1?(css(an,{transition:"none",opacity:"1"}),an.offsetWidth,setTimeout(function(){css(an,{transition:"all "+sn+"ms linear",opacity:"0"}),setTimeout(function(){nprogress$1.remove(),on()},sn)},sn)):setTimeout(()=>on(),sn)}),nprogress$1},isStarted:()=>typeof nprogress$1.status=="number",start:()=>{nprogress$1.status||nprogress$1.set(0);const Q=()=>{setTimeout(()=>{nprogress$1.status&&(nprogress$1.trickle(),Q())},nprogress$1.settings.trickleSpeed)};return nprogress$1.settings.trickle&&Q(),nprogress$1},done:Q=>!Q&&!nprogress$1.status?nprogress$1:nprogress$1.inc(.3+.5*Math.random()).set(1),inc:Q=>{let nn=nprogress$1.status;return nn?(typeof Q!="number"&&(Q=(1-nn)*clamp(Math.random()*nn,.1,.95)),nn=clamp(nn+Q,0,.994),nprogress$1.set(nn)):nprogress$1.start()},trickle:()=>nprogress$1.inc(Math.random()*nprogress$1.settings.trickleRate),render:Q=>{if(nprogress$1.isRendered())return document.getElementById("nprogress");addClass(document.documentElement,"nprogress-busy");const nn=document.createElement("div");nn.id="nprogress",nn.innerHTML=nprogress$1.settings.template;const an=nn.querySelector(nprogress$1.settings.barSelector),en=Q?"-100":toBarPerc(nprogress$1.status||0),sn=document.querySelector(nprogress$1.settings.parent);return css(an,{transition:"all 0 linear",transform:"translate3d("+en+"%,0,0)"}),sn!==document.body&&addClass(sn,"nprogress-custom-parent"),sn==null||sn.appendChild(nn),nn},remove:()=>{removeClass(document.documentElement,"nprogress-busy"),removeClass(document.querySelector(nprogress$1.settings.parent),"nprogress-custom-parent");const Q=document.getElementById("nprogress");Q&&removeElement(Q)},isRendered:()=>!!document.getElementById("nprogress")},clamp=(Q,nn,an)=>Q<nn?nn:Q>an?an:Q,toBarPerc=Q=>(-1+Q)*100,queue=function(){const Q=[];function nn(){const an=Q.shift();an&&an(nn)}return function(an){Q.push(an),Q.length===1&&nn()}}(),css=function(){const Q=["Webkit","O","Moz","ms"],nn={};function an(on){return on.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(ln,pn){return pn.toUpperCase()})}function en(on){const ln=document.body.style;if(on in ln)return on;let pn=Q.length;const cn=on.charAt(0).toUpperCase()+on.slice(1);let rn;for(;pn--;)if(rn=Q[pn]+cn,rn in ln)return rn;return on}function sn(on){return on=an(on),nn[on]||(nn[on]=en(on))}function tn(on,ln,pn){ln=sn(ln),on.style[ln]=pn}return function(on,ln){for(const pn in ln){const cn=ln[pn];cn!==void 0&&Object.prototype.hasOwnProperty.call(ln,pn)&&tn(on,pn,cn)}}}(),hasClass=(Q,nn)=>(typeof Q=="string"?Q:classList(Q)).indexOf(" "+nn+" ")>=0,addClass=(Q,nn)=>{const an=classList(Q),en=an+nn;hasClass(an,nn)||(Q.className=en.substring(1))},removeClass=(Q,nn)=>{const an=classList(Q);if(!hasClass(Q,nn))return;const en=an.replace(" "+nn+" "," ");Q.className=en.substring(1,en.length-1)},classList=Q=>(" "+(Q.className||"")+" ").replace(/\s+/gi," "),removeElement=Q=>{Q&&Q.parentNode&&Q.parentNode.removeChild(Q)},vars="",nprogress="",useNprogress=()=>{onMounted(()=>{const Q=useRouter(),nn=new Set;nn.add(Q.currentRoute.value.path),Q.beforeEach(an=>{nn.has(an.path)||nprogress$1.start()}),Q.afterEach(an=>{nn.add(an.path),nprogress$1.done()})})},clientConfig5=defineClientConfig({setup(){useNprogress()}}),themeData$1=JSON.parse('{"encrypt":{},"author":{"name":"MonkeyBoss","url":"https://github.com/MonkeyB0ss"},"logo":"/MonkeyBoss.png","repo":"MonkeyB0ss/Blog","docsDir":"src","locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"收藏"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"Java","icon":"java","prefix":"/java/","children":[{"text":"基础","children":[{"text":"Java基础","icon":"calculate","link":"java-basic/java-basic"},{"text":"JavaWEB","icon":"html","link":"https://heavy_code_industry.gitee.io/code_heavy_industry/pro001-javaweb/"}]},{"text":"进阶","children":[{"text":"JavaEE框架","icon":"network","link":"#javaee框架"},{"text":"微服务核心生态","icon":"cache","link":"#微服务核心生态"},{"text":"JVM","icon":"engine","link":"JVM/memory-garbageCollection/第1章-JVM与Java体系结构"}]},{"text":"源码","children":[{"text":"JDK","icon":"process","link":"source-code/jdk"}]}]},{"text":"MySQL","icon":"mysql","prefix":"/mysql/","children":[{"text":"基础","children":[{"text":"概述与安装","icon":"calculate","link":"mysql-basic/mysql-basic"},{"text":"SELECT使用","icon":"emmet","link":"mysql-basic/select"},{"text":"DDL、DML、DCL使用","icon":"enum","link":"mysql-basic/create"},{"text":"其它数据库对象","icon":"flex","link":"mysql-basic/view"},{"text":"MySQL8新特性","icon":"flower","link":"mysql-basic/new-features"}]},{"text":"进阶","children":[{"text":"MySQL架构","icon":"layout","link":"mysql-advanced/setup-linux"},{"text":"索引及调优","icon":"navigation","link":"mysql-advanced/index-create"},{"text":"事务","icon":"repair","link":"mysql-advanced/transaction-log"},{"text":"日志与备份","icon":"blog","link":"mysql-advanced/other-log"}]}]},{"text":"其他","icon":"geometry","prefix":"/other/","children":[{"text":"ElasticSearch","link":"elasticsearch"},{"text":"面试","icon":"back-stage","link":"audition/JUC/Volatile和JMM内存模型的可见性"}]},{"text":"笔记","icon":"editor","prefix":"/note/","children":[{"text":"后端笔记","children":[{"text":"Spring","icon":"leaf","link":"backend/spring/validation"}]},{"text":"架构相关","icon":"condition","link":"schema/oss"}]}],"sidebar":{"/java/":[{"text":"Java基础编程","icon":"java","prefix":"java-basic/","children":["java-basic","java-array",{"text":"面向对象 - 上","link":"object/upper/class"},{"text":"面向对象 - 中","link":"object/middle/class-extends"},{"text":"面向对象 - 下","link":"object/lower/keyword-static"},"java-exception"]},{"text":"Java高级编程","icon":"creative","prefix":"java-advanced/","children":[{"text":"多线程","link":"multi-thread/introduce"},{"text":"Java常用类","link":"common-utils/String"},{"text":"枚举类和注解","link":"enum/enum"},{"text":"Java集合","link":"collection/array-collection"},{"text":"泛型","link":"generic/generic"},{"text":"IO流","link":"IOStream/file"},{"text":"网络编程","link":"network/InetAddress"},{"text":"Java反射机制","link":"reflection/reflection"},{"text":"Java8新特性","link":"new-features/Lambda"}]}],"/java/java-basic/object/upper/":["class","class-structure","class-method","encapsulation","class-constructor","keyword-this","keyword-import"],"/java/java-basic/object/middle/":["class-extends","override","keyword-super","instantiation","polymorphic","class-object","class-wrapper"],"/java/java-basic/object/lower/":["keyword-static","class-main","class-coder","keyword-final","keyword-abstract","keyword-interface","class-innerClass"],"/java/java-basic/design-patterns/":["single","agent","factory"],"/java/java-advanced/multi-thread/":["introduce","concurrent","thread","thread-methods","thread-lifeCycle","thread-synchronization","thread-notify","thread-new"],"/java/java-advanced/common-utils/":["String","StringBufferAndStringBuilder","date","time","comparator","other"],"/java/java-advanced/enum/":["enum","annotation"],"/java/java-advanced/collection/":["array-collection","collection","iterator","list","set","map","collections","data-structure"],"/java/java-advanced/generic/":["generic","collection","custom","extends","wildcard"],"/java/java-advanced/IOStream/":["file","IO","file-reader","buffered","convert","other","object","RandomAccessFile","path"],"/java/java-advanced/network/":["InetAddress","TCP","UDP","URL"],"/java/java-advanced/reflection/":["reflection","Class","ClassLoader","apply1","apply2","apply3","apply4"],"/java/java-advanced/new-features/":["Lambda","FunctionalInterface","quote","constructor","StreamAPI","Optional"],"/java/source-code/":[{"text":"JDK","prefix":"jdk/","children":["ArrayList"]}],"/java/JVM/":[{"text":"内存与垃圾回收篇","prefix":"memory-garbageCollection/","children":["第1章-JVM与Java体系结构","第2章-类加载子系统","第3章-运行时数据区","第4章-虚拟机栈","第5章-堆"]},{"text":"字节码与类的加载篇","collapsible":true,"prefix":"class-classLoader/","children":[]},{"text":"性能监控与调优篇","collapsible":true,"prefix":"monitoring-tuning/","children":[]}],"/mysql/":[{"text":"MySQL基础","icon":"mysql","prefix":"mysql-basic/","children":[{"text":"概述与安装","collapsible":true,"children":["mysql-basic","env"]},{"text":"SELECT使用","collapsible":true,"children":["select","operator","order","multi-table","single-line","polymerization","sub-query"]},{"text":"DDL、DML、DCL使用","collapsible":true,"children":["create","crud","data-type","constraint"]},{"text":"其它数据库对象","collapsible":true,"children":["view","procedure","variables","trigger"]},{"text":"MySQL8新特性","collapsible":true,"children":["new-features"]}]},{"text":"MySQL高级","icon":"creative","prefix":"mysql-advanced/","children":[{"text":"MySQL架构","collapsible":true,"children":["setup-linux","data-dir","user","logical-architecture","engines","indexes","InnoDB"]},{"text":"索引及调优","collapsible":true,"children":["index-create","slow-query","optimize","NF","other"]},{"text":"事务","collapsible":true,"children":["transaction","transaction-log","lock","MVCC"]},{"text":"日志与备份","collapsible":true,"children":["other-log","MS-copy","backup"]}]}],"/about/":["intro","site"],"/note/":[{"text":"后端笔记","collapsible":true,"prefix":"backend/","children":[{"text":"Spring相关","icon":"leaf","collapsible":true,"prefix":"Spring/","children":["validation","exception-handling","value-inject"]}]},{"text":"架构相关","collapsible":true,"prefix":"schema/","children":["oss"]}],"/other/audition":[{"text":"JUC面试题","collapsible":true,"prefix":"JUC/","children":[{"text":"Volatile","collapsible":true,"children":["Volatile和JMM内存模型的可见性","Volatile不保证原子性","Volatile禁止指令重排","Volatile的应用"]},"CAS底层原理","AtomicInteger的ABA问题","ArrayList线程不安全的举例","值传递和引用传递",{"text":"Java的锁","collapsible":true,"children":["Java锁之公平锁和非公平锁","Java锁之可重入锁和递归锁","Java锁之自旋锁","Java锁之读写锁","Synchronized无法禁止指令重排却能保证有序性","乐观锁和悲观锁"]},{"text":"CountDownLatch&CyclicBarrier&Semaphore使用","collapsible":true,"children":["CountDownLatch","CyclicBarrier","Semaphore"]},"阻塞队列","Synchronized和Lock的区别","线程池","死锁编码及定位分析"]},{"text":"JVM面试题","collapsible":true,"prefix":"JVM/","children":["JVM体系结构","GC Roots","JVM参数调优","Java中的引用","Java内存溢出OOM","垃圾收集器"]},"Linux相关命令","Github学习"]},"blog":{"description":"自律进步，有始有终","intro":"/about/intro.html","medias":{"Email":"mailto:1912290362@qq.com","Gmail":"mailto:erasmehou@gmail.com","GitHub":"https://github.com/MonkeyB0ss","Gitee":"https://gitee.com/MonkeyBoss","Discord":"https://discord.gg/HCBrTSN5MG"}}}},"displayFooter":true,"copyright":"MIT Licensed | Copyright © 2020-present MonkeyBoss","pageInfo":["Author","Original","Date","Category","Tag","ReadingTime"]}'),themeData=ref(themeData$1),useThemeData$1=()=>themeData,themeLocaleDataSymbol=Symbol(""),useThemeLocaleData$1=()=>{const Q=inject(themeLocaleDataSymbol);if(!Q)throw new Error("useThemeLocaleData() is called without provider.");return Q},resolveThemeLocaleData=(Q,nn)=>{var an;return{...Q,...(an=Q.locales)==null?void 0:an[nn]}},clientConfig6=defineClientConfig({enhance({app:Q}){const nn=useThemeData$1(),an=Q._context.provides[routeLocaleSymbol],en=computed(()=>resolveThemeLocaleData(nn.value,an.value));Q.provide(themeLocaleDataSymbol,en),Object.defineProperties(Q.config.globalProperties,{$theme:{get(){return nn.value}},$themeLocale:{get(){return en.value}}})}}),giscus="",i$4=["de","gsw","en","es","fr","id","it","ja","ko","pl","ro","ru","tr","vi","zh-CN","zh-TW"],e$2={provider:"Giscus",lightTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-beta.200/templates/giscus/light.css",darkTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-beta.200/templates/giscus/dark.css",repo:"MonkeyB0ss/commit",repoId:"R_kgDOIef6_A",category:"Ideas",categoryId:"DIC_kwDOIef6_M4CSrn9"},{repo:T$3,repoId:w$1,category:C$2,categoryId:b$3}=e$2;var z=defineComponent({name:"GiscusComment",props:{darkmode:Boolean},setup(Q){const nn=usePageFrontmatter(),an=usePageData(),en=ref(!1),sn=computed(()=>{const ln=usePageLang().value;if(i$4.includes(ln))return ln;const pn=ln.split("-")[0];return i$4.includes(pn)?pn:"en"}),tn=computed(()=>{const ln=e$2.comment!==!1,pn=nn.value.comment;return!!pn||ln!==!1&&pn!==!1}),on=computed(()=>({repo:T$3,repoId:w$1,category:C$2,categoryId:b$3,lang:sn.value,theme:Q.darkmode?e$2.darkTheme:e$2.lightTheme,mapping:e$2.mapping||"pathname",term:withBase(an.value.path),inputPosition:e$2.inputPosition||"top",reactionsEnabled:e$2.reactionsEnabled===!1?"0":"1",strict:e$2.strict===!1?"0":"1",loading:e$2.lazyLoading===!1?"eager":"lazy",emitMetadata:"0"}));return onMounted(async()=>{await __vitePreload(()=>import("./giscus-16d370b8.js"),[]),en.value=!0}),()=>h$2("div",{class:["giscus-wrapper",{"input-top":e$2.inputPosition!=="bottom"}],id:"comment",style:{display:tn.value?"block":"none"}},en.value?h$2("giscus-widget",on.value):h$2(I$2))}});const i$3={provider:"Giscus",lightTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-beta.200/templates/giscus/light.css",darkTheme:"https://unpkg.com/vuepress-theme-hope@2.0.0-beta.200/templates/giscus/dark.css",repo:"MonkeyB0ss/commit",repoId:"R_kgDOIef6_A",category:"Ideas",categoryId:"DIC_kwDOIef6_M4CSrn9"}.comment!==!1,d$1=defineComponent({name:"CommentService",props:{darkmode:Boolean},setup(Q){const nn=usePageFrontmatter(),an=computed(()=>nn.value.comment||i$3&&nn.value.comment!==!1);return()=>h$2(z,{darkmode:Q.darkmode,style:{display:an.value?"block":"none"}})}});var l$2=defineClientConfig({enhance:({app:Q})=>{Q.component("CommentService",d$1)}});const button="",S$3=800,u=2e3,M={"/":{copy:"复制代码",copied:"已复制",hint:"复制成功"}},n=!1,P=['.theme-hope-content div[class*="language-"] pre'],m$2=!1,l$1=new Map,T$2=()=>{const{copy:Q}=useClipboard({legacy:!0}),nn=le(M),an=usePageData(),en=ce(),sn=ln=>{if(!ln.hasAttribute("copy-code-registered")){const pn=document.createElement("button");pn.type="button",pn.classList.add("copy-code-button"),pn.innerHTML='<div class="copy-icon" />',pn.setAttribute("aria-label",nn.value.copy),pn.setAttribute("data-copied",nn.value.copied),ln.parentElement&&ln.parentElement.insertBefore(pn,ln),ln.setAttribute("copy-code-registered","")}},tn=()=>nextTick().then(()=>new Promise(ln=>{setTimeout(()=>{P.forEach(pn=>{document.querySelectorAll(pn).forEach(sn)}),ln()},S$3)})),on=(ln,pn,cn)=>{let{innerText:rn=""}=pn;/language-(shellscript|shell|bash|sh|zsh)/.test(ln.classList.toString())&&(rn=rn.replace(/^ *(\$|>) /gm,"")),Q(rn).then(()=>{cn.classList.add("copied"),clearTimeout(l$1.get(cn));const un=setTimeout(()=>{cn.classList.remove("copied"),cn.blur(),l$1.delete(cn)},u);l$1.set(cn,un)})};onMounted(()=>{(!en.value||m$2)&&tn(),useEventListener("click",ln=>{const pn=ln.target;if(pn.matches('div[class*="language-"] > button.copy')){const cn=pn.parentElement,rn=pn.nextElementSibling;rn&&on(cn,rn,pn)}else if(pn.matches('div[class*="language-"] div.copy-icon')){const cn=pn.parentElement,rn=cn.parentElement,un=cn.nextElementSibling;un&&on(rn,un,cn)}}),watch(()=>an.value.path,()=>{(!en.value||m$2)&&tn()})})};var Y$1=defineClientConfig({setup:()=>{T$2()}});const chart="",parseChartConfig=(config,type)=>{if(type==="json")return JSON.parse(config);const exports={},module={exports};return eval(config),module.exports};var ChartJS=defineComponent({name:"ChartJS",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(Q){const nn=ref(),an=ref(),en=ref(!0);return onMounted(async()=>{const[{default:sn}]=await Promise.all([__vitePreload(()=>import("./auto-ba5ecab5.js"),[]),new Promise(ln=>setTimeout(ln,800))]);sn.defaults.maintainAspectRatio=!1;const tn=parseChartConfig(Te(Q.config),Q.type),on=an.value.getContext("2d");new sn(on,tn),en.value=!1}),()=>[Q.title?h$2("div",{class:"chart-title"},decodeURIComponent(Q.title)):null,en.value?h$2(I$2,{class:"chart-loading",height:192}):null,h$2("div",{ref:nn,class:"chart-wrapper",id:Q.id,style:{display:en.value?"none":"block"}},h$2("canvas",{ref:an,height:400}))]}});const codeTabs="",o$2=useStorage("VUEPRESS_CODE_TAB_STORE",{});var S$2=defineComponent({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(Q,{slots:nn}){const an=ref(Q.active),en=ref([]),sn=()=>{if(Q.tabId){const{title:cn,id:rn=cn}=Q.data[an.value];o$2.value[Q.tabId]=rn}},tn=(cn=an.value)=>{an.value=cn<en.value.length-1?cn+1:0,en.value[an.value].focus()},on=(cn=an.value)=>{an.value=cn>0?cn-1:en.value.length-1,en.value[an.value].focus()},ln=(cn,rn)=>{if(cn.key===" "||cn.key==="Enter"?(cn.preventDefault(),an.value=rn):cn.key==="ArrowRight"?(cn.preventDefault(),tn()):cn.key==="ArrowLeft"&&(cn.preventDefault(),on()),Q.tabId){const{title:un,id:dn=un}=Q.data[an.value];o$2.value[Q.tabId]=dn}},pn=()=>{if(Q.tabId){const cn=Q.data.findIndex(({title:rn,id:un=rn})=>o$2.value[Q.tabId]===un);if(cn!==-1)return cn}return Q.active};return onMounted(()=>{an.value=pn(),watch(()=>o$2.value[Q.tabId],(cn,rn)=>{if(Q.tabId&&cn!==rn){const un=Q.data.findIndex(({title:dn,id:vn=dn})=>vn===cn);un!==-1&&(an.value=un)}})}),()=>Q.data.length?h$2("div",{class:"code-tabs"},[h$2("div",{class:"code-tabs-nav",role:"tablist"},Q.data.map(({title:cn},rn)=>{const un=rn===an.value;return h$2("button",{type:"button",ref:dn=>{dn&&(en.value[rn]=dn)},class:["code-tabs-nav-tab",{active:un}],role:"tab","aria-controls":`codetab-${Q.id}-${rn}`,"aria-selected":un,onClick:()=>{an.value=rn,sn()},onKeydown:dn=>ln(dn,rn)},cn)})),Q.data.map(({title:cn,id:rn=cn},un)=>{var dn;const vn=un===an.value;return h$2("div",{class:["code-tab",{active:vn}],id:`codetab-${Q.id}-${un}`,role:"tabpanel","aria-expanded":vn},(dn=nn[`tab${un}`])==null?void 0:dn.call(nn,{title:cn,value:rn,isActive:vn}))})]):null}});const codeGroup="",c$2=({active:Q=!1},{slots:nn})=>{var an;return h$2("div",{class:["code-group-item",{active:Q}],"aria-selected":Q},(an=nn.default)==null?void 0:an.call(nn))};c$2.displayName="CodeGroupItem";const h=defineComponent({name:"CodeGroup",setup(Q,{slots:nn}){const an=ref(-1),en=ref([]),sn=(ln=an.value)=>{an.value=ln<en.value.length-1?ln+1:0,en.value[an.value].focus()},tn=(ln=an.value)=>{an.value=ln>0?ln-1:en.value.length-1,en.value[an.value].focus()},on=(ln,pn)=>{ln.key===" "||ln.key==="Enter"?(ln.preventDefault(),an.value=pn):ln.key==="ArrowRight"?(ln.preventDefault(),sn(pn)):ln.key==="ArrowLeft"&&(ln.preventDefault(),tn(pn))};return()=>{var ln;const pn=(((ln=nn.default)==null?void 0:ln.call(nn))||[]).filter(cn=>cn.type.name==="CodeGroupItem").map(cn=>(cn.props===null&&(cn.props={}),cn));return pn.length===0?null:(an.value<0||an.value>pn.length-1?(an.value=pn.findIndex(cn=>"active"in cn.props),an.value===-1&&(an.value=0)):pn.forEach((cn,rn)=>{cn.props.active=rn===an.value}),h$2("div",{class:"code-group"},[h$2("div",{class:"code-group-nav"},pn.map((cn,rn)=>{const un=rn===an.value;return h$2("button",{type:"button",ref:dn=>{dn&&(en.value[rn]=dn)},class:["code-group-nav-tab",{active:un}],"aria-pressed":un,"aria-expanded":un,onClick:()=>{an.value=rn},onKeydown:dn=>on(dn,rn)},cn.props.title)})),pn]))}}}),index$2="",q$1=()=>h$2(c$3,{name:"back"},()=>h$2("path",{d:"M1014.749 449.156v125.688H260.626l345.64 345.64-89.239 89.237L19.307 512l497.72-497.721 89.238 89.238-345.64 345.64h754.124z"})),a$1=()=>h$2(c$3,{name:"home"},()=>h$2("path",{d:"M780.106 420.978L506.994 147.866 233.882 420.978h.045v455.11H780.06v-455.11h.046zm90.977 90.976V876.09a91.022 91.022 0 01-91.023 91.022H233.927a91.022 91.022 0 01-91.022-91.022V511.954l-67.22 67.175-64.307-64.307 431.309-431.31c35.498-35.498 93.115-35.498 128.614 0l431.309 431.31-64.307 64.307L871.083 512z"})),o$1='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',v$2='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',l='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>',codeDemo="",L={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"},E={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},B=(Q,nn,an)=>{const en=document.createElement(Q);return isPlainObject(nn)&&h$1(nn).forEach(sn=>{if(sn.indexOf("data"))en[sn]=nn[sn];else{const tn=sn.replace("data","");en.dataset[tn]=nn[sn]}}),an&&an.forEach(sn=>{en.appendChild(sn)}),en},w=Q=>({...L,...Q,jsLib:Array.from(new Set([...L.jsLib||[],...Q.jsLib||[]])),cssLib:Array.from(new Set([...L.cssLib||[],...Q.cssLib||[]]))}),m$1=(Q,nn)=>{if(Q[nn]!==void 0)return Q[nn];const an=new Promise(en=>{var sn;const tn=document.createElement("script");tn.src=nn,(sn=document.querySelector("body"))==null||sn.appendChild(tn),tn.onload=()=>{en()}});return Q[nn]=an,an},k$1=(Q,nn)=>{if(nn.css&&Array.from(Q.childNodes).every(an=>an.nodeName!=="STYLE")){const an=B("style",{innerHTML:nn.css});Q.appendChild(an)}},V=(Q,nn,an)=>{const en=an.getScript();if(en&&Array.from(nn.childNodes).every(sn=>sn.nodeName!=="SCRIPT")){const sn=document.createElement("script");sn.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${Q} .code-demo-container').shadowRoot;
${en}}`)),nn.appendChild(sn)}},H$1=Q=>{const nn=h$1(Q),an={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(en=>{const sn=nn.filter(tn=>E[en].types.includes(tn));if(sn.length){const tn=sn[0];an[en]=[Q[tn].replace(/^\n|\n$/g,""),E[en].map[tn]||tn]}}),an.isLegal=(!an.html.length||an.html[1]==="none")&&(!an.js.length||an.js[1]==="none")&&(!an.css.length||an.css[1]==="none"),an},$=Q=>Q.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),x$1=Q=>`<div id="app">
${$(Q)}
</div>`,I$1=Q=>`${Q.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,J=Q=>Q.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),O$1=Q=>`(function(exports){var module={};module.exports=exports;${Q};return module.exports.__esModule?module.exports.default:module.exports;})({})`,q=(Q,nn)=>{const an=w(nn),en=Q.js[0]||"";return{...an,html:$(Q.html[0]||""),js:en,css:Q.css[0]||"",isLegal:Q.isLegal,getScript:()=>{var sn;return an.useBabel?((sn=window.Babel.transform(en,{presets:["es2015"]}))==null?void 0:sn.code)||"":en}}},F$1=(Q,nn)=>{const an=w(nn),en=Q.html[0]||"",sn=/<template>([\s\S]+)<\/template>/u.exec(en),tn=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u.exec(en),on=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u.exec(en),ln=sn?sn[1].replace(/^\n|\n$/g,""):"",[pn="",cn=""]=tn?[tn[4].replace(/^\n|\n$/g,""),tn[3]]:[],[rn="",un=""]=on?[on[4].replace(/^\n|\n$/g,""),on[3]]:[],dn=cn===""&&(un===""||un==="css");return{...an,html:x$1(ln),js:J(pn),css:rn,isLegal:dn,jsLib:[an.vue,...an.jsLib],getScript:()=>{var vn,mn;const kn=nn.useBabel?((mn=(vn=window.Babel)==null?void 0:vn.transform(pn,{presets:["es2015"]}))==null?void 0:mn.code)||"":pn.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${O$1(kn)};appOptions.template=\`${ln.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},G=(Q,nn)=>{const an=w(nn);return{...an,html:x$1(""),js:I$1(Q.js[0]||""),css:Q.css[0]||(Q.js[0]?Q.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:Q.isLegal,jsLib:[an.react,an.reactDOM,...an.jsLib],jsx:!0,getScript:()=>{var en,sn;const tn=((sn=(en=window.Babel)==null?void 0:en.transform(Q.js[0]||"",{presets:["es2015","react"]}))==null?void 0:sn.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${O$1(tn)}))`}}},v$1={},Y=Q=>Promise.all([m$1(v$1,Q.babel),m$1(v$1,Q.react),m$1(v$1,Q.reactDOM)]),K=Q=>{const nn=[m$1(v$1,Q.vue)];return Q.useBabel&&nn.push(m$1(v$1,Q.babel)),Promise.all(nn)},U=Q=>Q.useBabel?m$1(v$1,Q.babel):Promise.resolve();var W$1=defineComponent({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},setup(Q,{slots:nn}){const[an,en]=useToggle(!1),sn=ref(),tn=ref(),on=ref("0"),ln=ref(!1),pn=computed(()=>JSON.parse(Q.config?Te(Q.config):"{}")),cn=computed(()=>{const mn=JSON.parse(Te(Q.code));return H$1(mn)}),rn=computed(()=>Q.type==="react"?G(cn.value,pn.value):Q.type==="vue"?F$1(cn.value,pn.value):q(cn.value,pn.value)),un=computed(()=>rn.value.isLegal),dn=(mn=!1)=>{const kn=sn.value.attachShadow({mode:"open"}),hn=document.createElement("div");hn.classList.add("code-demo-app"),kn.appendChild(hn),un.value?(mn&&(hn.innerHTML=rn.value.html),k$1(kn,rn.value),V(Q.id,kn,rn.value),on.value="0"):on.value="auto",ln.value=!0},vn=()=>{switch(Q.type){case"react":return Y(rn.value).then(()=>dn());case"vue":return K(rn.value).then(()=>dn());default:return U(rn.value).then(()=>dn(!0))}};return onMounted(()=>{setTimeout(()=>{vn()},800)}),()=>{var mn;return h$2("div",{class:"code-demo-wrapper",id:Q.id},[h$2("div",{class:"code-demo-header"},[rn.value.isLegal?h$2("button",{type:"button",title:"toggle","aria-hidden":!0,class:["toggle-button",an.value?"down":"end"],onClick:()=>{on.value=an.value?"0":`${tn.value.clientHeight+13.8}px`,en()}}):null,Q.title?h$2("span",{class:"title"},decodeURIComponent(Q.title)):null,rn.value.isLegal&&rn.value.jsfiddle!==!1?h$2("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h$2("input",{type:"hidden",name:"html",value:rn.value.html}),h$2("input",{type:"hidden",name:"js",value:rn.value.js}),h$2("input",{type:"hidden",name:"css",value:rn.value.css}),h$2("input",{type:"hidden",name:"wrap",value:"1"}),h$2("input",{type:"hidden",name:"panel_js",value:"3"}),h$2("input",{type:"hidden",name:"resources",value:[...rn.value.cssLib,...rn.value.jsLib].join(",")}),h$2("button",{type:"submit",class:"jsfiddle-button",innerHTML:v$2,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!rn.value.isLegal||rn.value.codepen!==!1?h$2("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h$2("input",{type:"hidden",name:"data",value:JSON.stringify({html:rn.value.html,js:rn.value.js,css:rn.value.css,js_external:rn.value.jsLib.join(";"),css_external:rn.value.cssLib.join(";"),layout:rn.value.codepenLayout,html_pre_processor:cn.value?cn.value.html[1]:"none",js_pre_processor:cn.value?cn.value.js[1]:rn.value.jsx?"babel":"none",css_pre_processor:cn.value?cn.value.css[1]:"none",editors:rn.value.codepenEditors})}),h$2("button",{type:"submit",innerHTML:o$1,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),ln.value?null:h$2(I$2,{class:"code-demo-loading"}),h$2("div",{ref:sn,class:"code-demo-container",style:{display:un.value&&ln.value?"block":"none"}}),h$2("div",{class:"code-demo-code-wrapper",style:{height:on.value}},h$2("div",{ref:tn,class:"code-demo-codes"},(mn=nn.default)==null?void 0:mn.call(nn)))])}}});const echarts="",parseEChartsConfig=(config,type)=>{if(type==="js"){const exports={},module={exports};return eval(config),module.exports}return JSON.parse(config)};var ECharts=defineComponent({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(Q){const nn=ref();let an;const en=ref(!0);return useEventListener("resize",useDebounceFn(()=>an==null?void 0:an.resize(),100)),onMounted(()=>{Promise.all([__vitePreload(()=>import("./index-b03bef79.js"),[]),new Promise(sn=>setTimeout(sn,800))]).then(([sn])=>{const tn=parseEChartsConfig(Te(Q.config),Q.type);an=sn.init(nn.value),an.setOption(tn),en.value=!1})}),onUnmounted(()=>{an==null||an.dispose()}),()=>[Q.title?h$2("div",{class:"echarts-title"},decodeURIComponent(Q.title)):null,h$2("div",{class:"echarts-wrapper"},[h$2("div",{ref:nn,class:"echarts-container",id:Q.id}),en.value?h$2(I$2,{class:"echarts-loading",height:360}):null])]}});const figure="",flowchart="";var f={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},F={...f,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}},b$2={...f,"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"}}},y={...f,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}},s$1={ant:F,vue:y,pie:b$2},g$1=defineComponent({name:"FlowChart",props:{code:{type:String,required:!0},id:{type:String,required:!0},preset:{type:String,default:"vue"}},setup(Q){let nn=null;const an=ref(),en=ref(!0),sn=ref(1),tn=computed(()=>s$1[Q.preset]||(console.warn(`[md-enhance:flowchart] Unknown preset: ${Q.preset}`),s$1.vue)),on=ln=>ln<419?.8:ln>1280?1:.9;return onMounted(()=>{Promise.all([__vitePreload(()=>import("./flowchart-35969cab.js"),[]),new Promise(ln=>setTimeout(ln,800))]).then(([{parse:ln}])=>{nn=ln(Te(Q.code)),sn.value=on(window.innerWidth),en.value=!1,nn.draw(Q.id,{...tn.value,scale:sn.value})}),useEventListener("resize",useDebounceFn(()=>{if(nn){const ln=on(window.innerWidth);sn.value!==ln&&(sn.value=ln,nn.draw(Q.id,{...tn.value,scale:ln}))}},100))}),()=>[en.value?h$2(I$2,{class:"flowchart-loading",height:192}):null,h$2("div",{ref:an,class:["flowchart-wrapper",Q.preset],id:Q.id,style:{display:en.value?"none":"block"}})]}});const footnote="",imageMark="",mermaid="",b$1=Q=>({dark:Q,background:Q?"#1e1e1e":"#fff",primaryColor:Q?"#389d70":"#4abf8a",primaryBorderColor:Q?"#389d70":"#4abf8a",primaryTextColor:"#fff",secondaryColor:"#ffb500",secondaryBorderColor:Q?"#fff":"#000",secondaryTextColor:Q?"#ddd":"#333",tertiaryColor:Q?"#282828":"#efeef4",tertiaryBorderColor:Q?"#bbb":"#242424",tertiaryTextColor:Q?"#ddd":"#333",noteBkgColor:Q?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:Q?"#f6d365":"#333",lineColor:Q?"#d3d3d3":"#333",textColor:Q?"#fff":"#242424",mainBkg:Q?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:Q?"#389d70":"#4abf8a",nodeTextColor:Q?"#fff":"#242424",signalTextColor:Q?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",fillType0:Q?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var T$1=defineComponent({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0}},setup(Q){const nn=ref(),an=ref(""),en=ref(!1),sn=computed(()=>Te(Q.code)),tn=async()=>Promise.all([__vitePreload(()=>import("./mermaid.core-7788c9b3.js").then(on=>on.aK),[]),new Promise(on=>setTimeout(on,800))]).then(async([{default:on}])=>{const ln={useMaxWidth:!1};on.initialize({theme:"base",themeVariables:b$1(en.value),flowchart:ln,sequence:ln,journey:ln,gantt:ln,er:ln,pie:ln,startOnLoad:!1}),an.value=(await on.render(Q.id,sn.value)).svg});return onMounted(()=>{const on=document.documentElement,ln=()=>on.classList.contains("dark")||on.getAttribute("data-theme")==="dark";en.value=ln(),tn(),useMutationObserver(on,()=>{en.value=ln()},{attributeFilter:["class","data-theme"],attributes:!0}),watch(en,()=>tn())}),()=>h$2("div",{ref:nn,class:"mermaid-wrapper"},an.value?h$2("div",{class:"mermaid-content",innerHTML:an.value}):h$2(I$2,{class:"mermaid-loading",height:96}))}});const o=()=>__vitePreload(()=>import("./highlight.esm-a794bb63.js"),[]),t$1=()=>__vitePreload(()=>import("./markdown.esm-d92a2fc9.js"),[]),e$1=()=>__vitePreload(()=>import("./math.esm-70a288c8.js"),[]),r$1=()=>__vitePreload(()=>import("./notes.esm-224f94d9.js"),[]),a=()=>__vitePreload(()=>import("./reveal.esm-e5069ce0.js"),[]),i$2=()=>__vitePreload(()=>import("./search.esm-2c3fba7d.js"),[]),c$1=()=>__vitePreload(()=>import("./zoom.esm-b83b91d0.js"),[]),useReveal=()=>[a(),t$1(),o(),e$1(),i$2(),r$1(),c$1()],index$1="",leagueGothic="",sourceSansPro="";var S$1=defineComponent({name:"Presentation",props:{id:{type:String,required:!0},code:{type:String,required:!0},theme:{type:String,default:"auto"}},setup(Q){const nn=usePageFrontmatter(),an=ref(""),en=ref(!0),sn=ref();let tn=null;const on=async ln=>{const pn=[new Promise(dn=>setTimeout(dn,800)),...useReveal()],[,cn,...rn]=await Promise.all(pn),un=new cn.default(ln,{plugins:rn.map(({default:dn})=>dn)});return await un.initialize({backgroundTransition:"slide",hash:nn.value.layout==="Slide",mouseWheel:nn.value.layout==="Slide",transition:"slide",slideNumber:!0,...nn.value.reveal||{},embedded:nn.value.layout!=="Slide"}),un.configure({backgroundTransition:"slide"}),un};return onMounted(async()=>{const ln=sn.value;ln&&(an.value=Te(Q.code),ln.setAttribute("id",Q.id),ln.setAttribute("data-theme",Q.theme),tn=await on(ln),en.value=!1)}),onUnmounted(()=>{tn==null||tn.destroy()}),()=>h$2("div",{class:"presentation-wrapper"},[h$2("div",{ref:sn,class:["reveal","reveal-viewport"]},h$2("div",{class:"slides",innerHTML:`<section data-markdown data-separator="^\\r?\\n---\\r?\\n$" data-separator-vertical="^\\r?\\n--\\r?\\n$"><script type="text/template">${an.value}<\/script></section>`})),en.value?h$2(I$2,{class:"reveal-loading",height:400}):null])}});const playground="";var i$1=defineComponent({name:"Playground",props:{title:{type:String,default:""},link:{type:String,required:!0}},setup(Q){return()=>[h$2("div",{class:"playground-wrapper"},[h$2("div",{class:"title-wrapper"},[Q.title?h$2("div",{class:"title"},decodeURIComponent(Q.title)):null,h$2("div",{class:"actions"},[h$2("a",{class:"action",href:decodeURIComponent(Q.link),target:"_blank",innerHTML:l})])]),h$2("div",{class:"playground-container"},h$2("iframe",{src:decodeURIComponent(Q.link)}))])]}});const tabs="",v=useStorage("VUEPRESS_TAB_STORE",{});var S=defineComponent({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(Q,{slots:nn}){const an=ref(Q.active),en=ref([]),sn=()=>{if(Q.tabId){const{title:cn,id:rn=cn}=Q.data[an.value];v.value[Q.tabId]=rn}},tn=(cn=an.value)=>{an.value=cn<en.value.length-1?cn+1:0,en.value[an.value].focus()},on=(cn=an.value)=>{an.value=cn>0?cn-1:en.value.length-1,en.value[an.value].focus()},ln=(cn,rn)=>{cn.key===" "||cn.key==="Enter"?(cn.preventDefault(),an.value=rn):cn.key==="ArrowRight"?(cn.preventDefault(),tn()):cn.key==="ArrowLeft"&&(cn.preventDefault(),on()),sn()},pn=()=>{if(Q.tabId){const cn=Q.data.findIndex(({title:rn,id:un=rn})=>v.value[Q.tabId]===un);if(cn!==-1)return cn}return Q.active};return onMounted(()=>{an.value=pn(),watch(()=>v.value[Q.tabId],(cn,rn)=>{if(Q.tabId&&cn!==rn){const un=Q.data.findIndex(({title:dn,id:vn=dn})=>vn===cn);un!==-1&&(an.value=un)}})}),()=>Q.data.length?h$2("div",{class:"tab-list"},[h$2("div",{class:"tab-list-nav",role:"tablist"},Q.data.map(({title:cn},rn)=>{const un=rn===an.value;return h$2("button",{type:"button",ref:dn=>{dn&&(en.value[rn]=dn)},class:["tab-list-nav-item",{active:un}],role:"tab","aria-controls":`tab-${Q.id}-${rn}`,"aria-selected":un,onClick:()=>{an.value=rn,sn()},onKeydown:dn=>ln(dn,rn)},cn)})),Q.data.map(({title:cn,id:rn=cn},un)=>{var dn;const vn=un===an.value;return h$2("div",{class:["tab-item",{active:vn}],id:`tab-${Q.id}-${un}`,role:"tabpanel","aria-expanded":vn},(dn=nn[`tab${un}`])==null?void 0:dn.call(nn,{title:cn,value:rn,isActive:vn}))})]):null}});const tasklist="",katex_min="",katex="",clientConfig9=defineClientConfig({enhance:({app:Q})=>{Q.component("ChartJS",ChartJS),Q.component("CodeTabs",S$2),Z("CodeGroup",Q)||Q.component("CodeGroup",h),Z("CodeGroupItem",Q)||Q.component("CodeGroupItem",c$2),Q.component("CodeDemo",W$1),Q.component("ECharts",ECharts),Q.component("FlowChart",g$1),Q.component("Mermaid",T$1),Q.component("Presentation",S$1),Q.component("Playground",i$1),Q.component("Tabs",S),Q.component("VuePlayground",defineAsyncComponent(()=>__vitePreload(()=>import("./VuePlayground-85cfa06f.js"),["assets/VuePlayground-85cfa06f.js","assets/framework-a20dc394.js"])))}}),photoswipe="",photoSwipe="",T=".theme-hope-content :not(a) > img:not([no-view])",C$1={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},O=800,x={},A=Q=>isString$1(Q)?Array.from(document.querySelectorAll(Q)):Q.map(nn=>Array.from(document.querySelectorAll(nn))).flat(),p=Q=>new Promise((nn,an)=>{Q.complete?nn({src:Q.src,width:Q.naturalWidth,height:Q.naturalHeight,alt:Q.alt}):(Q.onload=()=>nn(p(Q)),Q.onerror=en=>an(en))}),H=()=>{const{isSupported:Q,toggle:nn}=useFullscreen(),an=le(C$1),en=usePageData(),sn=()=>Promise.all([__vitePreload(()=>import("./photoswipe.esm-36cd6c3c.js"),[]),nextTick().then(()=>new Promise(tn=>setTimeout(tn,O)).then(()=>A(T)))]).then(([{default:tn},on])=>{const ln='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>';on.forEach((pn,cn)=>{const rn=()=>{const un=Array(on.length).fill({html:ln}),dn=new tn({dataSource:un,preloaderDelay:0,...an.value,...x,index:cn});dn.on("uiRegister",()=>{Q&&dn.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{nn()}}),dn.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(vn,mn)=>{vn.setAttribute("download",""),vn.setAttribute("target","_blank"),vn.setAttribute("rel","noopener"),mn.on("change",()=>{vn.href=mn.currSlide.data.src})}})}),dn.init(),on.forEach((vn,mn)=>{p(vn).then(kn=>{un.splice(mn,1,kn),dn.refreshSlideContent(mn)})})};pn.style.cursor="zoom-in",pn.addEventListener("click",()=>{rn()}),pn.addEventListener("keypress",({key:un})=>{un==="Enter"&&rn()})})});onMounted(()=>{sn(),watch(()=>en.value.path,()=>sn())})};var I=defineClientConfig({setup:()=>{H()}});function i(Q){return{all:Q=Q||new Map,on:function(nn,an){var en=Q.get(nn);en?en.push(an):Q.set(nn,[an])},off:function(nn,an){var en=Q.get(nn);en&&(an?en.splice(en.indexOf(an)>>>0,1):Q.set(nn,[]))},emit:function(nn,an){var en=Q.get(nn);en&&en.slice().map(function(sn){sn(an)}),(en=Q.get("*"))&&en.slice().map(function(sn){sn(nn,an)})}}}const t=Symbol(""),r=()=>{const Q=inject(t);if(!Q)throw new Error("usePWAEvent() is called without provider.");return Q},g=async Q=>{const{register:nn}=await __vitePreload(()=>import("./index-70769223.js"),[]);nn(withBase("service-worker.js"),{ready(an){console.log("[PWA]: Service worker is active"),Q.emit("ready",an)},registered(an){console.log("[PWA]: Service worker has been registered."),Q.emit("registered",an)},cached(an){console.log("[PWA]: Content has been cached for offline usage"),Q.emit("cached",an)},async updatefound(an){await navigator.serviceWorker.getRegistration()&&(console.log("[PWA]: New content is downloading."),Q.emit("updatefound",an))},updated(an){console.log("[PWA]: New content is available, please refresh.");const en="service-worker-version",sn=Number(localStorage.getItem(en)||0);localStorage.setItem(en,(sn+1).toString()),localStorage.removeItem("manifest"),Q.emit("updated",an)},offline(){console.log("[PWA]: No internet connection found. App is running in offline mode."),Q.emit("offline")},error(an){console.log("[PWA]: Error during service worker registration:",an),Q.emit("error",an)}})},m=()=>{const Q=i();provide(t,Q),onMounted(async()=>{var nn;let an=!1;(nn=navigator.serviceWorker)!=null&&nn.controller&&navigator.serviceWorker.addEventListener("controllerchange",()=>{an||(an=!0,window.location.reload())}),await g(Q)})},e=()=>h$2(c$3,{name:"update"},()=>h$2("path",{d:"M949.949 146.25v255.826c0 21.981-13.989 35.97-35.97 35.97H658.154c-13.988 0-25.983-7.992-33.973-21.981-5.997-13.989-4-27.977 7.991-39.97l79.942-77.946c-55.954-51.973-121.918-77.955-199.863-77.955-37.975 0-75.95 8.002-113.924 21.99-37.975 15.985-67.948 37.976-91.934 63.957-25.982 23.987-47.973 53.96-63.957 91.934-29.983 73.955-29.983 153.895 0 227.85 15.984 37.976 37.975 67.947 63.957 91.934 23.986 25.982 53.959 47.973 91.934 63.956 37.974 13.989 75.95 21.991 113.924 21.991 45.967 0 87.942-9.998 127.913-29.982 41.976-17.99 75.951-45.967 101.931-83.943 7.993-4 11.994-5.995 13.989-5.995 5.997 0 9.998 1.994 13.988 5.995l77.958 77.946c3.989 4 5.986 7.993 5.986 11.994 0 1.994-1.996 5.995-3.99 11.994-43.973 51.962-93.941 91.934-151.9 117.914-53.958 25.983-115.92 39.972-185.874 39.972-61.961 0-119.921-11.984-169.89-33.973-57.96-25.985-105.923-57.963-139.896-93.943-35.98-33.972-67.958-81.936-93.94-139.897-45.967-101.93-45.967-237.846 0-339.777 25.982-57.96 57.96-105.923 93.94-139.896 33.973-35.98 81.936-67.958 139.896-93.94 49.968-21.99 107.928-33.974 169.89-33.974 55.963 0 109.923 9.988 161.885 29.973 53.97 21.99 101.933 51.963 139.908 89.938l73.954-73.944c9.987-9.998 23.987-13.988 39.971-8.002 13.988 8.002 21.98 19.995 21.98 33.984z"}));e.displayName="UpdateIcon";const s={"/":{install:"安装",iOSInstall:"点击分享按钮然后点击“添加到主屏幕”",cancel:"取消",close:"关闭",prevImage:"上一张图片",nextImage:"下一张图片",desc:"详情",feature:"主要特色",explain:"该应用可以安装在你的 PC 或移动设备上。这将使该 Web 应用程序外观和行为与其他应用程序相同。它将在出现在应用程序列表中，并可以固定到主屏幕，开始菜单或任务栏。此 Web 应用程序还将能够与其他应用程序和你的操作系统安全地进行交互。",hint:"发现新内容可用",update:"新内容已就绪"}},popup="",W=Q=>{const nn=Q.waiting;if(!nn)return;const an=new MessageChannel;nn.postMessage({type:"SKIP_WAITING"},[an.port2])};var b=defineComponent({name:"SWUpdatePopup",setup(Q,{slots:nn}){const an=le(s),en=ref(),sn=computed(()=>!!en.value),tn=()=>{en.value&&(W(en.value),en.value=void 0)};return onMounted(()=>{r().on("updated",on=>{on&&(en.value=on)})}),()=>h$2(Transition,{name:"popup"},()=>{var on;return((on=nn.default)==null?void 0:on.call(nn,{enabled:sn.value,reload:tn}))||(sn.value?h$2("button",{type:"button",class:"sw-update-popup",tabindex:0,onClick:()=>tn()},[an.value.update,h$2("span",{class:"icon-wrapper"},h$2(e))]):null)})}});const clientConfig11=defineClientConfig({setup:()=>{m()},rootComponents:[b]}),HopeIcon=Q=>{const{icon:nn=""}=Q;return isLinkHttp(nn)?h$2("img",{class:"icon",src:nn,"no-view":""}):ze(nn)?h$2("img",{class:"icon",src:withBase(nn),"no-view":""}):h$2(resolveComponent("FontIcon"),Q)};HopeIcon.displayName="HopeIcon";const useAutoLink=(Q,nn=!1)=>{const an=useRouter(),{fullPath:en,meta:sn,name:tn}=j(an,encodeURI(Q));return{text:!nn&&sn.s?sn.s:sn.t||Q,link:tn==="404"?Q:en,...sn.i?{icon:sn.i}:{}}},useNavigate=()=>{const Q=useRouter(),nn=useRoute();return an=>{if(an)if(ze(an))nn.path!==an&&Q.push(an);else if(isLinkHttp(an)||isLinkMailto(an))window&&window.open(an);else{const en=nn.path.slice(0,nn.path.lastIndexOf("/"));Q.push(`${en}/${encodeURI(an)}`)}}},useThemeData=()=>useThemeData$1(),useThemeLocaleData=()=>useThemeLocaleData$1(),usePure=()=>computed(()=>Boolean(useThemeData().value.pure)),usePageAuthor=()=>{const Q=useThemeLocaleData(),nn=usePageFrontmatter();return computed(()=>{const{author:an}=nn.value;return an?ke(an):an===!1?[]:ke(Q.value.author,!1)})},usePageCategory=()=>{const Q=usePageFrontmatter();return computed(()=>Se(Q.value.category).map(nn=>{var an,en;return{name:nn,path:((en=(an=inject(Symbol.for("categoryMap")))==null?void 0:an.value.map[nn])==null?void 0:en.path)||""}}))},usePageTag=()=>{const Q=usePageFrontmatter();return computed(()=>xe(Q.value.tag).map(nn=>{var an,en;return{name:nn,path:((en=(an=inject(Symbol.for("tagMap")))==null?void 0:an.value.map[nn])==null?void 0:en.path)||""}}))},usePageDate=()=>{const Q=usePageFrontmatter(),nn=usePageData();return computed(()=>{const an=ye(Q.value.date);if(an)return an;const{createdTime:en}=nn.value.git||{};return en?new Date(en):null})},usePageInfo=()=>{const Q=useThemeLocaleData(),nn=usePageData(),an=usePageFrontmatter(),en=usePageAuthor(),sn=usePageCategory(),tn=usePageTag(),on=usePageDate(),ln=computed(()=>({author:en.value,category:sn.value,date:on.value,localizedDate:nn.value.localizedDate,tag:tn.value,isOriginal:an.value.isOriginal||!1,readingTime:nn.value.readingTime||null,pageview:"pageview"in an.value?an.value.pageview:!0})),pn=computed(()=>"pageInfo"in an.value?an.value.pageInfo:"pageInfo"in Q.value?Q.value.pageInfo:null);return{info:ln,items:pn}};let promise=null,promiseResolve=null;const scrollPromise={wait:()=>promise,pending:()=>{promise=new Promise(Q=>promiseResolve=Q)},resolve:()=>{promiseResolve==null||promiseResolve(),promise=null,promiseResolve=null}},useScrollPromise=()=>scrollPromise,useWindowSize=()=>{const Q=useThemeData(),nn=ref(!1),an=ref(!1),en=()=>{nn.value=window.innerWidth<=(Q.value.mobileBreakPoint||719),an.value=window.innerWidth>=(Q.value.pcBreakPoint||1440)};return onMounted(()=>{en(),useEventListener("resize",en,!1),useEventListener("orientationchange",en,!1)}),{isMobile:nn,isPC:an}},darkModeSymbol=Symbol(""),useDarkmode=()=>{const Q=inject(darkModeSymbol);if(!Q)throw new Error("useDarkmode() is called without provider.");return Q},injectDarkmode=Q=>{const nn=useThemeData(),an=usePreferredDark(),en=useStorage("vuepress-theme-hope-scheme","auto"),sn=computed(()=>nn.value.darkmode||"switch"),tn=computed(()=>{const ln=sn.value;return ln==="disable"?!1:ln==="enable"?!0:ln==="auto"?an.value:ln==="toggle"?en.value==="dark":en.value==="dark"||en.value==="auto"&&an.value}),on=computed(()=>{const ln=sn.value;return ln==="switch"||ln==="toggle"});Q.provide(darkModeSymbol,{canToggle:on,config:sn,isDarkmode:tn,status:en}),Object.defineProperties(Q.config.globalProperties,{$isDarkmode:{get:()=>tn.value}})},setupDarkmode=()=>{const{isDarkmode:Q}=useDarkmode(),nn=(an=Q.value)=>document.documentElement.setAttribute("data-theme",an?"dark":"light");onMounted(()=>{watch(Q,nn,{immediate:!0})})},AutoLink=defineComponent({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],setup(Q,{attrs:nn,emit:an,slots:en}){const sn=useRoute(),tn=useSiteData(),on=toRef(Q,"config"),ln=computed(()=>isLinkHttp(on.value.link)),pn=computed(()=>isLinkMailto(on.value.link)||isLinkTel(on.value.link)),cn=computed(()=>pn.value?void 0:on.value.target||(ln.value?"_blank":void 0)),rn=computed(()=>cn.value==="_blank"),un=computed(()=>!ln.value&&!pn.value&&!rn.value),dn=computed(()=>pn.value?void 0:on.value.rel||(rn.value?"noopener noreferrer":void 0)),vn=computed(()=>on.value.ariaLabel||on.value.text),mn=computed(()=>{if(Q.exact)return!1;const hn=h$1(tn.value.locales);return hn.length?hn.every(fn=>fn!==on.value.link):on.value.link!=="/"}),kn=computed(()=>un.value?on.value.activeMatch?new RegExp(on.value.activeMatch).test(sn.path):mn.value?A$1(sn.path,on.value.link):sn.path===on.value.link:!1);return()=>{var En,wn,Pn;const{text:hn,icon:fn,link:yn}=on.value;return un.value?h$2(RouterLink,{to:yn,"aria-label":vn.value,...nn,class:["nav-link",{active:kn.value},nn.class],onFocusout:()=>an("focusout")},()=>{var gn,bn,_n;return((gn=en.default)==null?void 0:gn.call(en))||[((bn=en.before)==null?void 0:bn.call(en))||h$2(HopeIcon,{icon:fn}),hn,(_n=en.after)==null?void 0:_n.call(en)]}):h$2("a",{href:yn,rel:dn.value,target:cn.value,"aria-label":vn.value,...nn,class:["nav-link",nn.class],onFocusout:()=>an("focusout")},((En=en.default)==null?void 0:En.call(en))||[((wn=en.before)==null?void 0:wn.call(en))||h$2(HopeIcon,{icon:fn}),hn,Q.noExternalLinkIcon?null:h$2(ExternalLinkIcon),(Pn=en.after)==null?void 0:Pn.call(en)])}}}),isActiveSidebarItem=(Q,nn,an=!1)=>"activeMatch"in nn?new RegExp(nn.activeMatch).test(Q.path):Le(Q,nn.link)?!0:nn.children&&!an?nn.children.some(en=>isActiveSidebarItem(Q,en)):!1,isMatchedSidebarItem=(Q,nn)=>nn.type==="group"?nn.children.some(an=>an.type==="group"?isMatchedSidebarItem(Q,an):an.type==="page"&&isActiveSidebarItem(Q,an,!0))||"prefix"in nn&&Le(Q,nn.prefix):!1,renderItem=(Q,nn)=>isString$1(Q.link)?h$2(AutoLink,{...nn,config:Q}):h$2("p",nn,[h$2(HopeIcon,{icon:Q.icon}),Q.text]),renderChildren$1=Q=>{const nn=useRoute();return Q?h$2("ul",{class:"sidebar-sub-headers"},Q.map(an=>{const en=isActiveSidebarItem(nn,an,!0);return h$2("li",{class:"sidebar-sub-header"},[renderItem(an,{class:["sidebar-link","heading",{active:en}]}),renderChildren$1(an.children)])})):null},sidebarData={},resolvePrefix=(Q="",nn="")=>ze(nn)?nn:`${ensureEndingSlash(Q)}${nn}`,headerToSidebarItem=(Q,nn)=>{const an=usePageData();return{type:"heading",text:Q.title,link:`${an.value.path}#${Q.slug}`,children:headersToSidebarItemChildren(Q.children,nn)}},headersToSidebarItemChildren=(Q,nn)=>nn>0?Q.map(an=>headerToSidebarItem(an,nn-1)):[],resolveHeadingSidebarItems=Q=>{const nn=usePageData();return headersToSidebarItemChildren(nn.value.headers,Q)},resolveArraySidebarItems=(Q,nn,an="")=>{const en=usePageData(),sn=(tn,on=an)=>{var pn;const ln=isString$1(tn)?useAutoLink(resolvePrefix(on,tn)):tn.link?{...tn,...isLinkExternal(tn.link)?{}:{link:useAutoLink(resolvePrefix(on,tn.link)).link}}:tn;if("children"in ln){const cn=resolvePrefix(on,ln.prefix),rn=ln.children==="structure"?sidebarData[cn]:ln.children;return{type:"group",...ln,prefix:cn,children:rn.map(un=>sn(un,cn))}}return{type:"page",...ln,children:ln.link===en.value.path?headersToSidebarItemChildren(((pn=en.value.headers[0])==null?void 0:pn.level)===1?en.value.headers[0].children:en.value.headers,nn):[]}};return Q.map(tn=>sn(tn))},resolveMultiSidebarItems=(Q,nn)=>{const an=usePageData(),en=h$1(Q).sort((sn,tn)=>tn.length-sn.length);for(const sn of en)if(A$1(decodeURI(an.value.path),sn)){const tn=Q[sn];return tn?resolveArraySidebarItems(tn==="structure"?sidebarData[sn]:tn==="heading"?resolveHeadingSidebarItems(nn):tn,nn,sn):[]}return console.warn(`${an.value.path} is missing sidebar config.`),[]},resolveSidebarItems=()=>{const Q=useRouteLocale(),nn=usePageFrontmatter(),an=useThemeLocaleData(),en=nn.value.home?!1:nn.value.sidebar??an.value.sidebar??"structure",sn=nn.value.headerDepth??an.value.headerDepth??2;return en===!1?[]:en==="heading"?resolveHeadingSidebarItems(sn):en==="structure"?resolveArraySidebarItems(sidebarData[Q.value],sn,Q.value):isArray(en)?resolveArraySidebarItems(en,sn):isPlainObject(en)?resolveMultiSidebarItems(en,sn):[]},sidebarItemsSymbol=Symbol(""),setupSidebarItems=()=>{const Q=computed(()=>resolveSidebarItems());provide(sidebarItemsSymbol,Q)},useSidebarItems=()=>{const Q=inject(sidebarItemsSymbol);if(!Q)throw new Error("useSidebarItems() is called without provider.");return Q},footer="",PageFooter=defineComponent({name:"PageFooter",setup(){const Q=usePageFrontmatter(),nn=useThemeLocaleData(),an=usePageAuthor(),en=computed(()=>{const{copyright:on,footer:ln}=Q.value;return ln!==!1&&Boolean(on||ln||nn.value.displayFooter)}),sn=computed(()=>{const{footer:on}=Q.value;return on===!1?!1:isString$1(on)?on:nn.value.footer||""}),tn=computed(()=>"copyright"in Q.value?Q.value.copyright:"copyright"in nn.value?nn.value.copyright:an.value.length?`Copyright © ${new Date().getFullYear()} ${an.value[0].name}`:!1);return()=>en.value?h$2("footer",{class:"footer-wrapper"},[sn.value?h$2("div",{class:"footer",innerHTML:sn.value}):null,tn.value?h$2("div",{class:"copyright",innerHTML:tn.value}):null]):null}}),dropdownLink="",DropdownLink=defineComponent({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},setup(Q,{slots:nn}){const an=usePageData(),en=toRef(Q,"config"),sn=computed(()=>en.value.ariaLabel||en.value.text),tn=ref(!1);watch(()=>an.value.path,()=>{tn.value=!1});const on=ln=>{ln.detail===0&&(tn.value=!tn.value)};return()=>{var ln;return h$2("div",{class:["dropdown-wrapper",{open:tn.value}]},[h$2("button",{type:"button",class:"dropdown-title","aria-label":sn.value,onClick:on},[((ln=nn.title)==null?void 0:ln.call(nn))||h$2("span",{class:"title"},[h$2(HopeIcon,{icon:en.value.icon}),Q.config.text]),h$2("span",{class:"arrow"}),h$2("ul",{class:"nav-dropdown"},en.value.children.map((pn,cn)=>{const rn=cn===en.value.children.length-1;return h$2("li",{class:"dropdown-item"},"children"in pn?[h$2("h4",{class:"dropdown-subtitle"},pn.link?h$2(AutoLink,{config:pn,onFocusout:()=>{pn.children.length===0&&rn&&(tn.value=!1)}}):h$2("span",pn.text)),h$2("ul",{class:"dropdown-subitem-wrapper"},pn.children.map((un,dn)=>h$2("li",{class:"dropdown-subitem"},h$2(AutoLink,{config:un,onFocusout:()=>{dn===pn.children.length-1&&rn&&(tn.value=!1)}}))))]:h$2(AutoLink,{config:pn,onFocusout:()=>{rn&&(tn.value=!1)}}))}))])])}}}),I18nIcon=()=>h$2(c$3,{name:"i18n"},()=>[h$2("path",{d:"M379.392 460.8 494.08 575.488l-42.496 102.4L307.2 532.48 138.24 701.44l-71.68-72.704L234.496 460.8l-45.056-45.056c-27.136-27.136-51.2-66.56-66.56-108.544h112.64c7.68 14.336 16.896 27.136 26.112 35.84l45.568 46.08 45.056-45.056C382.976 312.32 409.6 247.808 409.6 204.8H0V102.4h256V0h102.4v102.4h256v102.4H512c0 70.144-37.888 161.28-87.04 210.944L378.88 460.8zM576 870.4 512 1024H409.6l256-614.4H768l256 614.4H921.6l-64-153.6H576zM618.496 768h196.608L716.8 532.48 618.496 768z"})]);I18nIcon.displayName="I18nIcon";const resolveNavbarItem=(Q,nn="")=>isString$1(Q)?useAutoLink(`${nn}${Q}`):"children"in Q?{...Q,...Q.link&&!isLinkExternal(Q.link)?useAutoLink(`${nn}${Q.link}`):{},children:Q.children.map(an=>resolveNavbarItem(an,`${nn}${Q.prefix||""}`))}:{...Q,link:isLinkExternal(Q.link)?Q.link:useAutoLink(`${nn}${Q.link}`).link},useNavbarConfig=()=>computed(()=>(useThemeLocaleData().value.navbar||[]).map(Q=>resolveNavbarItem(Q))),useNavbarLanguageDropdown=()=>{const Q=useRouter(),nn=useRoute(),an=useRouteLocale(),en=useSiteLocaleData(),sn=useThemeData(),tn=useThemeLocaleData();return computed(()=>{const on=h$1(en.value.locales);if(on.length<2)return null;const{path:ln,fullPath:pn}=Q.currentRoute.value,{navbarLocales:cn}=tn.value;return{text:"",ariaLabel:cn==null?void 0:cn.selectLangAriaLabel,children:[...on.map(un=>{var fn,yn,En;const dn=((fn=en.value.locales)==null?void 0:fn[un])??{},vn=((yn=sn.value.locales)==null?void 0:yn[un])??{},mn=dn.lang||"",kn=((En=vn.navbarLocales)==null?void 0:En.langName)??mn;let hn;if(mn===en.value.lang)hn=ln;else{const wn=ln.replace(an.value,un);hn=Q.getRoutes().some(Pn=>Pn.path===wn)?pn.replace(ln,wn):vn.home??un}return{text:kn,link:hn}}),...$$1(sn.value.extraLocales||{}).map(([un,dn])=>({text:un,link:dn.replace(":route",nn.path.replace(an.value,""))}))]}})},useNavbarRepo=()=>{const Q=useThemeLocaleData(),nn=computed(()=>Q.value.repo||null),an=computed(()=>nn.value?Ae(nn.value):null),en=computed(()=>nn.value?$e(nn.value):null),sn=computed(()=>an.value?Q.value.repoLabel??(en.value===null?"Source":en.value):null);return computed(()=>!an.value||!sn.value||Q.value.repoDisplay===!1?null:{type:en.value||"Source",label:sn.value,link:an.value})};defineComponent({name:"LanguageDropdown",setup(){const Q=useNavbarLanguageDropdown();return()=>Q.value?h$2("div",{class:"nav-item"},h$2(DropdownLink,{class:"i18n-dropdown",config:Q.value},{title:()=>{var nn;return h$2(I18nIcon,{"aria-label":(nn=Q.value)==null?void 0:nn.ariaLabel,style:{width:"1rem",height:"1rem",verticalAlign:"middle"}})}})):null}});const navScreenDropdown="",NavScreenDropdown=defineComponent({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(Q){const nn=usePageData(),an=toRef(Q,"config"),en=computed(()=>an.value.ariaLabel||an.value.text),sn=ref(!1);watch(()=>nn.value.path,()=>{sn.value=!1});const tn=(on,ln)=>ln[ln.length-1]===on;return()=>[h$2("button",{type:"button",class:["nav-screen-dropdown-title",{active:sn.value}],"aria-label":en.value,onClick:()=>{sn.value=!sn.value}},[h$2("span",{class:"title"},[h$2(HopeIcon,{icon:an.value.icon}),Q.config.text]),h$2("span",{class:["arrow",sn.value?"down":"end"]})]),h$2("ul",{class:["nav-screen-dropdown",{hide:!sn.value}]},an.value.children.map(on=>h$2("li",{class:"dropdown-item"},"children"in on?[h$2("h4",{class:"dropdown-subtitle"},on.link?h$2(AutoLink,{config:on,onFocusout:()=>{tn(on,an.value.children)&&on.children.length===0&&(sn.value=!1)}}):h$2("span",on.text)),h$2("ul",{class:"dropdown-subitem-wrapper"},on.children.map(ln=>h$2("li",{class:"dropdown-subitem"},h$2(AutoLink,{config:ln,onFocusout:()=>{tn(ln,on.children)&&tn(on,an.value.children)&&(sn.value=!1)}}))))]:h$2(AutoLink,{config:on,onFocusout:()=>{tn(on,an.value.children)&&(sn.value=!1)}}))))]}}),navScreenLinks="",NavScreenLinks=defineComponent({name:"NavScreenLinks",setup(){const Q=useNavbarConfig();return()=>Q.value.length?h$2("nav",{class:"nav-screen-links"},Q.value.map(nn=>h$2("div",{class:"navbar-links-item"},"children"in nn?h$2(NavScreenDropdown,{config:nn}):h$2(AutoLink,{config:nn})))):null}}),DarkIcon=()=>h$2(c$3,{name:"dark"},()=>h$2("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));DarkIcon.displayName="DarkIcon";const LightIcon=()=>h$2(c$3,{name:"light"},()=>h$2("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));LightIcon.displayName="LightIcon";const AutoIcon=()=>h$2(c$3,{name:"auto"},()=>h$2("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));AutoIcon.displayName="AutoIcon";const EnterFullScreenIcon=()=>h$2(c$3,{name:"enter-fullscreen"},()=>h$2("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));EnterFullScreenIcon.displayName="EnterFullScreenIcon";const CancelFullScreenIcon=()=>h$2(c$3,{name:"cancel-fullscreen"},()=>h$2("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));CancelFullScreenIcon.displayName="CancelFullScreenIcon";const OutlookIcon=()=>h$2(c$3,{name:"outlook"},()=>[h$2("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);OutlookIcon.displayName="OutlookIcon";const appearanceSwitch="",AppearanceSwitch=defineComponent({name:"AppearanceSwitch",setup(){const{config:Q,status:nn}=useDarkmode(),an=()=>{Q.value==="switch"?nn.value={light:"dark",dark:"auto",auto:"light"}[nn.value]:nn.value=nn.value==="light"?"dark":"light"};return()=>h$2("button",{type:"button",id:"appearance-switch",onClick:()=>an()},[h$2(AutoIcon,{style:{display:nn.value==="auto"?"block":"none"}}),h$2(DarkIcon,{style:{display:nn.value==="dark"?"block":"none"}}),h$2(LightIcon,{style:{display:nn.value==="light"?"block":"none"}})])}}),AppearanceMode=defineComponent({name:"AppearanceMode",setup(){const Q=useThemeLocaleData(),{canToggle:nn}=useDarkmode(),an=computed(()=>Q.value.outlookLocales.darkmode);return()=>nn.value?h$2("div",{class:"appearance-wrapper"},[h$2("label",{class:"appearance-title",for:"appearance-switch"},an.value),h$2(AppearanceSwitch)]):null}}),themeColorPicker="",ThemeColorPicker=defineComponent({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(Q){const nn=(an="")=>{const en=document.documentElement.classList,sn=h$1(Q.themeColor).map(tn=>`theme-${tn}`);if(!an){localStorage.removeItem("theme"),en.remove(...sn);return}en.remove(...sn.filter(tn=>tn!==`theme-${an}`)),en.add(`theme-${an}`),localStorage.setItem("theme",an)};return onMounted(()=>{const an=localStorage.getItem("theme");an&&nn(an)}),()=>h$2("ul",{id:"theme-color-picker"},[h$2("li",h$2("span",{class:"theme-color",onClick:()=>nn()})),...$$1(Q.themeColor).map(([an,en])=>h$2("li",h$2("span",{style:{background:en},onClick:()=>nn(an)})))])}}),ThemeColor=defineComponent({name:"ThemeColor",setup(){const Q=useThemeData(),nn=useThemeLocaleData(),an=computed(()=>nn.value.outlookLocales.themeColor),en=computed(()=>{const{themeColor:sn}=Q.value;return sn===!1?null:sn});return()=>en.value?h$2("div",{class:"theme-color-wrapper"},[h$2("label",{class:"theme-color-title",for:"theme-color-picker"},an.value),h$2(ThemeColorPicker,{themeColor:en.value})]):null}}),toggleFullScreenButton="",ToggleFullScreenButton=defineComponent({name:"ToggleFullScreenButton",setup(){const Q=useThemeLocaleData(),{isSupported:nn,isFullscreen:an,toggle:en}=useFullscreen(),sn=computed(()=>Q.value.outlookLocales.fullscreen);return()=>nn?h$2("div",{class:"full-screen-wrapper"},[h$2("label",{class:"full-screen-title",for:"full-screen-switch"},sn.value),h$2("button",{type:"button",class:"full-screen",id:"full-screen-switch",ariaPressed:an.value,onClick:()=>en()},an.value?h$2(CancelFullScreenIcon):h$2(EnterFullScreenIcon))]):null}}),OutlookSettings=defineComponent({name:"OutlookSettings",setup(){const Q=useThemeData(),nn=usePure(),an=computed(()=>!nn.value&&Boolean(Q.value.themeColor)),en=computed(()=>!nn.value&&Q.value.fullscreen);return()=>h$2(ClientOnly,()=>[an.value?h$2(ThemeColor):null,h$2(AppearanceMode),en.value?h$2(ToggleFullScreenButton):null])}}),navScreen="",NavScreen=defineComponent({name:"NavScreen",props:{show:Boolean},emits:["close"],setup(Q,{emit:nn,slots:an}){const en=usePageData(),{isMobile:sn}=useWindowSize(),tn=ref(),on=useScrollLock(tn);return onMounted(()=>{tn.value=document.body,watch(sn,ln=>{!ln&&Q.show&&(on.value=!1,nn("close"))}),watch(()=>en.value.path,()=>{on.value=!1,nn("close")})}),onUnmounted(()=>{on.value=!1}),()=>h$2(Transition,{name:"fade",onEnter:()=>{on.value=!0},onAfterLeave:()=>{on.value=!1}},()=>{var ln,pn;return Q.show?h$2("div",{id:"nav-screen"},h$2("div",{class:"container"},[(ln=an.before)==null?void 0:ln.call(an),h$2(NavScreenLinks),h$2("div",{class:"outlook-wrapper"},h$2(OutlookSettings)),(pn=an.after)==null?void 0:pn.call(an)])):null})}}),navbarBrand="",NavbarBrand=defineComponent({name:"NavbarBrand",setup(){const Q=useRouteLocale(),nn=useSiteLocaleData(),an=useThemeLocaleData(),en=computed(()=>an.value.home||Q.value),sn=computed(()=>nn.value.title),tn=computed(()=>an.value.logo?withBase(an.value.logo):null),on=computed(()=>an.value.logoDark?withBase(an.value.logoDark):null);return()=>h$2(RouterLink,{to:en.value,class:"brand"},()=>[tn.value?h$2("img",{class:["logo",{light:Boolean(on.value)}],src:tn.value,alt:sn.value}):null,on.value?h$2("img",{class:["logo dark"],src:on.value,alt:sn.value}):null,sn.value?h$2("span",{class:["site-name",{"hide-in-pad":tn.value&&an.value.hideSiteNameOnMobile!==!1}]},sn.value):null])}}),navbarLinks="",NavbarLinks=defineComponent({name:"NavbarLinks",setup(){const Q=useNavbarConfig();return()=>Q.value.length?h$2("nav",{class:"nav-links"},[...Q.value.map(nn=>h$2("div",{class:"nav-item hide-in-mobile"},"children"in nn?h$2(DropdownLink,{config:nn}):h$2(AutoLink,{config:nn})))]):null}}),repoLink="",RepoLink=defineComponent({name:"RepoLink",components:{BitbucketIcon:S$4,GiteeIcon:k$2,GitHubIcon:O$2,GitLabIcon:_$1,SourceIcon:x$2},setup(){const Q=useNavbarRepo();return()=>Q.value?h$2("div",{class:"nav-item"},h$2("a",{class:"repo-link",href:Q.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":Q.value.label},h$2(resolveComponent(`${Q.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}}),toggleNavbarButton="",ToggleNavbarButton=({active:Q=!1},{emit:nn})=>h$2("button",{type:"button",class:["toggle-navbar-button",{"is-active":Q}],"aria-label":"Toggle Navbar","aria-expanded":Q,"aria-controls":"nav-screen",onClick:()=>nn("toggle")},h$2("span",{class:"button-container"},[h$2("span",{class:"button-top"}),h$2("span",{class:"button-middle"}),h$2("span",{class:"button-bottom"})]));ToggleNavbarButton.displayName="ToggleNavbarButton";const toggleSidebarButton="",ToggleSidebarButton=(Q,{emit:nn})=>h$2("button",{type:"button",class:"toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>nn("toggle")},h$2("span",{class:"icon"}));ToggleSidebarButton.displayName="ToggleSidebarButton";ToggleSidebarButton.emits=["toggle"];const outlookButton="",OutlookButton=defineComponent({name:"OutlookButton",setup(){const{isSupported:Q}=useFullscreen(),nn=useThemeData(),an=usePure(),en=usePageData(),{canToggle:sn}=useDarkmode(),tn=ref(!1),on=computed(()=>!an.value&&Boolean(nn.value.themeColor)),ln=computed(()=>!an.value&&nn.value.fullscreen&&Q);return watch(()=>en.value.path,()=>{tn.value=!1}),()=>sn.value||ln.value||on.value?h$2("div",{class:"nav-item hide-in-mobile"},sn.value&&!ln.value&&!on.value?h$2(AppearanceSwitch):ln.value&&!sn.value&&!on.value?h$2(ToggleFullScreenButton):h$2("button",{type:"button",class:["outlook-button",{open:tn.value}],tabindex:"-1","aria-hidden":!0},[h$2(OutlookIcon),h$2("div",{class:"outlook-dropdown"},h$2(OutlookSettings))])):null}}),navbar="",Navbar=defineComponent({name:"NavBar",emits:["toggleSidebar"],setup(Q,{emit:nn,slots:an}){const en=useThemeLocaleData(),{isMobile:sn}=useWindowSize(),tn=ref(!1),on=computed(()=>{const{navbarAutoHide:pn="mobile"}=en.value;return pn!=="none"&&(pn==="always"||sn.value)}),ln=computed(()=>en.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]});return()=>{var cn,rn,un,dn,vn,mn;const pn={Brand:h$2(NavbarBrand),Language:null,Links:h$2(NavbarLinks),Repo:h$2(RepoLink),Outlook:h$2(OutlookButton),Search:Z("Docsearch")?h$2(resolveComponent("Docsearch")):Z("SearchBox")?h$2(resolveComponent("SearchBox")):Z("SearchBox")?h$2(resolveComponent("SearchBox")):null};return[h$2("header",{class:["navbar",{"auto-hide":on.value,"hide-icon":en.value.navbarIcon===!1}],id:"navbar"},[h$2("div",{class:"navbar-start"},[h$2(ToggleSidebarButton,{onToggle:()=>{tn.value&&(tn.value=!1),nn("toggleSidebar")}}),(cn=an.startBefore)==null?void 0:cn.call(an),...(ln.value.start||[]).map(kn=>pn[kn]),(rn=an.startAfter)==null?void 0:rn.call(an)]),h$2("div",{class:"navbar-center"},[(un=an.centerBefore)==null?void 0:un.call(an),...(ln.value.center||[]).map(kn=>pn[kn]),(dn=an.centerAfter)==null?void 0:dn.call(an)]),h$2("div",{class:"navbar-end"},[(vn=an.endBefore)==null?void 0:vn.call(an),...(ln.value.end||[]).map(kn=>pn[kn]),(mn=an.endAfter)==null?void 0:mn.call(an),h$2(ToggleNavbarButton,{active:tn.value,onToggle:()=>{tn.value=!tn.value}})])]),h$2(NavScreen,{show:tn.value,onClose:()=>{tn.value=!1}},{before:()=>{var kn;return(kn=an.screenTop)==null?void 0:kn.call(an)},after:()=>{var kn;return(kn=an.screenBottom)==null?void 0:kn.call(an)}})]}}}),sidebarChild="",SidebarChild=defineComponent({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(Q){const nn=useRoute();return()=>[renderItem(Q.config,{class:["sidebar-link",`sidebar-${Q.config.type}`,{active:isActiveSidebarItem(nn,Q.config,!0)}],exact:!0}),renderChildren$1(Q.config.children)]}}),sidebarGroup="",SidebarGroup=defineComponent({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(Q,{emit:nn}){const an=useRoute(),en=computed(()=>isActiveSidebarItem(an,Q.config)),sn=computed(()=>isActiveSidebarItem(an,Q.config,!0));return()=>{const{collapsible:tn,children:on=[],icon:ln,prefix:pn,link:cn,text:rn}=Q.config;return h$2("section",{class:"sidebar-group"},[h$2(tn?"button":"p",{class:["sidebar-heading",{clickable:tn||cn,exact:sn.value,active:en.value}],...tn?{type:"button",onClick:()=>nn("toggle"),onKeydown:un=>{un.key==="Enter"&&nn("toggle")}}:{}},[h$2(HopeIcon,{icon:ln}),cn?h$2(RouterLink,{to:cn,class:"title"},()=>rn):h$2("span",{class:"title"},rn),tn?h$2("span",{class:["arrow",Q.open?"down":"end"]}):null]),Q.open||!tn?h$2(SidebarLinks,{key:pn,config:on}):null])}}}),sidebarLinks="",SidebarLinks=defineComponent({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(Q){const nn=useRoute(),an=ref(-1),en=sn=>{an.value=sn===an.value?-1:sn};return watch(()=>nn.path,()=>{const sn=Q.config.findIndex(tn=>isMatchedSidebarItem(nn,tn));an.value=sn},{immediate:!0,flush:"post"}),()=>h$2("ul",{class:"sidebar-links"},Q.config.map((sn,tn)=>h$2("li",sn.type==="group"?h$2(SidebarGroup,{config:sn,open:tn===an.value,onToggle:()=>en(tn)}):h$2(SidebarChild,{config:sn}))))}}),sidebar="",Sidebar=defineComponent({name:"SideBar",setup(Q,{slots:nn}){const an=useRoute(),en=useThemeLocaleData(),sn=useSidebarItems(),tn=ref();return onMounted(()=>{watch(()=>an.hash,on=>{const ln=document.querySelector(`.sidebar a.sidebar-link[href="${an.path}${on}"]`);if(!ln)return;const{top:pn,height:cn}=tn.value.getBoundingClientRect(),{top:rn,height:un}=ln.getBoundingClientRect();rn<pn?ln.scrollIntoView(!0):rn+un>pn+cn&&ln.scrollIntoView(!1)})}),()=>{var on,ln,pn;return h$2("aside",{class:["sidebar",{"hide-icon":en.value.sidebarIcon===!1}],id:"sidebar",ref:tn},[(on=nn.top)==null?void 0:on.call(nn),((ln=nn.default)==null?void 0:ln.call(nn))||h$2(SidebarLinks,{config:sn.value}),(pn=nn.bottom)==null?void 0:pn.call(nn)])}}}),common="",CommonWrapper=defineComponent({name:"CommonWrapper",props:{noNavbar:Boolean,noSidebar:Boolean},setup(Q,{slots:nn}){const an=useRouter(),en=usePageData(),sn=usePageFrontmatter(),tn=useThemeLocaleData(),{isMobile:on,isPC:ln}=useWindowSize(),[pn,cn]=useToggle(!1),[rn,un]=useToggle(!1),dn=useSidebarItems(),vn=ref(!1),mn=computed(()=>Q.noNavbar||sn.value.navbar===!1||tn.value.navbar===!1?!1:Boolean(en.value.title||tn.value.logo||tn.value.repo||tn.value.navbar)),kn=computed(()=>Q.noSidebar?!1:sn.value.sidebar!==!1&&dn.value.length!==0&&!sn.value.home),hn={x:0,y:0},fn=gn=>{hn.x=gn.changedTouches[0].clientX,hn.y=gn.changedTouches[0].clientY},yn=gn=>{const bn=gn.changedTouches[0].clientX-hn.x,_n=gn.changedTouches[0].clientY-hn.y;Math.abs(bn)>Math.abs(_n)*1.5&&Math.abs(bn)>40&&(bn>0&&hn.x<=80?cn(!0):cn(!1))},En=computed(()=>sn.value.home?!1:sn.value.toc||tn.value.toc!==!1&&sn.value.toc!==!1),wn=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let Pn=0;return useEventListener("scroll",useThrottleFn(()=>{const gn=wn();gn<=58||gn<Pn?vn.value=!1:Pn+200<gn&&!pn.value&&(vn.value=!0),Pn=gn},300,!0)),watch(on,gn=>{gn||cn(!1)}),onMounted(()=>{const gn=useScrollLock(document.body);watch(pn,_n=>{gn.value=_n});const bn=an.afterEach(()=>{cn(!1)});onUnmounted(()=>{gn.value=!1,bn()})}),()=>h$2(Z("GlobalEncrypt")?resolveComponent("GlobalEncrypt"):J$1,()=>{var gn;return h$2("div",{class:["theme-container",{"no-navbar":!mn.value,"no-sidebar":!kn.value&&!(nn.sidebar||nn.sidebarTop||nn.sidebarBottom),"has-toc":En.value,"hide-navbar":vn.value,"sidebar-collapsed":!on.value&&!ln.value&&rn.value,"sidebar-open":on.value&&pn.value},sn.value.containerClass||""],onTouchStart:fn,onTouchEnd:yn},[mn.value?h$2(Navbar,{onToggleSidebar:()=>cn()},{startBefore:()=>{var bn;return(bn=nn.navbarStartBefore)==null?void 0:bn.call(nn)},startAfter:()=>{var bn;return(bn=nn.navbarStartAfter)==null?void 0:bn.call(nn)},centerBefore:()=>{var bn;return(bn=nn.navbarCenterBefore)==null?void 0:bn.call(nn)},centerAfter:()=>{var bn;return(bn=nn.navbarCenterAfter)==null?void 0:bn.call(nn)},endBefore:()=>{var bn;return(bn=nn.navbarEndBefore)==null?void 0:bn.call(nn)},endAfter:()=>{var bn;return(bn=nn.navbarEndAfter)==null?void 0:bn.call(nn)},screenTop:()=>{var bn;return(bn=nn.navScreenTop)==null?void 0:bn.call(nn)},screenBottom:()=>{var bn;return(bn=nn.navScreenBottom)==null?void 0:bn.call(nn)}}):null,h$2(Transition,{name:"fade"},()=>pn.value?h$2("div",{class:"sidebar-mask",onClick:()=>cn(!1)}):null),h$2(Transition,{name:"fade"},()=>on.value?null:h$2("div",{class:"toggle-sidebar-wrapper",onClick:()=>un()},h$2("span",{class:["arrow",rn.value?"end":"start"]}))),h$2(Sidebar,{},{...nn.sidebar?{default:()=>{var bn;return(bn=nn.sidebar)==null?void 0:bn.call(nn)}}:{},top:()=>{var bn;return(bn=nn.sidebarTop)==null?void 0:bn.call(nn)},bottom:()=>{var bn;return(bn=nn.sidebarBottom)==null?void 0:bn.call(nn)}}),(gn=nn.default)==null?void 0:gn.call(nn),h$2(PageFooter)])})}}),featurePanel="",FeaturePanel=defineComponent({name:"FeaturePanel",props:{items:{type:Object,default:()=>[]},header:{type:String,default:""}},setup(Q){return()=>h$2("div",{class:"feature-panel"},[Q.header?h$2("h2",{class:"feature-header"},Q.header):null,Q.items.length?h$2("div",{class:"feature-wrapper"},Q.items.map(nn=>{const an=[h$2("h3",[h$2(HopeIcon,{icon:nn.icon}),h$2("span",{innerHTML:nn.title})]),h$2("p",{innerHTML:nn.details})];return nn.link?isLinkExternal(nn.link)?h$2("a",{class:"feature-item link",href:nn.link,role:"navigation","aria-label":nn.title,target:"_blank"},an):h$2(RouterLink,{class:"feature-item link",to:nn.link,role:"navigation","aria-label":nn.title},()=>an):h$2("div",{class:"feature-item"},an)})):null])}}),DropTransition=defineComponent({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},setup(Q,{slots:nn}){const an=sn=>{sn.style.transition=`transform ${Q.duration}s ease-in-out ${Q.delay}s, opacity ${Q.duration}s ease-in-out ${Q.delay}s`,sn.style.transform="translateY(-20px)",sn.style.opacity="0"},en=sn=>{sn.style.transform="translateY(0)",sn.style.opacity="1"};return()=>h$2(Q.type==="single"?Transition:TransitionGroup,{name:"drop",appear:Q.appear,onAppear:an,onAfterAppear:en,onEnter:an,onAfterEnter:en,onBeforeLeave:an},()=>{var sn;return(sn=nn.default)==null?void 0:sn.call(nn)})}}),heroInfo="",HeroInfo=defineComponent({name:"HeroInfo",setup(Q,{slots:nn}){const an=usePageFrontmatter(),en=useSiteLocaleData(),sn=computed(()=>an.value.heroText===!1?!1:an.value.heroText||en.value.title||"Hello"),tn=computed(()=>an.value.tagline===!1?!1:an.value.tagline||en.value.description||"Welcome to your VuePress site"),on=computed(()=>an.value.heroImage?withBase(an.value.heroImage):null),ln=computed(()=>an.value.heroImageDark?withBase(an.value.heroImageDark):null),pn=computed(()=>an.value.heroAlt||sn.value||"hero"),cn=computed(()=>an.value.actions??[]);return()=>{var rn,un;return h$2("header",{class:"hero-info-wrapper"},[((rn=nn.heroImage)==null?void 0:rn.call(nn))||h$2(DropTransition,{appear:!0,type:"group"},()=>[on.value?h$2("img",{key:"light",class:{light:ln.value},src:on.value,alt:pn.value}):null,ln.value?h$2("img",{key:"dark",class:"dark",src:ln.value,alt:pn.value}):null]),((un=nn.heroInfo)==null?void 0:un.call(nn))||h$2("div",{class:"hero-info"},[sn.value?h$2(DropTransition,{appear:!0,delay:.04},()=>h$2("h1",{id:"main-title"},sn.value)):null,tn.value?h$2(DropTransition,{appear:!0,delay:.08},()=>h$2("p",{class:"description"},tn.value)):null,cn.value.length?h$2(DropTransition,{appear:!0,delay:.12},()=>h$2("p",{class:"actions"},cn.value.map(dn=>h$2(AutoLink,{class:["action-button",dn.type||"default"],config:dn,noExternalLinkIcon:!0})))):null])])}}}),MarkdownContent=({custom:Q})=>h$2(Content,{class:["theme-hope-content",{custom:Q}]});MarkdownContent.displayName="MarkdownContent";MarkdownContent.props={custom:Boolean};const homePage="",HomePage=defineComponent({name:"HopePage",setup(Q,{slots:nn}){const an=usePure(),en=usePageFrontmatter(),sn=computed(()=>{const{features:tn}=en.value;return isArray(tn)?tn.some(on=>!("items"in on))?[{items:tn}]:tn:[]});return()=>{var tn,on,ln;return h$2("main",{class:["home project",{pure:an.value}],id:"main-content","aria-labelledby":en.value.heroText===null?void 0:"main-title"},[(tn=nn.top)==null?void 0:tn.call(nn),h$2(HeroInfo),sn.value.map(({header:pn="",items:cn},rn)=>h$2(DropTransition,{appear:!0,delay:.16+rn*.08},()=>h$2(FeaturePanel,{header:pn,items:cn}))),(on=nn.center)==null?void 0:on.call(nn),h$2(DropTransition,{appear:!0,delay:.16+sn.value.length*.08},()=>h$2(MarkdownContent)),(ln=nn.bottom)==null?void 0:ln.call(nn)])}}}),getAncestorLinks=(Q,nn)=>{const an=Q.replace(nn,"/").split("/"),en=[];let sn=removeEndingSlash(nn);return an.forEach((tn,on)=>{on!==an.length-1?(sn+=`${tn}/`,en.push(sn)):tn!==""&&(sn+=tn,en.push(sn))}),en},breadcrumb="",BreadCrumb=defineComponent({name:"BreadCrumb",setup(){const Q=useRouter(),nn=usePageData(),an=useRouteLocale(),en=usePageFrontmatter(),sn=useThemeLocaleData(),tn=ref([]),on=computed(()=>(en.value.breadcrumb||en.value.breadcrumb!==!1&&sn.value.breadcrumb!==!1)&&tn.value.length>1),ln=computed(()=>en.value.breadcrumbIcon||en.value.breadcrumbIcon!==!1&&sn.value.breadcrumbIcon!==!1),pn=()=>{const cn=Q.getRoutes(),rn=getAncestorLinks(nn.value.path,an.value).map(un=>{const dn=cn.find(vn=>vn.path===un);if(dn){const{meta:vn,path:mn}=j(Q,dn.path),kn=vn.s||vn.t;if(kn)return{title:kn,icon:vn.i,path:mn}}return null}).filter(un=>un!==null);rn.length>1&&(tn.value=rn)};return onMounted(()=>{pn(),watch(()=>nn.value.path,pn)}),()=>h$2("nav",{class:["breadcrumb",{disable:!on.value}]},on.value?h$2("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},tn.value.map((cn,rn)=>h$2("li",{class:{"is-active":tn.value.length-1===rn},property:"itemListElement",typeof:"ListItem"},[h$2(RouterLink,{to:cn.path,property:"item",typeof:"WebPage"},()=>[ln.value?h$2(HopeIcon,{icon:cn.icon}):null,h$2("span",{property:"name"},cn.title||"Unknown")]),h$2("meta",{property:"position",content:rn+1})]))):[])}}),pageNav="",resolveFromFrontmatterConfig=Q=>Q===!1?!1:isString$1(Q)?useAutoLink(Q,!0):isPlainObject(Q)?Q:null,resolveFromSidebarItems=(Q,nn,an)=>{const en=Q.findIndex(sn=>sn.link===nn);if(en!==-1){const sn=Q[en+an];return sn!=null&&sn.link?sn:null}for(const sn of Q)if(sn.children){const tn=resolveFromSidebarItems(sn.children,nn,an);if(tn)return tn}return null},PageNav=defineComponent({name:"PageNav",setup(){const Q=useThemeLocaleData(),nn=usePageFrontmatter(),an=useSidebarItems(),en=usePageData(),sn=useNavigate(),tn=computed(()=>{const ln=resolveFromFrontmatterConfig(nn.value.prev);return ln===!1?null:ln||(Q.value.prevLink===!1?null:resolveFromSidebarItems(an.value,en.value.path,-1))}),on=computed(()=>{const ln=resolveFromFrontmatterConfig(nn.value.next);return ln===!1?null:ln||(Q.value.nextLink===!1?null:resolveFromSidebarItems(an.value,en.value.path,1))});return useEventListener("keydown",ln=>{ln.altKey&&(ln.key==="ArrowRight"?on.value&&(sn(on.value.link),ln.preventDefault()):ln.key==="ArrowLeft"&&tn.value&&(sn(tn.value.link),ln.preventDefault()))}),()=>tn.value||on.value?h$2("nav",{class:"page-nav"},[tn.value?h$2(AutoLink,{class:"prev",config:tn.value},()=>{var ln,pn;return[h$2("div",{class:"hint"},[h$2("span",{class:"arrow start"}),Q.value.metaLocales.prev]),h$2("div",{class:"link"},[h$2(HopeIcon,{icon:(ln=tn.value)==null?void 0:ln.icon}),(pn=tn.value)==null?void 0:pn.text])]}):null,on.value?h$2(AutoLink,{class:"next",config:on.value},()=>{var ln,pn;return[h$2("div",{class:"hint"},[Q.value.metaLocales.next,h$2("span",{class:"arrow end"})]),h$2("div",{class:"link"},[(ln=on.value)==null?void 0:ln.text,h$2(HopeIcon,{icon:(pn=on.value)==null?void 0:pn.icon})])]}):null]):null}}),AuthorIcon=()=>h$2(c$3,{name:"author"},()=>h$2("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));AuthorIcon.displayName="AuthorIcon";const CalendarIcon=()=>h$2(c$3,{name:"calendar"},()=>h$2("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));CalendarIcon.displayName="CalendarIcon";const CategoryIcon$1=()=>h$2(c$3,{name:"category"},()=>h$2("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));CategoryIcon$1.displayName="CategoryIcon";const EyeIcon=()=>h$2(c$3,{name:"eye"},()=>h$2("path",{d:"M992 512.096c0-5.76-.992-10.592-1.28-11.136-.192-2.88-1.152-8.064-2.08-10.816-.256-.672-.544-1.376-.832-2.08-.48-1.568-1.024-3.104-1.6-4.32C897.664 290.112 707.104 160 512 160c-195.072 0-385.632 130.016-473.76 322.592-1.056 2.112-1.792 4.096-2.272 5.856a55.512 55.512 0 00-.64 1.6c-1.76 5.088-1.792 8.64-1.632 7.744-.832 3.744-1.568 11.168-1.568 11.168-.224 2.272-.224 4.032.032 6.304 0 0 .736 6.464 1.088 7.808.128 1.824.576 4.512 1.12 6.976h-.032c.448 2.08 1.12 4.096 1.984 6.08.48 1.536.992 2.976 1.472 4.032C126.432 733.856 316.992 864 512 864c195.136 0 385.696-130.048 473.216-321.696 1.376-2.496 2.24-4.832 2.848-6.912.256-.608.48-1.184.672-1.728 1.536-4.48 1.856-8.32 1.728-8.32l-.032.032c.608-3.104 1.568-7.744 1.568-13.28zM512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160z"}));EyeIcon.displayName="EyeIcon";const FireIcon=()=>h$2(c$3,{name:"fire"},()=>h$2("path",{d:"M726.4 201.6c-12.8-9.6-28.8-6.4-38.4 0-9.6 9.6-16 25.6-9.6 38.4 6.4 12.8 9.6 28.8 12.8 44.8C604.8 83.2 460.8 38.4 454.4 35.2c-9.6-3.2-22.4 0-28.8 6.4-9.6 6.4-12.8 19.2-9.6 28.8 12.8 86.4-25.6 188.8-115.2 310.4-6.4-25.6-16-51.2-32-80-9.6-9.6-22.4-16-35.2-12.8-16 3.2-25.6 12.8-25.6 28.8-3.2 48-25.6 92.8-51.2 140.8C134.4 499.2 112 544 102.4 592c-32 150.4 99.2 329.6 233.6 380.8 9.6 3.2 19.2 6.4 32 9.6-25.6-19.2-41.6-51.2-48-96C294.4 691.2 505.6 640 515.2 460.8c153.6 105.6 224 336 137.6 505.6 3.2 0 6.4-3.2 9.6-3.2 0 0 3.2 0 3.2-3.2 163.2-89.6 252.8-208 259.2-345.6 16-211.2-163.2-390.4-198.4-412.8z"}));FireIcon.displayName="FireIcon";const PrintIcon=()=>h$2(c$3,{name:"print"},()=>h$2("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));PrintIcon.displayName="PrintIcon";const TagIcon$1=()=>h$2(c$3,{name:"tag"},()=>h$2("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));TagIcon$1.displayName="TagIcon";const TimerIcon=()=>h$2(c$3,{name:"timer"},()=>h$2("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));TimerIcon.displayName="TimerIcon";const WordIcon=()=>h$2(c$3,{name:"word"},()=>[h$2("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h$2("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);WordIcon.displayName="WordIcon";const useMetaLocale=()=>{const Q=useThemeLocaleData();return computed(()=>Q.value.metaLocales)},readingTimeLocales={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},editLinkPatterns={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},resolveEditLink=({docsRepo:Q,docsBranch:nn,docsDir:an,filePathRelative:en,editLinkPattern:sn})=>{if(!en)return null;const tn=$e(Q);let on;return sn?on=sn:tn!==null&&(on=editLinkPatterns[tn]),on?on.replace(/:repo/,isLinkHttp(Q)?Q:`https://github.com/${Q}`).replace(/:branch/,nn).replace(/:path/,removeLeadingSlash(`${removeEndingSlash(an)}/${en}`)):null},useEditLink=()=>{const Q=useThemeLocaleData(),nn=usePageData(),an=usePageFrontmatter();return computed(()=>{const{repo:en,docsRepo:sn=en,docsBranch:tn="main",docsDir:on="",editLink:ln,editLinkPattern:pn=""}=Q.value;if(!(an.value.editLink??ln??!0)||!sn)return null;const rn=resolveEditLink({docsRepo:sn,docsBranch:tn,docsDir:on,editLinkPattern:pn,filePathRelative:nn.value.filePathRelative});return rn?{text:Q.value.metaLocales.editLink,link:rn}:null})},useUpdateTime=()=>{const Q=useSiteLocaleData(),nn=useThemeLocaleData(),an=usePageData(),en=usePageFrontmatter();return computed(()=>{var on,ln;return!(en.value.lastUpdated??nn.value.lastUpdated??!0)||!((on=an.value.git)!=null&&on.updatedTime)?null:new Date((ln=an.value.git)==null?void 0:ln.updatedTime).toLocaleString(Q.value.lang)})},useContributors=()=>{const Q=useThemeLocaleData(),nn=usePageData(),an=usePageFrontmatter();return computed(()=>{var sn;return an.value.contributors??Q.value.contributors??!0?((sn=nn.value.git)==null?void 0:sn.contributors)??null:null})},authorInfo="",AuthorInfo=defineComponent({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(Q){const nn=useMetaLocale();return()=>Q.author.length?h$2("span",{class:"page-author-info","aria-label":`${nn.value.author}${Q.pure?"":"🖊"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(AuthorIcon),h$2("span",Q.author.map(an=>an.url?h$2("a",{class:"page-author-item",href:an.url,target:"_blank",rel:"noopener noreferrer"},an.name):h$2("span",{class:"page-author-item"},an.name))),h$2("span",{property:"author",content:Q.author.map(an=>an.name).join(", ")})]):null}}),categoryInfo="",CategoryInfo=defineComponent({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(Q){const nn=useRouter(),an=usePageData(),en=useMetaLocale(),sn=(tn,on="")=>{on&&an.value.path!==on&&(tn.preventDefault(),nn.push(on))};return()=>Q.category.length?h$2("span",{class:"page-category-info","aria-label":`${en.value.category}${Q.pure?"":"🌈"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(CategoryIcon$1),...Q.category.map(({name:tn,path:on})=>h$2("span",{class:["page-category-item",{[`category${Ee(tn,9)}`]:!Q.pure,clickable:on}],role:on?"navigation":"",onClick:ln=>sn(ln,on)},tn)),h$2("meta",{property:"articleSection",content:Q.category.map(({name:tn})=>tn).join(",")})]):null}}),DateInfo=defineComponent({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(Q){const nn=usePageLang(),an=useMetaLocale();return()=>Q.date?h$2("span",{class:"page-date-info","aria-label":`${an.value.date}${Q.pure?"":"📅"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(CalendarIcon),h$2("span",h$2(ClientOnly,()=>Q.localizedDate||Q.date.toLocaleDateString(nn.value))),h$2("meta",{property:"datePublished",content:Q.date.toISOString()||""})]):null}}),originalInfo="",OriginalInfo=defineComponent({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(Q){const nn=useMetaLocale();return()=>Q.isOriginal?h$2("span",{class:"page-original-info"},nn.value.origin):null}});defineComponent({name:"PageViewInfo",inheritAttrs:!1,props:{pageview:{type:[Boolean,String],default:!1},pure:Boolean},setup(Q){const nn=useRoute(),an=useMetaLocale(),en=ref(),sn=ref(0);return useMutationObserver(en,()=>{const tn=en.value.textContent;tn&&!isNaN(Number(tn))&&(sn.value=Number(tn))},{childList:!0}),()=>Q.pageview?h$2("span",{class:"page-pageview-info","aria-label":`${an.value.views}${Q.pure?"":"🔢"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(sn.value<1e3?EyeIcon:FireIcon),h$2("span",{ref:en,class:"waline-pageview-count",id:"ArtalkPV","data-path":isString$1(Q.pageview)?Q.pageview:withBase(nn.path)},"...")]):null}});const ReadingTimeInfo=defineComponent({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(Q){const nn=useMetaLocale(),an=le(readingTimeLocales),en=computed(()=>{if(!Q.readingTime)return null;const{minutes:sn}=Q.readingTime;return sn<1?{text:an.value.less1Minute,time:"PT1M"}:{text:an.value.time.replace("$time",Math.round(sn).toString()),time:`PT${Math.round(sn)}M`}});return()=>en.value?h$2("span",{class:"page-reading-time-info","aria-label":`${nn.value.readingTime}${Q.pure?"":"⌛"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(TimerIcon),h$2("span",en.value.text),h$2("meta",{property:"timeRequired",content:en.value.time})]):null}}),tagInfo="",TagInfo=defineComponent({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(Q){const nn=useRouter(),an=usePageData(),en=useMetaLocale(),sn=(tn,on="")=>{on&&an.value.path!==on&&(tn.preventDefault(),nn.push(on))};return()=>Q.tag.length?h$2("span",{class:"page-tag-info","aria-label":`${en.value.tag}${Q.pure?"":"🏷"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(TagIcon$1),...Q.tag.map(({name:tn,path:on})=>h$2("span",{class:["page-tag-item",{[`tag${Ee(tn,9)}`]:!Q.pure,clickable:on}],role:on?"navigation":"",onClick:ln=>sn(ln,on)},tn)),h$2("meta",{property:"keywords",content:Q.tag.map(({name:tn})=>tn).join(",")})]):null}}),WordInfo=defineComponent({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(Q){const nn=useMetaLocale(),an=le(readingTimeLocales),en=computed(()=>{var tn;return(tn=Q.readingTime)==null?void 0:tn.words.toString()}),sn=computed(()=>an.value.word.replace("$word",en.value||""));return()=>en.value?h$2("span",{class:"page-word-info","aria-label":`${nn.value.words}${Q.pure?"":"🔠"}`,...Q.pure?{}:{"data-balloon-pos":"down"}},[h$2(WordIcon),h$2("span",sn.value),h$2("meta",{property:"wordCount",content:en.value})]):null}}),pageInfo="",PageInfo=defineComponent({name:"PageInfo",components:{AuthorInfo,CategoryInfo,DateInfo,OriginalInfo,PageViewInfo:()=>null,ReadingTimeInfo,TagInfo,WordInfo},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(Q){const nn=usePure();return()=>Q.items?h$2("div",{class:"page-info"},Q.items.map(an=>h$2(resolveComponent(`${an}Info`),{...Q.info,pure:nn.value}))):null}}),pageTitle="",PageTitle=defineComponent({name:"PageTitle",setup(){const Q=usePageData(),nn=usePageFrontmatter(),an=useThemeLocaleData(),{info:en,items:sn}=usePageInfo();return()=>h$2("div",{class:"page-title"},[h$2("h1",[an.value.titleIcon===!1?null:h$2(HopeIcon,{icon:nn.value.icon}),Q.value.title]),h$2(PageInfo,{info:en.value,...sn.value===null?{}:{items:sn.value}}),h$2("hr")])}}),EditIcon=()=>h$2(c$3,{name:"edit"},()=>[h$2("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h$2("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);EditIcon.displayName="EditIcon";const pageMeta="",PageMeta=defineComponent({name:"PageMeta",setup(){const Q=useThemeLocaleData(),nn=useEditLink(),an=useUpdateTime(),en=useContributors();return()=>{const{metaLocales:sn}=Q.value;return h$2("footer",{class:"page-meta"},[nn.value?h$2("div",{class:"meta-item edit-link"},h$2(AutoLink,{class:"label",config:nn.value},{before:()=>h$2(EditIcon)})):null,h$2("div",{class:"meta-item git-info"},[an.value?h$2("div",{class:"update-time"},[h$2("span",{class:"label"},`${sn.lastUpdated}: `),h$2(ClientOnly,()=>h$2("span",{class:"info"},an.value))]):null,en.value&&en.value.length?h$2("div",{class:"contributors"},[h$2("span",{class:"label"},`${sn.contributors}: `),en.value.map(({email:tn,name:on},ln)=>[h$2("span",{class:"contributor",title:`email: ${tn}`},on),ln!==en.value.length-1?",":""])]):null])])}}}),printButton="",PrintButton=defineComponent({name:"PrintButton",setup(){const Q=useThemeData(),nn=useThemeLocaleData();return()=>Q.value.print===!1?null:h$2("button",{type:"button",class:"print-button",title:nn.value.metaLocales.print,onClick:()=>{window.print()}},h$2(PrintIcon))}}),toc="",renderHeader=({title:Q,level:nn,slug:an})=>h$2(RouterLink,{to:`#${an}`,class:["toc-link",`level${nn}`]},()=>Q),renderChildren=(Q,nn)=>{const an=useRoute();return Q.length&&nn>0?h$2("ul",{class:"toc-list"},Q.map(en=>{const sn=renderChildren(en.children,nn-1);return[h$2("li",{class:["toc-item",{active:Le(an,`#${en.slug}`)}]},renderHeader(en)),sn?h$2("li",sn):null]})):null},TOC=defineComponent({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},setup(Q,{slots:nn}){const an=useRoute(),en=usePageData(),sn=useMetaLocale(),tn=ref(),on=ln=>{var pn;(pn=tn.value)==null||pn.scrollTo({top:ln,behavior:"smooth"})};return onMounted(()=>{watch(()=>an.hash,ln=>{if(tn.value){const pn=document.querySelector(`#toc a.toc-link[href$="${ln}"]`);if(!pn)return;const{top:cn,height:rn}=tn.value.getBoundingClientRect(),{top:un,height:dn}=pn.getBoundingClientRect();un<cn?on(tn.value.scrollTop+un-cn):un+dn>cn+rn&&on(tn.value.scrollTop+un+dn-cn-rn)}})}),()=>{var pn,cn;const ln=Q.items.length?renderChildren(Q.items,Q.headerDepth):en.value.headers?renderChildren(en.value.headers,Q.headerDepth):null;return ln?h$2("div",{class:"toc-place-holder"},[h$2("aside",{id:"toc"},[(pn=nn.before)==null?void 0:pn.call(nn),h$2("div",{class:"toc-header"},[sn.value.toc,h$2(PrintButton)]),h$2("div",{class:"toc-wrapper",ref:tn},ln),(cn=nn.after)==null?void 0:cn.call(nn)])]):null}}}),page$1="",NormalPage=defineComponent({name:"NormalPage",setup(Q,{slots:nn}){const an=usePageFrontmatter(),{isDarkmode:en}=useDarkmode(),sn=useThemeLocaleData(),tn=computed(()=>an.value.toc||an.value.toc!==!1&&sn.value.toc!==!1);return()=>h$2("main",{class:"page",id:"main-content"},h$2(Z("LocalEncrypt")?resolveComponent("LocalEncrypt"):J$1,()=>{var on,ln,pn,cn;return[(on=nn.top)==null?void 0:on.call(nn),h$2(BreadCrumb),h$2(PageTitle),tn.value?h$2(TOC,{headerDepth:an.value.headerDepth??sn.value.headerDepth??2},{before:()=>{var rn;return(rn=nn.tocBefore)==null?void 0:rn.call(nn)},after:()=>{var rn;return(rn=nn.tocAfter)==null?void 0:rn.call(nn)}}):null,(ln=nn.contentBefore)==null?void 0:ln.call(nn),h$2(MarkdownContent),(pn=nn.contentAfter)==null?void 0:pn.call(nn),h$2(PageMeta),h$2(PageNav),Z("CommentService")?h$2(resolveComponent("CommentService"),{darkmode:en.value}):null,(cn=nn.bottom)==null?void 0:cn.call(nn)]}))}}),skipLink="",SkipLink=defineComponent({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(Q){const nn=usePageData(),an=useThemeLocaleData(),en=ref(),sn=({target:tn})=>{const on=document.querySelector(tn.hash);if(on){const ln=()=>{on.removeAttribute("tabindex"),on.removeEventListener("blur",ln)};on.setAttribute("tabindex","-1"),on.addEventListener("blur",ln),on.focus(),window.scrollTo(0,0)}};return onMounted(()=>{watch(()=>nn.value.path,()=>en.value.focus())}),()=>[h$2("span",{ref:en,tabindex:"-1"}),h$2("a",{href:`#${Q.content}`,class:"skip-link sr-only",onClick:sn},an.value.routeLocales.skipToContent)]}}),fadeSlideY="",FadeSlideY=defineComponent({name:"FadeSlideY",setup(Q,{slots:nn}){const{resolve:an,pending:en}=useScrollPromise();return()=>h$2(Transition,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:an,onBeforeLeave:en},()=>{var sn;return(sn=nn.default)==null?void 0:sn.call(nn)})}}),Layout=defineComponent({name:"Layout",setup(){const Q=useThemeData(),nn=useThemeLocaleData(),an=usePageData(),en=usePageFrontmatter(),{isMobile:sn}=useWindowSize(),tn=computed(()=>{var on,ln;return((on=nn.value.blog)==null?void 0:on.sidebarDisplay)||((ln=Q.value.blog)==null?void 0:ln.sidebarDisplay)||"mobile"});return()=>[h$2(SkipLink),h$2(CommonWrapper,{},{default:()=>en.value.home?h$2(HomePage):h$2(FadeSlideY,()=>h$2(NormalPage,{key:an.value.path})),...tn.value!=="none"?{navScreenBottom:()=>h$2(resolveComponent("BloggerInfo"))}:{},...!sn.value&&tn.value==="always"?{sidebar:()=>h$2(resolveComponent("BloggerInfo"))}:{}})]}}),notFoundHint="",NotFoundHint=defineComponent({name:"NotFoundHint",setup(){const Q=useThemeLocaleData(),nn=()=>{const an=Q.value.routeLocales.notFoundMsg;return an[Math.floor(Math.random()*an.length)]};return()=>h$2("div",{class:"not-found-hint"},[h$2("p",{class:"error-code"},"404"),h$2("h1",{class:"error-title"},Q.value.routeLocales.notFoundTitle),h$2("p",{class:"error-hint"},nn())])}}),notFound="",NotFound=defineComponent({name:"NotFound",setup(Q,{slots:nn}){const an=useRouteLocale(),en=useThemeLocaleData(),{navigate:sn}=useLink({to:en.value.home??an.value});return()=>[h$2(SkipLink),h$2(CommonWrapper,{noSidebar:!0},()=>{var tn;return h$2("main",{class:"page not-found",id:"main-content"},((tn=nn.default)==null?void 0:tn.call(nn))||[h$2(NotFoundHint),h$2("div",{class:"actions"},[h$2("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},en.value.routeLocales.back),h$2("button",{type:"button",class:"action-button",onClick:()=>sn()},en.value.routeLocales.home)])])})]}}),icons={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',Discord:'<svg xmlns="http://www.w3.org/2000/svg" class="icon discord-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2DAAE1"/><path fill="#fff" d="m422.935 240.147 5.851 8.052c-113.039 34.253-165.649 84.585-165.649 84.585s13.645-8.052 37.024-18.123c66.28-30.215 118.865-38.267 142.244-40.286 3.91 0 7.819-1.994 9.76-1.994 38.966-6.058 81.816-6.058 126.658-2.02 58.462 8.053 122.749 24.157 187.061 62.423 0 0-48.7-48.338-155.862-82.566l7.767-10.071h1.968c13.308.233 91.757 4.246 173.416 68.481 0 0 89.634 169.144 89.634 376.555 1.942-2.02-50.668 92.637-189.003 96.65 0 0-23.405-28.194-40.933-52.35 81.84-24.157 113.013-76.534 113.013-76.534a313.796 313.796 0 0 1-72.106 38.267c-31.172 14.11-60.403 22.162-89.633 28.22-60.404 12.066-114.955 8.027-161.74 0a636.81 636.81 0 0 1-91.576-28.22c-13.644-6.033-29.23-12.065-44.817-22.137-1.941-2.02-3.883-2.02-5.85-4.039-1.943 0-1.943-2.02-1.943-2.02-11.702-6.032-17.528-10.07-17.528-10.07s29.23 52.376 109.104 76.532c-19.47 24.157-40.907 54.371-40.907 54.371-138.36-4.039-190.97-98.67-190.97-98.67 0-207.41 89.633-376.555 89.633-376.555 89.634-70.5 175.384-68.481 175.384-68.481zm213.961 233.017c-35.315 0-65 34.512-65 78s29.412 78 65 78 65-34.512 65-78-29.412-78-65-78zm-233.016 0c-35.315 0-65 34.512-65 78s29.412 78 65 78 64.726-34.512 64.726-78-29.411-78-64.726-78z"/></svg>'},categoryMap={category:{"/":{path:"/category/",map:{其他:{path:"/category/%E5%85%B6%E4%BB%96/",keys:["v-6f3e1b94"]},基础:{path:"/category/%E5%9F%BA%E7%A1%80/",keys:["v-a3c94986","v-000f2373","v-1b76ee94","v-d9f5e2ec","v-371d7764","v-4aece2b8","v-cbf45d7c","v-6dd3c849","v-3a1185cb","v-1a6efaf1","v-04028272","v-4051f8e0","v-7dae299e","v-37a1b8ba","v-7fdbac1d","v-645471cb","v-27d5225e","v-903ed070","v-71b07f05","v-20984be0","v-156e6cc6","v-6f34ec08","v-a4d4d02c","v-2b13dc0f","v-b4d8d1b6","v-1d981fe6","v-37b885a0","v-7fc97266","v-38d6aec1","v-87a67b52","v-619018ba","v-09bf4e9d","v-5b3d0bee","v-b16bee38","v-af4c19ea","v-0a02e885","v-2d386659","v-6d24fe2c","v-141471ea","v-54fd2172","v-69e9ec58","v-2118a15a","v-168baac4","v-24605052","v-7db4671e","v-8406ca00","v-40bbb766"]},基础进阶:{path:"/category/%E5%9F%BA%E7%A1%80%E8%BF%9B%E9%98%B6/",keys:["v-17c1358e","v-2385bbd8","v-fa6dfa8a","v-2ee5941c","v-4955c54e","v-1b8b1440","v-3c744a85","v-c34dff74","v-9d59d500","v-261f60e5","v-13cf2e7e","v-0e25f8d7","v-1fd8fe0e","v-5942281c","v-533df6da","v-7b212f24","v-7ac575f5","v-55436e06","v-1d7189d1","v-34383352","v-53c0be21","v-5785aa50","v-5af222cf","v-108cea22","v-550533fe","v-84dcaf5c","v-4ca20ce3","v-448856ac","v-2d8b618e","v-463a97a4","v-f3af73a8","v-86f91362","v-4c65917c","v-30059228","v-31ba6ac7","v-336f4366","v-35241c05","v-bfc9df00","v-3c334100","v-2d4b817a","v-2a128727","v-27d32cce","v-f1e47790","v-1bcd6b2a","v-7032fff2","v-24b3e31c","v-a75094a6","v-3ff70dba","v-005d1f24","v-558dbc20","v-3e2fd871","v-536ec9a8","v-87a74b40","v-3be6a79f","v-9d865aa4","v-39d5b7d0","v-5531c820","v-2e2d5738","v-77e0b3f2","v-3470dfde","v-6b47986a","v-3549794e","v-ae0fdffe","v-eeea671a","v-8c066f7c","v-c50f2d5c","v-60b668c0","v-28a7f309","v-fbf47354","v-8eaec032","v-88462fd6","v-0746fc97","v-7f6489a2","v-28368601","v-09a2e130","v-7efbc941","v-1beca418"]},笔记:{path:"/category/%E7%AC%94%E8%AE%B0/",keys:["v-3c7e9249","v-ca1551da","v-5af48dfd","v-7872cf98"]},面试:{path:"/category/%E9%9D%A2%E8%AF%95/",keys:["v-038b55a7","v-d55d46bc","v-c1ed0eaa","v-ef415652","v-f5e4303e","v-26a155c8","v-35242adc","v-ce39e9e0","v-ff4661a4","v-bc4804ee","v-73e7cb85","v-1450f1bc","v-50691d19","v-0237c77a","v-2fa9d5fe","v-c60a508e","v-5c881476","v-19968dde","v-ee8ad7fc","v-55b50432","v-7bf5fab5","v-5ac030d7","v-1987ca6a","v-c5de3364","v-6bdaf652","v-20305f5e","v-0bc86b6e","v-15868bda","v-65b076e8"]},JVM:{path:"/category/jvm/",keys:["v-c96633fe","v-ba5bb3ce","v-4a0adab0","v-73cdf5ae","v-d4b45c94"]},"Source Code":{path:"/category/source-code/",keys:["v-9c6fc078"]}}}},tag:{"/":{path:"/tag/",map:{个人介绍:{path:"/tag/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/",keys:["v-1844c2a8"]},JAVA:{path:"/tag/java/",keys:["v-14c69af4","v-9c6fc078","v-c96633fe","v-ba5bb3ce","v-4a0adab0","v-73cdf5ae","v-d4b45c94","v-53c0be21","v-5785aa50","v-5af222cf","v-108cea22","v-550533fe","v-84dcaf5c","v-4ca20ce3","v-448856ac","v-2d8b618e","v-463a97a4","v-f3af73a8","v-86f91362","v-4c65917c","v-30059228","v-31ba6ac7","v-336f4366","v-35241c05","v-bfc9df00","v-3c334100","v-2d4b817a","v-2a128727","v-27d32cce","v-f1e47790","v-1bcd6b2a","v-7032fff2","v-24b3e31c","v-a75094a6","v-3ff70dba","v-005d1f24","v-558dbc20","v-3e2fd871","v-536ec9a8","v-87a74b40","v-3be6a79f","v-9d865aa4","v-39d5b7d0","v-5531c820","v-2e2d5738","v-77e0b3f2","v-3470dfde","v-6b47986a","v-3549794e","v-ae0fdffe","v-eeea671a","v-8c066f7c","v-c50f2d5c","v-60b668c0","v-28a7f309","v-fbf47354","v-8eaec032","v-88462fd6","v-0746fc97","v-7f6489a2","v-28368601","v-09a2e130","v-7efbc941","v-1beca418","v-71b07f05","v-20984be0","v-156e6cc6","v-6f34ec08","v-a4d4d02c","v-2b13dc0f","v-b4d8d1b6","v-1d981fe6","v-37b885a0","v-7fc97266","v-38d6aec1","v-87a67b52","v-619018ba","v-09bf4e9d","v-5b3d0bee","v-b16bee38","v-af4c19ea","v-0a02e885","v-2d386659","v-6d24fe2c","v-141471ea","v-54fd2172","v-69e9ec58","v-2118a15a","v-168baac4","v-7db4671e","v-8406ca00","v-40bbb766"]},目录:{path:"/tag/%E7%9B%AE%E5%BD%95/",keys:["v-14c69af4","v-5942281c","v-fbf47354","v-69e9ec58","v-24605052"]},ElasticSearch:{path:"/tag/elasticsearch/",keys:["v-6f3e1b94"]},设计模式:{path:"/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",keys:["v-0bc86b6e","v-28a7f309","v-71b07f05","v-20984be0","v-37b885a0"]},MySQL:{path:"/tag/mysql/",keys:["v-17c1358e","v-2385bbd8","v-fa6dfa8a","v-2ee5941c","v-4955c54e","v-1b8b1440","v-3c744a85","v-c34dff74","v-9d59d500","v-261f60e5","v-13cf2e7e","v-0e25f8d7","v-1fd8fe0e","v-5942281c","v-533df6da","v-7b212f24","v-7ac575f5","v-55436e06","v-1d7189d1","v-34383352","v-a3c94986","v-000f2373","v-1b76ee94","v-d9f5e2ec","v-371d7764","v-4aece2b8","v-cbf45d7c","v-6dd3c849","v-3a1185cb","v-1a6efaf1","v-04028272","v-4051f8e0","v-7dae299e","v-37a1b8ba","v-7fdbac1d","v-645471cb","v-27d5225e","v-903ed070","v-24605052"]},架构相关:{path:"/tag/%E6%9E%B6%E6%9E%84%E7%9B%B8%E5%85%B3/",keys:["v-7872cf98"]},JVM:{path:"/tag/jvm/",keys:["v-038b55a7","v-d55d46bc","v-ef415652","v-f5e4303e","v-26a155c8","v-35242adc","v-ce39e9e0","v-ff4661a4"]},Spring:{path:"/tag/spring/",keys:["v-3c7e9249","v-ca1551da","v-5af48dfd"]},JUC:{path:"/tag/juc/",keys:["v-c1ed0eaa","v-bc4804ee","v-73e7cb85","v-1450f1bc","v-50691d19","v-0237c77a","v-2fa9d5fe","v-c60a508e","v-5c881476","v-19968dde","v-ee8ad7fc","v-55b50432","v-7bf5fab5","v-5ac030d7","v-1987ca6a","v-c5de3364","v-6bdaf652","v-20305f5e","v-0bc86b6e","v-15868bda","v-65b076e8"]}}}}},typeMap={article:{"/":{path:"/article/",keys:["v-14c69af4","v-9c6fc078","v-038b55a7","v-d55d46bc","v-c1ed0eaa","v-ef415652","v-f5e4303e","v-26a155c8","v-35242adc","v-ce39e9e0","v-ff4661a4","v-bc4804ee","v-73e7cb85","v-1450f1bc","v-50691d19","v-0237c77a","v-2fa9d5fe","v-c60a508e","v-5c881476","v-19968dde","v-ee8ad7fc","v-55b50432","v-7bf5fab5","v-5ac030d7","v-1987ca6a","v-c5de3364","v-6bdaf652","v-20305f5e","v-0bc86b6e","v-15868bda","v-65b076e8","v-c96633fe","v-6f3e1b94","v-ba5bb3ce","v-3c7e9249","v-4a0adab0","v-73cdf5ae","v-d4b45c94","v-ca1551da","v-5af48dfd","v-7872cf98","v-17c1358e","v-2385bbd8","v-fa6dfa8a","v-2ee5941c","v-4955c54e","v-1b8b1440","v-3c744a85","v-c34dff74","v-9d59d500","v-261f60e5","v-13cf2e7e","v-0e25f8d7","v-1fd8fe0e","v-5942281c","v-533df6da","v-7b212f24","v-7ac575f5","v-55436e06","v-1d7189d1","v-34383352","v-a3c94986","v-000f2373","v-1b76ee94","v-d9f5e2ec","v-371d7764","v-4aece2b8","v-cbf45d7c","v-6dd3c849","v-3a1185cb","v-1a6efaf1","v-04028272","v-4051f8e0","v-7dae299e","v-37a1b8ba","v-7fdbac1d","v-645471cb","v-27d5225e","v-903ed070","v-53c0be21","v-5785aa50","v-5af222cf","v-108cea22","v-550533fe","v-84dcaf5c","v-4ca20ce3","v-448856ac","v-2d8b618e","v-463a97a4","v-f3af73a8","v-86f91362","v-4c65917c","v-30059228","v-31ba6ac7","v-336f4366","v-35241c05","v-bfc9df00","v-3c334100","v-2d4b817a","v-2a128727","v-27d32cce","v-f1e47790","v-1bcd6b2a","v-7032fff2","v-24b3e31c","v-a75094a6","v-3ff70dba","v-005d1f24","v-558dbc20","v-3e2fd871","v-536ec9a8","v-87a74b40","v-3be6a79f","v-9d865aa4","v-39d5b7d0","v-5531c820","v-2e2d5738","v-77e0b3f2","v-3470dfde","v-6b47986a","v-3549794e","v-ae0fdffe","v-eeea671a","v-8c066f7c","v-c50f2d5c","v-60b668c0","v-28a7f309","v-fbf47354","v-8eaec032","v-88462fd6","v-0746fc97","v-7f6489a2","v-28368601","v-09a2e130","v-7efbc941","v-1beca418","v-71b07f05","v-20984be0","v-156e6cc6","v-6f34ec08","v-a4d4d02c","v-2b13dc0f","v-b4d8d1b6","v-1d981fe6","v-1844c2a8","v-37b885a0","v-7fc97266","v-38d6aec1","v-87a67b52","v-619018ba","v-09bf4e9d","v-5b3d0bee","v-b16bee38","v-af4c19ea","v-0a02e885","v-2d386659","v-6d24fe2c","v-141471ea","v-54fd2172","v-69e9ec58","v-2118a15a","v-168baac4","v-24605052","v-7db4671e","v-8406ca00","v-40bbb766"]}},star:{"/":{path:"/star/",keys:["v-1844c2a8","v-14c69af4"]}},timeline:{"/":{path:"/timeline/",keys:["v-9c6fc078","v-038b55a7","v-d55d46bc","v-c1ed0eaa","v-ef415652","v-f5e4303e","v-26a155c8","v-35242adc","v-ce39e9e0","v-ff4661a4","v-bc4804ee","v-73e7cb85","v-1450f1bc","v-50691d19","v-0237c77a","v-2fa9d5fe","v-c60a508e","v-5c881476","v-19968dde","v-ee8ad7fc","v-55b50432","v-7bf5fab5","v-5ac030d7","v-1987ca6a","v-c5de3364","v-6bdaf652","v-20305f5e","v-0bc86b6e","v-15868bda","v-65b076e8","v-c96633fe","v-6f3e1b94","v-ba5bb3ce","v-3c7e9249","v-4a0adab0","v-73cdf5ae","v-d4b45c94","v-ca1551da","v-5af48dfd","v-7872cf98","v-17c1358e","v-2385bbd8","v-fa6dfa8a","v-2ee5941c","v-4955c54e","v-1b8b1440","v-3c744a85","v-c34dff74","v-9d59d500","v-261f60e5","v-13cf2e7e","v-0e25f8d7","v-1fd8fe0e","v-5942281c","v-533df6da","v-7b212f24","v-7ac575f5","v-55436e06","v-1d7189d1","v-34383352","v-a3c94986","v-000f2373","v-1b76ee94","v-d9f5e2ec","v-371d7764","v-4aece2b8","v-cbf45d7c","v-6dd3c849","v-3a1185cb","v-1a6efaf1","v-04028272","v-4051f8e0","v-7dae299e","v-37a1b8ba","v-7fdbac1d","v-645471cb","v-27d5225e","v-903ed070","v-53c0be21","v-5785aa50","v-5af222cf","v-108cea22","v-550533fe","v-84dcaf5c","v-4ca20ce3","v-448856ac","v-2d8b618e","v-463a97a4","v-f3af73a8","v-86f91362","v-4c65917c","v-30059228","v-31ba6ac7","v-336f4366","v-35241c05","v-bfc9df00","v-3c334100","v-2d4b817a","v-2a128727","v-27d32cce","v-f1e47790","v-1bcd6b2a","v-7032fff2","v-24b3e31c","v-a75094a6","v-3ff70dba","v-005d1f24","v-558dbc20","v-3e2fd871","v-536ec9a8","v-87a74b40","v-3be6a79f","v-9d865aa4","v-39d5b7d0","v-5531c820","v-2e2d5738","v-77e0b3f2","v-3470dfde","v-6b47986a","v-3549794e","v-ae0fdffe","v-eeea671a","v-8c066f7c","v-c50f2d5c","v-60b668c0","v-28a7f309","v-fbf47354","v-8eaec032","v-88462fd6","v-0746fc97","v-7f6489a2","v-28368601","v-09a2e130","v-7efbc941","v-1beca418","v-71b07f05","v-20984be0","v-156e6cc6","v-6f34ec08","v-a4d4d02c","v-2b13dc0f","v-b4d8d1b6","v-1d981fe6","v-37b885a0","v-7fc97266","v-38d6aec1","v-87a67b52","v-619018ba","v-09bf4e9d","v-5b3d0bee","v-b16bee38","v-af4c19ea","v-0a02e885","v-2d386659","v-6d24fe2c","v-141471ea","v-54fd2172","v-14c69af4","v-69e9ec58","v-2118a15a","v-168baac4","v-24605052","v-7db4671e","v-8406ca00","v-40bbb766"]}}},_=ref(categoryMap),k=(Q="")=>{const nn=usePageData(),an=useRouter(),en=useRouteLocale();return computed(()=>{var sn;const tn=Q||((sn=usePageFrontmatter().value.blog)==null?void 0:sn.key)||"";if(!tn)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const on=an.getRoutes();if(!_.value[tn])throw new Error(`useBlogCategory: key ${tn} is invalid`);const ln=_.value[tn][en.value],pn={path:ln.path,map:{}};for(const cn in ln.map){const rn=ln.map[cn];pn.map[cn]={path:rn.path,items:[]};for(const un of rn.keys){const dn=on.find(({name:vn})=>vn===un);if(dn){const vn=j(an,dn.path);pn.map[cn].items.push({path:vn.path,info:vn.meta})}}nn.value.path===rn.path&&(pn.currentItems=pn.map[cn].items)}return pn})},c=ref(typeMap),C=(Q="")=>{const nn=useRouter(),an=useRouteLocale();return computed(()=>{var en;const sn=Q||((en=usePageFrontmatter().value.blog)==null?void 0:en.key)||"";if(!sn)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!c.value[sn])throw new Error(`useBlogType: key ${Q} is invalid`);const tn=nn.getRoutes(),on=c.value[sn][an.value],ln={path:on.path,items:[]};for(const pn of on.keys){const cn=tn.find(({name:rn})=>rn===pn);if(cn){const rn=j(nn,cn.path);ln.items.push({path:rn.path,info:rn.meta})}}return ln})},categoryMapSymbol=Symbol.for("categoryMap"),useCategoryMap=()=>{const Q=inject(categoryMapSymbol);if(!Q)throw new Error("useCategoryMap() is called without provider.");return Q},setupCategoryMap=()=>{const Q=k("category");provide(categoryMapSymbol,Q)},useBlogOptions=()=>{const Q=useThemeData(),nn=useThemeLocaleData();return computed(()=>({...Q.value.blog,...nn.value.blog}))},tagMapSymbol=Symbol.for("tagMap"),useTagMap=()=>{const Q=inject(tagMapSymbol);if(!Q)throw new Error("useTagMap() is called without provider.");return Q},setupTagMap=()=>{const Q=k("tag");provide(tagMapSymbol,Q)},useArticleAuthor=Q=>{const nn=useThemeLocaleData();return computed(()=>{const{["a"]:an}=Q.value;return an?ke(an):an===!1?[]:ke(nn.value.author,!1)})},useArticleCategory=Q=>{const nn=useCategoryMap();return computed(()=>Se(Q.value.c).map(an=>({name:an,path:nn.value.map[an].path})))},useArticleTag=Q=>{const nn=useTagMap();return computed(()=>xe(Q.value.g).map(an=>({name:an,path:nn.value.map[an].path})))},useArticleDate=Q=>computed(()=>{const{["d"]:nn}=Q.value;return ye(nn)}),useArticleInfo=Q=>{const nn=toRef(Q,"info"),an=useBlogOptions(),en=useArticleAuthor(nn),sn=useArticleCategory(nn),tn=useArticleTag(nn),on=useArticleDate(nn),ln=computed(()=>({author:en.value,category:sn.value,date:on.value,localizedDate:nn.value.l||"",tag:tn.value,isOriginal:nn.value.o||!1,readingTime:nn.value.r||null,pageview:Q.path})),pn=computed(()=>an.value.articleInfo);return{info:ln,items:pn}},articlesSymbol=Symbol(""),useArticles=()=>{const Q=inject(articlesSymbol);if(!Q)throw new Error("useArticles() is called without provider.");return Q},setupArticles=()=>{const Q=C("article");provide(articlesSymbol,Q)},starsSymbol=Symbol(""),useStars=()=>{const Q=inject(starsSymbol);if(!Q)throw new Error("useStars() is called without provider.");return Q},setupStars=()=>{const Q=C("star");provide(starsSymbol,Q)},timelinesSymbol=Symbol(""),useTimelines=()=>{const Q=inject(timelinesSymbol);if(!Q)throw new Error("useTimelines() is called without provider.");return Q},setupTimelines=()=>{const Q=C("timeline"),nn=computed(()=>{const an=[];return Q.value.items.forEach(({info:en,path:sn})=>{const tn=ye(en.d),on=tn==null?void 0:tn.getFullYear(),ln=tn?tn.getMonth()+1:null,pn=tn==null?void 0:tn.getDate();on&&ln&&pn&&((!an[0]||an[0].year!==on)&&an.unshift({year:on,items:[]}),an[0].items.push({date:`${ln}/${pn}`,info:en,path:sn}))}),{...Q.value,config:an.reverse()}});provide(timelinesSymbol,nn)},setupBlog=()=>{setupArticles(),setupCategoryMap(),setupStars(),setupTagMap(),setupTimelines()},socialMedia="",SocialMedia=defineComponent({name:"SocialMedia",setup(){const Q=useBlogOptions(),nn=usePure(),an=computed(()=>{const en=Q.value.medias;return en?$$1(en).map(([sn,tn])=>({name:sn,icon:icons[sn],url:tn})):[]});return()=>an.value.length?h$2("div",{class:"social-media-wrapper"},an.value.map(({name:en,icon:sn,url:tn})=>h$2("a",{class:"social-media",href:tn,rel:"noopener noreferrer",target:"_blank","aria-label":en,...nn.value?{}:{"data-balloon-pos":"up"},innerHTML:sn}))):null}}),bloggerInfo="",BloggerInfo=defineComponent({name:"BloggerInfo",setup(){const Q=useBlogOptions(),nn=useSiteLocaleData(),an=useThemeLocaleData(),en=useArticles(),sn=useCategoryMap(),tn=useTagMap(),on=useTimelines(),ln=useNavigate(),pn=computed(()=>{var dn;return Q.value.name||((dn=ke(an.value.author)[0])==null?void 0:dn.name)||nn.value.title}),cn=computed(()=>Q.value.avatar||an.value.logo),rn=computed(()=>an.value.blogLocales),un=computed(()=>Q.value.intro);return()=>h$2("div",{class:"blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h$2("div",{class:"blogger",...un.value?{style:{cursor:"pointer"},"aria-label":rn.value.intro,"data-balloon-pos":"down",role:"navigation",onClick:()=>ln(un.value)}:{}},[cn.value?h$2("img",{class:["blogger-avatar",{round:Q.value.roundAvatar}],src:withBase(cn.value),property:"image",alt:"Blogger Avatar"}):null,pn.value?h$2("div",{class:"blogger-name",property:"name"},pn.value):null,Q.value.description?h$2("div",{class:"blogger-description",innerHTML:Q.value.description}):null,un.value?h$2("meta",{property:"url",content:withBase(un.value)}):null]),h$2("div",{class:"num-wrapper"},[h$2("div",{onClick:()=>ln(en.value.path)},[h$2("div",{class:"num"},en.value.items.length),h$2("div",rn.value.article)]),h$2("div",{onClick:()=>ln(sn.value.path)},[h$2("div",{class:"num"},h$1(sn.value.map).length),h$2("div",rn.value.category)]),h$2("div",{onClick:()=>ln(tn.value.path)},[h$2("div",{class:"num"},h$1(tn.value.map).length),h$2("div",rn.value.tag)]),h$2("div",{onClick:()=>ln(on.value.path)},[h$2("div",{class:"num"},on.value.items.length),h$2("div",rn.value.timeline)])]),h$2(SocialMedia)])}}),CategoryIcon=()=>h$2(c$3,{name:"category"},()=>h$2("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));CategoryIcon.displayName="CategoryIcon";const TagIcon=()=>h$2(c$3,{name:"tag"},()=>h$2("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));TagIcon.displayName="TagIcon";const TimelineIcon=()=>h$2(c$3,{name:"timeline"},()=>h$2("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));TimelineIcon.displayName="TimelineIcon";const SlideIcon=()=>h$2(c$3,{name:"slides"},()=>h$2("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));SlideIcon.displayName="SlideIcon";const StickyIcon=()=>h$2(c$3,{name:"sticky"},()=>[h$2("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);StickyIcon.displayName="StickyIcon";const ArticleIcon=()=>h$2(c$3,{name:"article"},()=>h$2("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));ArticleIcon.displayName="ArticleIcon";const BookIcon=()=>h$2(c$3,{name:"book"},()=>h$2("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));BookIcon.displayName="BookIcon";const LinkIcon=()=>h$2(c$3,{name:"link"},()=>h$2("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));LinkIcon.displayName="LinkIcon";const ProjectIcon=()=>h$2(c$3,{name:"project"},()=>h$2("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));ProjectIcon.displayName="ProjectIcon";const FriendIcon=()=>h$2(c$3,{name:"friend"},()=>h$2("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));FriendIcon.displayName="FriendIcon";const SlideDownIcon=()=>h$2(c$3,{name:"slide-down"},()=>h$2("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));SlideDownIcon.displayName="SlideDownIcon";const emptyIcon="",EmptyIcon=()=>h$2("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});EmptyIcon.displayName="EmptyIcon";const LockIcon=()=>h$2(c$3,{name:"lock"},()=>h$2("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));LockIcon.displayName="LockIcon";const articleItem="",ArticleItem=defineComponent({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},setup(Q){const nn=toRef(Q,"info"),{info:an,items:en}=useArticleInfo(Q);return()=>h$2("div",{class:"article-item"},h$2("article",{class:"article",vocab:"https://schema.org/",typeof:"Article"},[nn.value.u?h$2(StickyIcon):null,h$2(RouterLink,{to:Q.path},()=>[h$2("header",{class:"title"},[nn.value.n?h$2(LockIcon):null,nn.value.y==="s"?h$2(SlideIcon):null,h$2("span",{property:"headline"},nn.value.t),nn.value.v?h$2("meta",{property:"image",content:withBase(nn.value.v)}):null])]),nn.value.e?h$2("div",{class:"article-excerpt",innerHTML:nn.value.e}):null,h$2("hr",{class:"hr"}),h$2(PageInfo,{info:an.value,...en.value?{items:en.value}:{}})]))}}),message="",pagination="",Pagination=defineComponent({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(Q,{emit:nn}){let an;const en=useThemeLocaleData(),sn=ref(""),tn=computed(()=>en.value.paginationLocales),on=computed(()=>Math.ceil(Q.total/Q.perPage)),ln=computed(()=>Boolean(on.value)&&on.value!==1),pn=computed(()=>on.value<7?!1:Q.current>4),cn=computed(()=>on.value<7?!1:Q.current<on.value-3),rn=computed(()=>{const{current:vn}=Q;let mn=1,kn=on.value;const hn=[];on.value>=7&&(vn<=4&&vn<on.value-3?(mn=1,kn=5):vn>4&&vn>=on.value-3?(kn=on.value,mn=on.value-4):on.value>7&&(mn=vn-2,kn=vn+2));for(let fn=mn;fn<=kn;fn++)hn.push(fn);return hn}),un=vn=>nn("updateCurrentPage",vn),dn=vn=>{const mn=parseInt(vn);mn<=on.value&&mn>0?un(mn):an.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${tn.value.errorText.replace(/\$page/g,on.value.toString())}`)};return onMounted(()=>{an=new Ne}),()=>h$2("div",{class:"pagination-wrapper"},ln.value?h$2("div",{class:"pagination-list"},[h$2("div",{class:"page-number"},[Q.current>1?h$2("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>un(Q.current-1)},tn.value.prev):null,...pn.value?[h$2("div",{role:"navigation",onClick:()=>un(1)},1),h$2("div",{class:"ellipsis"},"...")]:[],...rn.value.map(vn=>h$2("div",{key:vn,class:{active:Q.current===vn},role:"navigation",onClick:()=>un(vn)},vn)),...cn.value?[h$2("div",{class:"ellipsis"},"..."),h$2("div",{role:"navigation",onClick:()=>un(on.value)},on.value)]:[],Q.current<on.value?h$2("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>un(Q.current+1)},tn.value.next):null]),h$2("div",{class:"navigate-wrapper"},[h$2("label",{for:"navigation-text"},`${tn.value.navigate}: `),h$2("input",{id:"navigation-text",value:sn.value,onInput:({target:vn})=>{sn.value=vn.value},onKeydown:vn=>{vn.key==="Enter"&&(vn.preventDefault(),dn(sn.value))}}),h$2("button",{class:"navigate",role:"navigation",title:tn.value.action,onClick:()=>dn(sn.value)},tn.value.action)])]):[])}}),articleList="",ArticleList=defineComponent({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(Q){const nn=useRoute(),an=useRouter(),en=useBlogOptions(),sn=ref(1),tn=computed(()=>en.value.articlePerPage||10),on=computed(()=>Q.items.slice((sn.value-1)*tn.value,sn.value*tn.value)),ln=pn=>{sn.value=pn;const cn={...nn.query};cn.page===pn.toString()||pn===1&&!cn.page||(pn===1?delete cn.page:cn.page=pn.toString(),an.push({path:nn.path,query:cn}))};return onMounted(()=>{const{page:pn}=nn.query;ln(pn?Number(pn):1),watch(sn,()=>{const cn=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,cn)},100)})}),()=>h$2("div",{id:"article-list",class:"article-wrapper"},on.value.length?[...on.value.map(({info:pn,path:cn},rn)=>h$2(DropTransition,{appear:!0,delay:rn*.04},()=>h$2(ArticleItem,{key:cn,info:pn,path:cn}))),h$2(Pagination,{current:sn.value,perPage:tn.value,total:Q.items.length,onUpdateCurrentPage:ln})]:h$2(EmptyIcon))}}),categoryList="",CategoryList=defineComponent({name:"CategoryList",setup(){const Q=usePageData(),nn=useCategoryMap();return()=>h$2("ul",{class:"category-list-wrapper"},$$1(nn.value.map).map(([an,{path:en,items:sn}])=>h$2("li",{class:["category",`category${Ee(an,9)}`,{active:en===Q.value.path}]},h$2(RouterLink,{to:en},()=>[an,h$2("span",{class:"category-num"},sn.length)]))))}}),tagList="",TagList=defineComponent({name:"TagList",setup(){const Q=usePageFrontmatter(),nn=useTagMap(),an=en=>{var sn;return en===((sn=Q.value.blog)==null?void 0:sn.name)};return()=>h$2("ul",{class:"tag-list-wrapper"},$$1(nn.value.map).map(([en,{path:sn,items:tn}])=>h$2("li",{class:["tag",`tag${Ee(en,9)}`,{active:an(en)}]},h$2(RouterLink,{to:sn},()=>[en,h$2("span",{class:"tag-num"},tn.length)]))))}}),timelineList="",TimelineList=defineComponent({name:"TimelineList",setup(){const Q=useThemeLocaleData(),nn=useTimelines(),an=useNavigate(),en=computed(()=>Q.value.blogLocales.timeline);return()=>h$2("div",{class:"timeline-list-wrapper"},[h$2("div",{class:"timeline-list-title",onClick:()=>an(nn.value.path)},[h$2(TimelineIcon),h$2("span",{class:"num"},nn.value.items.length),en.value]),h$2("hr"),h$2("div",{class:"timeline-content"},h$2("ul",{class:"timeline-list"},nn.value.config.map(({year:sn,items:tn},on)=>h$2(DropTransition,{appear:!0,delay:.08*(on+1)},()=>h$2("li",[h$2("h3",{class:"timeline-year"},sn),h$2("ul",{class:"timeline-year-wrapper"},tn.map(({date:ln,info:pn,path:cn})=>h$2("li",{class:"timeline-item"},[h$2("span",{class:"timeline-date"},ln),h$2(RouterLink,{class:"timeline-title",to:cn},()=>pn.t)])))])))))])}}),infoList="",InfoList=defineComponent({name:"InfoList",setup(){const Q=useThemeLocaleData(),nn=useArticles(),an=useCategoryMap(),en=computed(()=>h$1(an.value.map).length),sn=useStars(),tn=useTagMap(),on=computed(()=>h$1(tn.value.map).length),ln=useNavigate(),pn=ref("article"),cn=computed(()=>Q.value.blogLocales),rn=[["article",ArticleIcon],["category",CategoryIcon],["tag",TagIcon],["timeline",TimelineIcon]];return()=>h$2("div",{class:"blog-info-list"},[h$2("div",{class:"blog-type-wrapper"},rn.map(([un,dn])=>h$2("button",{type:"button",class:"blog-type-button",onClick:()=>{pn.value=un}},h$2("div",{class:["icon-wrapper",{active:pn.value===un}],"aria-label":cn.value[un],"data-balloon-pos":"up"},h$2(dn))))),h$2(DropTransition,()=>pn.value==="article"?h$2("div",{class:"sticky-article-wrapper"},[h$2("div",{class:"title",onClick:()=>ln(nn.value.path)},[h$2(ArticleIcon),h$2("span",{class:"num"},nn.value.items.length),cn.value.article]),h$2("hr"),h$2("ul",{class:"sticky-article-list"},sn.value.items.map(({info:un,path:dn},vn)=>h$2(DropTransition,{appear:!0,delay:.08*(vn+1)},()=>h$2("li",{class:"sticky-article"},h$2(RouterLink,{to:dn},()=>un.t)))))]):pn.value==="category"?h$2("div",{class:"category-wrapper"},[en.value?h$2("div",{class:"title",onClick:()=>ln(an.value.path)},[h$2(CategoryIcon),h$2("span",{class:"num"},en.value),cn.value.category]):null,h$2("hr"),h$2(DropTransition,{delay:.04},()=>h$2(CategoryList))]):pn.value==="tag"?h$2("div",{class:"tag-wrapper"},[on.value?h$2("div",{class:"title",onClick:()=>ln(tn.value.path)},[h$2(TagIcon),h$2("span",{class:"num"},on.value),cn.value.tag]):null,h$2("hr"),h$2(DropTransition,{delay:.04},()=>h$2(TagList))]):h$2(DropTransition,()=>h$2(TimelineList)))])}}),page="",BlogWrapper=defineComponent({name:"BlogWrapper",setup(Q,{slots:nn}){const{isMobile:an}=useWindowSize();return()=>[h$2(SkipLink),h$2(CommonWrapper,{noSidebar:!0},{default:()=>{var en;return(en=nn.default)==null?void 0:en.call(nn)},navScreenBottom:()=>h$2(BloggerInfo),...an.value?{sidebar:()=>h$2(InfoList)}:{}})]}}),infoPanel="",InfoPanel=()=>h$2("aside",{class:"blog-info-wrapper"},[h$2(DropTransition,()=>h$2(BloggerInfo)),h$2(DropTransition,{delay:.04},()=>h$2(InfoList))]);InfoPanel.displayName="InfoPanel";const BlogCategory=defineComponent({name:"BlogPage",components:{CategoryList,TagList},setup(){const Q=usePageData(),nn=usePageFrontmatter(),an=useCategoryMap(),en=useTagMap(),sn=computed(()=>nn.value.blog||{}),tn=computed(()=>{const{key:ln=""}=sn.value;return ln==="category"?"CategoryList":ln==="tag"?"TagList":null}),on=computed(()=>{const{name:ln="",key:pn=""}=sn.value;return pn==="category"?ln?an.value.map[ln].items:[]:pn==="tag"?ln?en.value.map[ln].items:[]:[]});return()=>h$2(BlogWrapper,()=>h$2("div",{class:"page blog"},h$2("div",{class:"blog-page-wrapper"},[h$2("main",{class:"blog-main",id:"main-content"},[h$2(DropTransition,()=>tn.value?h$2(resolveComponent(tn.value)):null),sn.value.name?h$2(DropTransition,{appear:!0,delay:.24},()=>h$2(ArticleList,{key:Q.value.path,items:on.value})):null]),h$2(DropTransition,{delay:.16},()=>h$2(InfoPanel))])))}}),defaultHeroBgImagePath="/assets/hero-197a9d2d.jpg",blogHero="",BlogHero=defineComponent({name:"BlogHero",setup(){const Q=usePageHeadTitle(),nn=usePageFrontmatter(),an=ref(),en=computed(()=>nn.value.heroImage||null),sn=computed(()=>nn.value.heroFullScreen||!1),tn=computed(()=>{const{bgImage:on}=nn.value;return isString$1(on)?withBase(on):on===!1?null:defaultHeroBgImagePath});return()=>nn.value.hero===!1?null:h$2("div",{ref:an,class:["blog-hero",{fullscreen:sn.value,"no-bg":!tn.value}]},[tn.value?h$2("div",{class:"mask",style:[{background:`url(${tn.value}) center/cover no-repeat`},nn.value.bgImageStyle]}):null,h$2(DropTransition,{appear:!0,delay:.04},()=>en.value?h$2("img",{class:"hero-image",style:nn.value.heroImageStyle,src:withBase(en.value),alt:nn.value.heroAlt||"hero image"}):null),h$2(DropTransition,{appear:!0,delay:.08},()=>nn.value.heroText===!1?null:h$2("h1",nn.value.heroText||Q.value)),h$2(DropTransition,{appear:!0,delay:.12},()=>nn.value.tagline?h$2("p",{class:"description",innerHTML:nn.value.tagline}):null),sn.value?h$2("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:an.value.clientHeight,behavior:"smooth"})}},[h$2(SlideDownIcon),h$2(SlideDownIcon)]):null])}}),projectPanel="",AVAILABLE_PROJECT_TYPES=["link","article","book","project","friend"],ProjectPanel=defineComponent({name:"ProjectPanel",components:{ArticleIcon,BookIcon,FriendIcon,LinkIcon,ProjectIcon},setup(){const Q=usePageFrontmatter(),nn=usePure(),an=useNavigate(),en=(sn="",tn="icon")=>AVAILABLE_PROJECT_TYPES.includes(sn)?h$2(resolveComponent(`${sn}-icon`)):isLinkHttp(sn)?h$2("img",{src:sn,alt:tn,class:"image"}):ze(sn)?h$2("img",{src:withBase(sn),alt:tn,class:"image"}):h$2(HopeIcon,{icon:sn});return()=>{var sn;return(sn=Q.value.projects)!=null&&sn.length?h$2("div",{class:"project-panel"},Q.value.projects.map(({icon:tn,link:on,name:ln,desc:pn},cn)=>h$2("div",{class:["project",{[`project${cn%9}`]:!nn.value}],onClick:()=>an(on)},[en(tn,ln),h$2("div",{class:"name"},ln),h$2("div",{class:"desc"},pn)]))):null}}}),home="",BlogHome$1=defineComponent({name:"BlogHome",setup(){const Q=useArticles();return()=>h$2("div",{class:"page blog"},[h$2(BlogHero),h$2("div",{class:"blog-page-wrapper"},[h$2("main",{class:"blog-home",id:"main-content"},[h$2(DropTransition,{appear:!0,delay:.16},()=>h$2(ProjectPanel)),h$2(DropTransition,{appear:!0,delay:.24},()=>h$2(ArticleList,{items:Q.value.items}))]),h$2(DropTransition,{appear:!0,delay:.16},()=>h$2(InfoPanel))]),h$2(DropTransition,{appear:!0,delay:.28},()=>h$2(MarkdownContent))])}}),BlogHome=defineComponent({name:"BlogHome",setup(){return()=>h$2(BlogWrapper,()=>h$2(BlogHome$1))}}),articleType="",ArticleType=defineComponent({name:"ArticleType",setup(){const Q=usePageData(),nn=useRouteLocale(),an=useThemeLocaleData(),en=useArticles(),sn=useStars(),tn=computed(()=>{const on=an.value.blogLocales;return[{text:on.all,path:en.value.path},{text:on.star,path:sn.value.path},...[].map(({key:ln,path:pn})=>({text:on[ln],path:pn.replace(/^\//,nn.value)}))]});return()=>h$2("ul",{class:"article-type-wrapper"},tn.value.map(on=>h$2("li",{class:["article-type",{active:on.path===Q.value.path}]},h$2(RouterLink,{to:on.path},()=>on.text))))}}),BlogType=defineComponent({name:"BlogPage",setup(){const Q=C(),nn=usePageFrontmatter(),an=usePageData(),en=useArticles(),sn=useStars(),tn=computed(()=>{const{key:on="",type:ln}=nn.value.blog||{};return on==="star"?sn.value.items:ln==="type"&&on?Q.value.items:en.value.items});return()=>h$2(BlogWrapper,()=>h$2("div",{class:"page blog"},h$2("div",{class:"blog-page-wrapper"},[h$2("main",{class:"blog-main",id:"main-content"},[h$2(DropTransition,()=>h$2(ArticleType)),h$2(DropTransition,{appear:!0,delay:.24},()=>h$2(ArticleList,{key:an.value.path,items:tn.value}))]),h$2(DropTransition,{delay:.16},()=>h$2(InfoPanel))])))}}),timelineItems="",TimelineItems=defineComponent({name:"TimelineItems",setup(){const Q=useBlogOptions(),nn=useThemeLocaleData(),an=useTimelines(),en=computed(()=>Q.value.timeline||nn.value.blogLocales.timelineTitle),sn=computed(()=>an.value.config.map(({year:tn})=>({title:tn.toString(),level:2,slug:tn.toString(),children:[]})));return()=>h$2("div",{class:"timeline-wrapper"},h$2("ul",{class:"timeline-content"},[h$2(DropTransition,()=>h$2("li",{class:"motto"},en.value)),h$2(TOC,{items:sn.value}),...an.value.config.map(({year:tn,items:on},ln)=>h$2(DropTransition,{appear:!0,delay:.08*(ln+1),type:"group"},()=>[h$2("h3",{key:"title",id:tn,class:"timeline-year-title"},h$2("span",tn)),h$2("li",{key:"content",class:"timeline-year-list"},[h$2("ul",{class:"timeline-year-wrapper"},on.map(({date:pn,info:cn,path:rn})=>h$2("li",{class:"timeline-item"},[h$2("span",{class:"timeline-date"},pn),h$2(RouterLink,{class:"timeline-title",to:rn},()=>cn.t)])))])]))]))}}),Timeline=defineComponent({name:"Timeline",components:{ArticleType,CategoryList,TagList},setup(){return()=>h$2(BlogWrapper,()=>h$2("div",{class:"page blog"},h$2("div",{class:"blog-page-wrapper"},[h$2("main",{class:"blog-main",id:"main-content"},[h$2(DropTransition,{appear:!0,delay:.24},()=>h$2(TimelineItems))]),h$2(DropTransition,{delay:.16},()=>h$2(InfoPanel))])))}}),layout="",slidePage="";var d=defineComponent({name:"SlidePage",setup(){const Q=useRouter(),nn=ref(!1),an=ref(),en=()=>{nn.value=!nn.value},sn=()=>{nn.value=!1},tn=()=>{sn(),window.history.go(-1)},on=()=>{sn(),Q.push("/")};return onClickOutside(an,sn),()=>h$2("div",{class:"presentation"},[h$2(Content),h$2("div",{ref:an,class:["menu",{active:nn.value}]},[h$2("button",{type:"button",class:"menu-button",onClick:()=>en()},h$2("span",{class:"icon"})),h$2("button",{type:"button",class:"back-button",onClick:()=>tn()},h$2(q$1)),h$2("button",{type:"button",class:"home-button",onClick:()=>on()},h$2(a$1))])])}});const index="",clientConfig12=defineClientConfig({enhance:({app:Q,router:nn})=>{const{scrollBehavior:an}=nn.options;nn.options.scrollBehavior=async(...en)=>(await useScrollPromise().wait(),an(...en)),injectDarkmode(Q),Q.component("HopeIcon",HopeIcon),Q.component("BloggerInfo",BloggerInfo)},setup:()=>{setupDarkmode(),setupSidebarItems(),setupBlog()},layouts:{Layout,NotFound,BlogCategory,BlogHome,BlogType,Timeline,Slide:d}}),useDocsearchHotkeyListener=Q=>{const nn=useEventListener("keydown",an=>{an.key==="k"&&(an.ctrlKey||an.metaKey)&&(an.preventDefault(),Q(),nn())})},isSpecialClick=Q=>Q.button===1||Q.altKey||Q.ctrlKey||Q.metaKey||Q.shiftKey,useDocsearchShim=()=>{const Q=useRouter();return{hitComponent:({hit:nn,children:an})=>({type:"a",ref:void 0,constructor:void 0,key:void 0,props:{href:nn.url,onClick:en=>{isSpecialClick(en)||(en.preventDefault(),Q.push(resolveRoutePathFromUrl(nn.url,"/")))},children:an},__v:null}),navigator:{navigate:({itemUrl:nn})=>{Q.push(resolveRoutePathFromUrl(nn,"/"))}},transformSearchClient:nn=>{const an=r$2(nn.search,500);return{...nn,search:async(...en)=>an(...en)}}}},getFacetFilters=(Q=[],nn)=>[`lang:${nn}`,...isArray(Q)?Q:[Q]],getSearchButtonTemplate=({buttonText:Q="Search",buttonAriaLabel:nn=Q}={})=>`<button type="button" class="DocSearch DocSearch-Button" aria-label="${nn}"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">${Q}</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button>`,POLL_INTERVAL=16,pollToOpenDocsearch=()=>{if(document.querySelector(".DocSearch-Modal"))return;const Q=new Event("keydown");Q.key="k",Q.metaKey=!0,window.dispatchEvent(Q),setTimeout(pollToOpenDocsearch,POLL_INTERVAL)},preconnectToAlgolia=Q=>{const nn="algolia-preconnect";(window.requestIdleCallback||setTimeout)(()=>{if(document.head.querySelector(`#${nn}`))return;const en=document.createElement("link");en.id=nn,en.rel="preconnect",en.href=`https://${Q}-dsn.algolia.net`,en.crossOrigin="",document.head.appendChild(en)})},optionsDefault={appId:"F3AV1N1OZ3",apiKey:"5e1aa71ecf13d2d101c4e2e5e870f2b4",indexName:"monkeyboss",locales:{"/":{placeholder:"搜索",translations:{button:{buttonText:"搜索",buttonAriaLabel:"搜索"},modal:{searchBox:{resetButtonTitle:"清除查询条件",resetButtonAriaLabel:"清除查询条件",cancelButtonText:"取消",cancelButtonAriaLabel:"取消"},startScreen:{recentSearchesTitle:"搜索历史",noRecentSearchesText:"没有搜索历史",saveRecentSearchButtonTitle:"保存至搜索历史",removeRecentSearchButtonTitle:"从搜索历史中移除",favoriteSearchesTitle:"收藏",removeFavoriteSearchButtonTitle:"从收藏中移除"},errorScreen:{titleText:"无法获取结果",helpText:"你可能需要检查你的网络连接"},footer:{selectText:"选择",navigateText:"切换",closeText:"关闭",searchByText:"搜索提供者"},noResultsScreen:{noResultsText:"无法找到相关结果",suggestedQueryText:"你可以尝试查询",reportMissingResultsText:"你认为该查询应该有结果？",reportMissingResultsLinkText:"点击反馈"}}}}}};__vitePreload(()=>import("./style-e9220a04.js"),[]),__vitePreload(()=>import("./docsearch-1d421ddb.js"),[]);const Docsearch=defineComponent({name:"Docsearch",props:{containerId:{type:String,required:!1,default:"docsearch-container"},options:{type:Object,required:!1,default:()=>optionsDefault}},setup(Q){const nn=useDocsearchShim(),an=usePageLang(),en=useRouteLocale(),sn=ref(!1),tn=ref(!1),on=computed(()=>{var cn;return{...Q.options,...(cn=Q.options.locales)==null?void 0:cn[en.value]}}),ln=async()=>{var rn;const{default:cn}=await __vitePreload(()=>import("./index-ade63bb5.js"),[]);cn({...nn,...on.value,container:`#${Q.containerId}`,searchParameters:{...on.value.searchParameters,facetFilters:getFacetFilters((rn=on.value.searchParameters)==null?void 0:rn.facetFilters,an.value)}}),sn.value=!0},pn=()=>{tn.value||sn.value||(tn.value=!0,ln(),pollToOpenDocsearch(),watch(en,ln))};return useDocsearchHotkeyListener(pn),onMounted(()=>preconnectToAlgolia(on.value.appId)),()=>{var cn;return[h$2("div",{id:Q.containerId,style:{display:sn.value?"block":"none"}}),sn.value?null:h$2("div",{onClick:pn,innerHTML:getSearchButtonTemplate((cn=on.value.translations)==null?void 0:cn.button)})]}}}),clientConfig13=defineClientConfig({enhance({app:Q}){Q.component("Docsearch",Docsearch)}}),clientConfigs=[clientConfig0,clientConfig1,clientConfig2,K$1,clientConfig4,clientConfig5,clientConfig6,l$2,Y$1,clientConfig9,I,clientConfig11,clientConfig12,clientConfig13],pagesRoutes=[["v-8daa1a0e","/",{y:"h",t:"主页",i:"home"},["/index.html","/README.md"]],["v-1844c2a8","/about/intro.html",{d:16693344e5,l:"2022年11月25日",g:["个人介绍"],r:{minutes:.42,words:127},y:"s",t:"MonkeyBoss 介绍",i:"people"},["/about/intro","/about/intro.md"]],["v-78da0dd7","/about/site.html",{y:"p",t:"关于网站",i:"info"},["/about/site","/about/site.md"]],["v-14c69af4","/java/",{d:1668816e6,l:"2022年11月19日",g:["JAVA","目录"],u:!0,e:`<h2> <strong>Java基础</strong></h2>
<ul>
<li><a href="/java/java-basic/" target="blank">Java基础编程</a></li>
<li><a href="/java/java-advanced/" target="blank">Java高级编程</a></li>
</ul>
<h2> <a href="https://heavy_code_industry.gitee.io/code_heavy_industry/pro001-javaweb/" target="_blank" rel="noopener noreferrer">JavaWEB</a></h2>`,r:{minutes:.28,words:85},y:"a",t:"JAVA",i:"java"},["/java/index.html","/java/README.md"]],["v-6f3e1b94","/other/elasticsearch.html",{d:16792704e5,l:"2023年3月20日",c:"其他",g:["ElasticSearch"],e:`<h1> ElasticSearch</h1>
<h2> 简介</h2>
<p><a href="https://www.elastic.co/cn/what-is/elasticsearch" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/what-is/elasticsearch</a></p>
<p>全文搜索属于最常见的需求，开源的 Elasticsearch 是目前全文搜索引擎的首选。
它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它
Elastic 的底层是开源库 Lucene。但是，你没法直接用 Lucene，必须自己写代码去调用它的
接口。Elastic 是 Lucene 的封装，提供了 REST API 的操作接口，开箱即用。</p>`,r:{minutes:14.57,words:4370},y:"a",t:"ElasticSearch"},["/other/elasticsearch","/other/elasticsearch.md"]],["v-71b07f05","/java/design-patterns/agent.html",{d:16695072e5,l:"2022年11月27日",c:"基础",g:["JAVA","设计模式"],e:`<h1> 代理模式</h1>
<h2> 解决的问题</h2>
<p>代理模式是Java开发中使用较多的一种设计模式。代理设计就是为其他对象提供一种代理以控制对这个对象的访问。</p>
<h2> 举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">NetWork</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">browse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 被代理类</span>
<span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token keyword">implements</span> <span class="token class-name">NetWork</span><span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">browse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"真实的服务器访问网络"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 代理类</span>
<span class="token keyword">class</span> <span class="token class-name">ProxyServer</span> <span class="token keyword">implements</span> <span class="token class-name">NetWork</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">NetWork</span> work<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token class-name">ProxyServer</span><span class="token punctuation">(</span><span class="token class-name">NetWork</span> work<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>work <span class="token operator">=</span> work<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"联网之前的检查工作"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">browse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		work<span class="token punctuation">.</span><span class="token function">browse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:145},y:"a",t:"代理模式"},["/java/design-patterns/agent","/java/design-patterns/agent.md"]],["v-20984be0","/java/design-patterns/factory.html",{d:16695072e5,l:"2022年11月27日",c:"基础",g:["JAVA","设计模式"],e:`<h1> 工厂模式</h1>
<h2> 解决的问题</h2>
<p>实现了创建者与调用者的分离，即将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。</p>
<h2> 具体模式</h2>
<p><code>简单工厂模式</code>：用来生产同一等级结构中的任意产品。（对于增加新的产品，需要修改已有代码）</p>
<p><code>工厂方法模式</code>：用来生产同一等级结构中的固定产品。（支持增加任意产品)</p>
<p><code>抽象工厂模式</code>：用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族)</p>
`,r:{minutes:.6,words:181},y:"a",t:"工厂模式"},["/java/design-patterns/factory","/java/design-patterns/factory.md"]],["v-28a7f309","/java/design-patterns/single-threadsafety.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA","设计模式"],e:`<h1> 线程安全的单例模式(懒汉式)</h1>
<p><strong>使用同步机制将单例模式中的懒汉式改写为线程安全的。</strong></p>
<div class="language-java line-numbers-mode" data-ext="java"><pre java="" class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Bank</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Bank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Bank</span> instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Bank</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 方式一：效率稍差</span>
        <span class="token comment">// synchronized (Bank.class) {</span>
        <span class="token comment">// if(instance == null){</span>
            <span class="token comment">// instance = new Bank();</span>
        <span class="token comment">// }</span>
        <span class="token comment">// return instance;</span>
        <span class="token comment">// }</span>
        <span class="token comment">// 方式二：效率更高</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">Bank</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.37,words:112},y:"a",t:"线程安全的单例模式(懒汉式)"},["/java/design-patterns/single-threadsafety","/java/design-patterns/single-threadsafety.md"]],["v-37b885a0","/java/design-patterns/single.html",{d:16693344e5,l:"2022年11月25日",c:"基础",g:["JAVA","设计模式"],e:`<h1> 单例模式</h1>
<h2> 设计模式的说明</h2>
<div class="hint-container tip">
<p class="hint-container-title">设计模式</p>
<p>是在大量的实践中总结和理论化之后优的代码结构、编程风格、以及解决问题的思考方式.</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">常用设计模式</p>
<p>23种经典的设计模式</p>
<ul>
<li>创建型模式，共 5️⃣ 种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</li>
<li>结构型模式，共 7️⃣ 种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。</li>
<li>行为型模式，共 1️⃣1️⃣ 种：策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</li>
</ul>
</div>`,r:{minutes:1.9,words:569},y:"a",t:"单例模式"},["/java/design-patterns/single","/java/design-patterns/single.md"]],["v-fbf47354","/java/java-advanced/",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA","目录"],e:`<ul>
<li><a href="/java/java-advanced/multi-thread/introduce.html" target="blank">多线程</a></li>
<li><a href="/java/java-advanced/common-utils/String.html" target="blank">Java常用类</a></li>
<li><a href="/java/java-advanced/enum/enum.html" target="blank">枚举类和注解</a></li>
<li><a href="/java/java-advanced/collection/array-collection.html" target="blank">Java集合</a></li>
<li><a href="/java/java-advanced/generic/generic.html" target="blank">泛型</a></li>
<li><a href="/java/java-advanced/IOStream/file.html" target="blank">IO流</a></li>
<li><a href="/java/java-advanced/network/InetAddress.html" target="blank">网络编程</a></li>
<li><a href="/java/java-advanced/reflection/reflection.html" target="blank">Java反射机制</a></li>
<li><a href="/java/java-advanced/new-features/Lambda.html" target="blank">Java8新特性</a></li>
</ul>`,r:{minutes:.21,words:63},y:"a",t:"JAVA进阶"},["/java/java-advanced/index.html","/java/java-advanced/README.md"]],["v-69e9ec58","/java/java-basic/",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA","目录"],e:`<ul>
<li><a href="/java/java-basic/java-basic.html" target="blank">基本语法</a></li>
<li><a href="/java/java-basic/java-array.html" target="blank">数组</a></li>
<li><a href="/java/java-basic/object/upper/class.html" target="blank">面向对象 - 上</a></li>
<li><a href="/java/java-basic/object/middle/class-extends.html" target="blank">面向对象 - 中</a></li>
<li><a href="/java/java-basic/object/lower/keyword-static.html" target="blank">面向对象 - 下</a></li>
<li><a href="/java/java-basic/java-exception.html" target="blank">异常处理</a></li>
</ul>`,r:{minutes:.17,words:51},y:"a",t:"JAVA基础"},["/java/java-basic/index.html","/java/java-basic/README.md"]],["v-2118a15a","/java/java-basic/java-array.html",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA"],e:`<h1> 数组</h1>
<h2> 概述</h2>
<h3> 理解</h3>
<div class="hint-container tip">
<p class="hint-container-title">数组(Array)</p>
<p>是多个相同类型数据一定顺序排列的集合，并使用一个名字命名， 并通过编号的方式对这些数据进行统一管理。</p>
</div>
<h3> 概念</h3>
<p><code>数组名</code> <code>元素</code> <code>角标</code> <code>下标</code> <code>索引</code> <code>数组的长度(元素的个数)</code></p>`,r:{minutes:4.16,words:1249},y:"a",t:"数组"},["/java/java-basic/java-array","/java/java-basic/java-array.md"]],["v-168baac4","/java/java-basic/java-basic.html",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA"],e:`<h1> 基本语法</h1>
<h2> 关键字与标识符</h2>
<h3> 1.JAVA关键字的使用</h3>
<p><strong>定义</strong>：被Java语言赋予了特殊含义，用做专门用途的字符串（单词）</p>
<p><strong>特点</strong>：关键字中所字母都为小写</p>
<p>具体哪些关键字：</p>
<ol>
<li>用于定义数据类型的关键字：<br>
<code>class</code>、<code>interface</code>、<code>enum</code>、<code>byte</code>、<code>short</code>、<code>int</code>、<code>lang</code>、<code>float</code>、<code>double</code>、<code>char</code>、<code>boolean</code>、<code>void</code></li>
<li>用于定义流程控制的关键字：<br>
<code>if</code>、<code>else</code>、<code>switch</code>、<code>case</code>、<code>default</code>、<code>while</code>、<code>do</code>、<code>for</code>、<code>break</code>、<code>continue</code>、<code>return</code></li>
<li>用于定义访问权限修饰符的关键字：<br>
<code>private</code>、<code>protected</code>、<code>public</code></li>
<li>用于定义类、函数、变量修饰符的关键字：<br>
<code>abstract</code>、<code>final</code>、<code>static</code>、<code>synchronized</code></li>
<li>用于定义类与类之间关系的关键字：<br>
<code>extends</code>、<code>implements</code></li>
<li>用于定义建立实例与类之间关系的关键字：<br>
<code>new</code>、<code>this</code>、<code>super</code>、<code>instanceof</code></li>
<li>用于异常处理的关键字：<br>
<code>try</code>、<code>catch</code>、<code>finally</code>、<code>throw</code>、<code>throws</code></li>
<li>用于包的关键字：<br>
<code>package</code>、<code>import</code></li>
<li>其它修饰符关键字：<br>
<code>native</code>、<code>strictfp</code>、<code>transient</code>、<code>volatile</code>、<code>assert</code></li>
<li>用于定义数据类型值的字面值：<br>
<code>true</code>、<code>false</code>、<code>null</code></li>
</ol>`,r:{minutes:7.17,words:2151},y:"a",t:"基本语法"},["/java/java-basic/java-basic","/java/java-basic/java-basic.md"]],["v-156e6cc6","/java/java-basic/java-exception.html",{d:16695072e5,l:"2022年11月27日",c:"基础",g:["JAVA"],e:`<h1> 异常处理</h1>
<h2> 异常</h2>
<h3> 异常的体系结构</h3>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> java.lang.Throwable
 	|-----java.lang.Error:一般不编写针对性的代码进行处理。
 	|-----java.lang.Exception:可以进行异常的处理
 		|------编译时异常(checked)
 			|-----IOException
 				|-----FileNotFoundException
 			|-----ClassNotFoundException
 		|------运行时异常(unchecked,RuntimeException)
 			|-----NullPointerException
 			|-----ArrayIndexOutOfBoundsException
 			|-----ClassCastException
 			|-----NumberFormatException
 			|-----InputMismatchException
 			|-----ArithmeticException
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.71,words:1414},y:"a",t:"异常处理"},["/java/java-basic/java-exception","/java/java-basic/java-exception.md"]],["v-1fd8fe0e","/mysql/mysql-advanced/InnoDB.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第07章_InnoDB数据存储结构</h1>
<h2> 1. 数据库的存储结构：页</h2>
<p>索引结构给我们提供了高效的索引方式，不过索引信息以及数据记录都保存在文件上的，确切说是存储在页结构中。另一方面，索引是在存储引擎中实现的，MySQL服务器上的<code>存储引擎</code>
负责对表中数据的读取和写入工作。不同存储引擎中<code>存放的格式</code>一般不同的，甚至有的存储引擎比如Memory都不用磁盘来存储数据。</p>
<p>由于<code>InnoDB</code>是MySQL的<code>默认存储引擎</code>，所以本章剖析InooDB存储引擎的数据存储结构。</p>`,r:{minutes:21.57,words:6471},y:"a",t:"第07章_InnoDB数据存储结构"},["/mysql/mysql-advanced/InnoDB","/mysql/mysql-advanced/InnoDB.md"]],["v-17c1358e","/mysql/mysql-advanced/MS-copy.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第18章_主从复制</h1>
<h2> <strong>1.</strong> <strong>主从复制概述</strong></h2>
<h3> <strong>1.1</strong> <strong>如何提升数据库并发能力</strong></h3>
<p>一般应用对数据库而言都是"<code>读多写少</code>"，也就说对数据库读取数据的压力比较大，有一个思路就是采用数据库集群的方案，做<code>主从架构</code>
、进行<code>读写分离</code>，这样同样可以提升数据库的并发处理能力。但并不是所有的应用都需要对数据库进行主从架构的设置，毕竟设置架构本身是有成本的。</p>`,r:{minutes:4.73,words:1420},y:"a",t:"第18章_主从复制"},["/mysql/mysql-advanced/MS-copy","/mysql/mysql-advanced/MS-copy.md"]],["v-2385bbd8","/mysql/mysql-advanced/MVCC.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第16章_多版本并发控制</h1>
<h2> <strong>1.</strong> <strong>什么是MVCC</strong></h2>
<p>MVCC （Multiversion Concurrency Control），多版本并发控制。顾名思义，MVCC 是通过数据行的多个版本管理来实现数据库的<code>并发控制</code>
。这项技术使得在InnoDB的事务隔离级别下执行<code>一致性读</code>
操作有了保证。换言之，就是为了查询一些正在被另一个事务更新的行，并且可以看到它们被更新之前的值，这样在做查询的时候就不用等待另一个事务释放锁。</p>
<h2> <strong>2.</strong> <strong>快照读与当前读</strong></h2>`,r:{minutes:9.3,words:2790},y:"a",t:"第16章_多版本并发控制"},["/mysql/mysql-advanced/MVCC","/mysql/mysql-advanced/MVCC.md"]],["v-3c744a85","/mysql/mysql-advanced/NF.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第11章_数据库的设计规范</h1>
<h2> <strong>1.</strong> <strong>范 式</strong></h2>
<h3> <strong>1.1</strong> <strong>范式简介</strong></h3>
<p><strong>在关系型数据库中，关于数据表设计的基本原则、规则就称为范式。</strong>
可以理解为，一张数据表的设计结构需要满足的某种设计标准的<code>级别</code>。要想设计一个结构合理的关系型数据库，必须满足一定的范式。</p>
<h3> <strong>1.2</strong> <strong>范式都包括哪些</strong></h3>`,r:{minutes:14.92,words:4476},y:"a",t:"第11章_数据库的设计规范"},["/mysql/mysql-advanced/NF","/mysql/mysql-advanced/NF.md"]],["v-5942281c","/mysql/mysql-advanced/",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL","目录"],e:`<h2> <strong>MySQL架构篇</strong></h2>
<ul>
<li><a href="/mysql/mysql-advanced/setup-linux.html" target="blank">Linux下MySQL的安装与使用</a></li>
<li><a href="/mysql/mysql-advanced/data-dir.html" target="blank">MySQL的数据目录</a></li>
<li><a href="/mysql/mysql-advanced/user.html" target="blank">用户与权限管理</a></li>
<li><a href="/mysql/mysql-advanced/logical-architecture.html" target="blank">逻辑架构</a></li>
<li><a href="/mysql/mysql-advanced/engines.html" target="blank">存储引擎</a></li>
<li><a href="/mysql/mysql-advanced/indexes.html" target="blank">索引数据结构</a></li>
<li><a href="/mysql/mysql-advanced/InnoDB.html" target="blank">InnoDB数据页结构</a></li>
</ul>`,r:{minutes:.6,words:180},y:"a",t:"MySQL高级"},["/mysql/mysql-advanced/index.html","/mysql/mysql-advanced/README.md"]],["v-fa6dfa8a","/mysql/mysql-advanced/backup.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第19章_数据库备份与恢复</h1>
<h2> <strong>1.</strong> <strong>物理备份与逻辑备份</strong></h2>
<p><strong>物理备份</strong>：备份数据文件，转储数据库物理文件到某一目录。物理备份恢复速度比较快，但占用空间比较大，MySQL中可以用<code>xtrabackup</code>
工具来进行物理备份。</p>
<p><strong>逻辑备份</strong>：对数据库对象利用工具进行导出工作，汇总入备份文件内。逻辑备份恢复速度慢，但占用空间小，更灵活。MySQL
中常用的逻辑备份工具为<code>mysqldump</code>。逻辑备份就是<code>备份sql语句</code>，在恢复的时候执行备份的sql语句实现数据库数据的重现。</p>`,r:{minutes:2.88,words:864},y:"a",t:"第19章_数据库备份与恢复"},["/mysql/mysql-advanced/backup","/mysql/mysql-advanced/backup.md"]],["v-533df6da","/mysql/mysql-advanced/data-dir.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第02章_MySQL的数据目录</h1>
<h2> <strong>1. MySQL8的主要目录结构</strong></h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> / <span class="token parameter variable">-name</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:2.37,words:711},y:"a",t:"第02章_MySQL的数据目录"},["/mysql/mysql-advanced/data-dir","/mysql/mysql-advanced/data-dir.md"]],["v-7b212f24","/mysql/mysql-advanced/engines.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第05章_存储引擎</h1>
<h2> <strong>1.</strong> <strong>查看存储引擎</strong></h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> engines<span class="token punctuation">;</span>
<span class="token comment"># 或</span>
<span class="token keyword">show</span> engines\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.55,words:1066},y:"a",t:"第05章_存储引擎"},["/mysql/mysql-advanced/engines","/mysql/mysql-advanced/engines.md"]],["v-c34dff74","/mysql/mysql-advanced/index-create.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第08章_索引的创建与设计原则</h1>
<h2> <strong>1.</strong> <strong>索引的声明与使用</strong></h2>
<h3> <strong>1.1</strong> <strong>索引的分类</strong></h3>
<ul>
<li>从<code>功能逻辑</code>上说，索引主要有 4 种，分别是普通索引、唯一索引、主键索引、全文索引。</li>
<li>按照<code>物理实现方式</code>，索引可以分为 2 种：聚簇索引和非聚簇索引。</li>
<li>按照<code>作用字段个数</code>进行划分，分成单列索引和联合索引。</li>
</ul>`,r:{minutes:8.67,words:2600},y:"a",t:"第08章_索引的创建与设计原则"},["/mysql/mysql-advanced/index-create","/mysql/mysql-advanced/index-create.md"]],["v-7ac575f5","/mysql/mysql-advanced/indexes.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第06章_索引的数据结构</h1>
<h2> <strong>1.</strong> <strong>索引及其优缺点</strong></h2>
<h3> <strong>1.1</strong> <strong>索引概述</strong></h3>
<p>MySQL官方对索引的定义为：<strong>索引（Index）是帮助MySQL高效获取数据的数据结构</strong>。</p>
<p><strong>索引的本质</strong>：索引是数据结构。你可以简单理解为"排好序的快速查找数据结构"，满足特定查找算法。这些数据结构以某种方式指向数据，
这样就可以在这些数据结构的基础上实现<code>高级查找算法</code>。</p>`,r:{minutes:24.61,words:7383},y:"a",t:"第06章_索引的数据结构"},["/mysql/mysql-advanced/indexes","/mysql/mysql-advanced/indexes.md"]],["v-2ee5941c","/mysql/mysql-advanced/lock.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第15章_锁</h1>
<h2> <strong>1.</strong> <strong>概述</strong></h2>
<p>在数据库中，除传统的计算资源（如CPU、RAM、I/O等）的争用以外，数据也是一种供许多用户共享的资源。为保证数据的一致性，需要对<code>并发操作进行控制</code>
，因此产生了<code>锁</code>。同时<code>锁机制</code>也为实现MySQL的各个隔离级别提供了保证。 锁冲突 也是影响数据库<code>并发访问性能</code>
的一个重要因素。所以锁对数据库而言显得尤其重要，也更加复杂。</p>
<h2> <strong>2. MySQL并发事务访问相同记录</strong></h2>`,r:{minutes:27.37,words:8212},y:"a",t:"第15章_锁"},["/mysql/mysql-advanced/lock","/mysql/mysql-advanced/lock.md"]],["v-55436e06","/mysql/mysql-advanced/logical-architecture.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第04章_逻辑架构</h1>
<h2> <strong>1.</strong> <strong>逻辑架构剖析</strong></h2>
<h3> <strong>1.1</strong> <strong>第1层：连接层</strong></h3>
<p>系统（客户端）访问<code>MySQL</code>服务器前，做的第一件事就是建立<code>TCP</code>连接。</p>
<p>经过三次握手建立连接成功后，<code>MySQL</code>服务器对<code>TCP</code>传输过来的账号密码做身份认证、权限获取。</p>
<ul>
<li><strong>用户名或密码不对，会收到一个Access denied for user错误，客户端程序结束执行</strong></li>
<li><strong>用户名密码认证通过，会从权限表查出账号拥有的权限与连接关联，之后的权限判断逻辑，都将依赖于此时读到的权限</strong></li>
</ul>`,r:{minutes:8.63,words:2590},y:"a",t:"第04章_逻辑架构"},["/mysql/mysql-advanced/logical-architecture","/mysql/mysql-advanced/logical-architecture.md"]],["v-9d59d500","/mysql/mysql-advanced/optimize.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第10章_索引优化与查询优化</h1>
<h2> <strong>1.</strong> <strong>索引失效案例</strong></h2>
<p>MySQL中<code>提高性能</code>的一个最有效的方式是对数据表<code>设计合理的索引</code>。索引提供了访问高效数据的方法，并且加快查询的速度，因此索引对查询的速度有着至关重要的影响。</p>
<ul>
<li>使用索引可以<code>快速地定位</code>表中的某条记录，从而提高数据库查询的速度，提高数据库的性能。</li>
<li>如果查询时没有使用索引，查询语句就会<code>扫描表中的所有记录</code>。在数据量大的情况下，这样查询的速度会很慢。</li>
</ul>`,r:{minutes:13.12,words:3936},y:"a",t:"第10章_索引优化与查询优化"},["/mysql/mysql-advanced/optimize","/mysql/mysql-advanced/optimize.md"]],["v-4955c54e","/mysql/mysql-advanced/other-log.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第17章_其它数据库日志</h1>
<h2> <strong>1. MySQL支持的日志</strong></h2>
<h3> <strong>1.1</strong> <strong>日志类型</strong></h3>
<p>MySQL有不同类型的日志文件，用来存储不同类型的日志，分为<code>二进制日志</code>、<code>错误日志</code>、<code>通用查询日志</code>和<code>慢查询日志</code>，这也是常用的4种。MySQL
8又新增两种支持的日志：<code>中继日志</code>和<code>数据定义语句日志</code>。使用这些日志文件，可以查看MySQL内部发生的事情。</p>`,r:{minutes:7.93,words:2379},y:"a",t:"第17章_其它数据库日志"},["/mysql/mysql-advanced/other-log","/mysql/mysql-advanced/other-log.md"]],["v-261f60e5","/mysql/mysql-advanced/other.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第12章 数据库其它调优策略</h1>
<h2> <strong>1.</strong> <strong>数据库调优的措施</strong></h2>
<h3> <strong>1.1</strong> <strong>调优的目标</strong></h3>
<ul>
<li>尽可能<code>节省系统资源</code>，以便系统可以提供更大负荷的服务。（吞吐量更大）</li>
<li>合理的结构设计和参数调整，以提高用户操<code> 响应的速度</code>。（响应速度更快）</li>
<li>减少系统的瓶颈，提高MySQL数据库整体的性能。</li>
</ul>
<h3> <strong>1.2</strong> <strong>如何定位调优问题</strong></h3>`,r:{minutes:10.45,words:3134},y:"a",t:"第12章 数据库其它调优策略"},["/mysql/mysql-advanced/other","/mysql/mysql-advanced/other.md"]],["v-1d7189d1","/mysql/mysql-advanced/setup-linux.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第01章_Linux下的安装与使用</h1>
<h2> <strong>1.</strong> <strong>安装前说明</strong></h2>
<h3> <strong>1.1</strong> <strong>查看是否安装过MySQL</strong></h3>
<ul>
<li>如果你是用rpm安装, 检查一下RPM PACKAGE：</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> mysql <span class="token comment"># -i 忽略大小写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:4.88,words:1464},y:"a",t:"第01章_Linux下的安装与使用"},["/mysql/mysql-advanced/setup-linux","/mysql/mysql-advanced/setup-linux.md"]],["v-13cf2e7e","/mysql/mysql-advanced/slow-query.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第09章_性能分析工具的使用</h1>
<h2> <strong>1.</strong> <strong>统计SQL的查询成本：last_query_cost</strong></h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">STATUS</span> <span class="token operator">LIKE</span> <span class="token string">'last_query_cost'</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:6.59,words:1976},y:"a",t:"第09章_性能分析工具的使用"},["/mysql/mysql-advanced/slow-query","/mysql/mysql-advanced/slow-query.md"]],["v-1b8b1440","/mysql/mysql-advanced/transaction-log.html",{d:16710624e5,l:"2022年12月15日",c:"基础进阶",g:["MySQL"],e:`<h1> 第14章_MySQL事务日志</h1>
<p>事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？</p>
<ul>
<li>事务的隔离性由<code>锁机制</code>实现。</li>
<li>而事务的原子性、一致性和持久性由事务的 redo 日志和undo 日志来保证。
<ul>
<li>REDO LOG 称为<code>重做日志</code>，提供再写入操作，恢复提交事务修改的页操作，用来保证事务的持久性。</li>
<li>UNDO LOG 称为<code>回滚日志</code>，回滚行记录到某个特定版本，用来保证事务的原子性、一致性。</li>
</ul>
</li>
</ul>`,r:{minutes:8.92,words:2675},y:"a",t:"第14章_MySQL事务日志"},["/mysql/mysql-advanced/transaction-log","/mysql/mysql-advanced/transaction-log.md"]],["v-0e25f8d7","/mysql/mysql-advanced/transaction.html",{d:1670976e6,l:"2022年12月14日",c:"基础进阶",g:["MySQL"],e:`<h1> 第13章_事务基础知识</h1>
<h2> <strong>1.</strong> <strong>数据库事务概述</strong></h2>
<h3> <strong>1.1</strong> <strong>基本概念</strong></h3>
<p><strong>事务</strong>：一组逻辑操作单元，使数据从一种状态变换到另一种状态。</p>
<p><strong>事务处理的原则</strong>：保证所有事务都作为<code>一个工作单元</code>
来执行，即使出现了故障，都不能改变这种执行方式。当在一个事务中执行多个操作时，要么所有的事务都被提交(<code>commit</code>)
，那么这些修改就<code>永久</code>地保存下来；要么数据库管理系统将<code>放弃</code>所作的所有<code>修改</code>，整个事务回滚(<code>rollback</code>)到最初状态。</p>`,r:{minutes:7.75,words:2325},y:"a",t:"第13章_事务基础知识"},["/mysql/mysql-advanced/transaction","/mysql/mysql-advanced/transaction.md"]],["v-34383352","/mysql/mysql-advanced/user.html",{d:16708896e5,l:"2022年12月13日",c:"基础进阶",g:["MySQL"],e:`<h1> 第03章_用户与权限管理</h1>
<h2> <strong>1.</strong> <strong>用户管理</strong></h2>
<h3> <strong>1.1</strong> <strong>登录MySQL服务器</strong></h3>
<p>启动MySQL服务后，可以通过mysql命令来登录MySQL服务器，命令如下：</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql –h hostname<span class="token operator">|</span>hostIP –P port –u username –p DatabaseName –e <span class="token string">"SQL语句"</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:5.93,words:1779},y:"a",t:"第03章_用户与权限管理"},["/mysql/mysql-advanced/user","/mysql/mysql-advanced/user.md"]],["v-24605052","/mysql/mysql-basic/",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["MySQL","目录"],e:`<h2> <strong>数据库概述与MySQL安装篇</strong></h2>
<ul>
<li><a href="/mysql/mysql-basic/mysql-basic.html" target="blank">数据库概述</a></li>
<li><a href="/mysql/mysql-basic/env.html" target="blank">MySQL环境搭建</a></li>
</ul>
<h2> <strong>SQL之SELECT使用篇</strong></h2>
<ul>
<li><a href="/mysql/mysql-basic/select.html" target="blank">基本的SELECT语句</a></li>
<li><a href="/mysql/mysql-basic/operator.html" target="blank">运算符</a></li>
<li><a href="/mysql/mysql-basic/order.html" target="blank">排序与分页</a></li>
<li><a href="/mysql/mysql-basic/multi-table.html" target="blank">多表查询</a></li>
<li><a href="/mysql/mysql-basic/single-line.html" target="blank">单行函数</a></li>
<li><a href="/mysql/mysql-basic/polymerization.html" target="blank">聚合函数</a></li>
<li><a href="/mysql/mysql-basic/sub-query.html" target="blank">子查询</a></li>
</ul>`,r:{minutes:.55,words:165},y:"a",t:"MySQL基础"},["/mysql/mysql-basic/index.html","/mysql/mysql-basic/README.md"]],["v-d9f5e2ec","/mysql/mysql-basic/constraint.html",{d:16708032e5,l:"2022年12月12日",c:"基础",g:["MySQL"],e:`<h1> 第13章_约束</h1>
<h2> 1. 约束(constraint)概述</h2>
<h3> 1.1 为什么需要约束</h3>
<p>数据完整性（Data Integrity）是指数据的精确性（Accuracy）和可靠性（Reliability）。它是防止数据库中存在不符合语义规定的数据和防止因错误信息的输入输出造成无效操作或错误信息而提出的。</p>
<p>为了保证数据的完整性，SQL规范以约束的方式对<strong>表数据进行额外的条件限制</strong>。从以下四个方面考虑：</p>
<ul>
<li><code>实体完整性（Entity Integrity）</code>：例如，同一个表中，不能存在两条完全相同无法区分的记录</li>
<li><code>域完整性（Domain Integrity）</code>：例如：年龄范围0-120，性别范围"男/女"</li>
<li><code>引用完整性（Referential Integrity）</code>：例如：员工所在部门，在部门表中要能找到这个部门</li>
<li><code>用户自定义完整性（User-defined Integrity）</code>：例如：用户名唯一、密码不能为空等，本部门经理的工资不得高于本部门职工的平均工资的5倍。</li>
</ul>`,r:{minutes:33.56,words:10069},y:"a",t:"第13章_约束"},["/mysql/mysql-basic/constraint","/mysql/mysql-basic/constraint.md"]],["v-3a1185cb","/mysql/mysql-basic/create.html",{d:16703712e5,l:"2022年12月7日",c:"基础",g:["MySQL"],e:`<h1> 第10章_创建和管理表</h1>
<h2> 1. 基础知识</h2>
<h3> 1.1 一条数据存储的过程</h3>
<p><code>存储数据是处理数据的第一步</code>。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只能是一团乱麻，无从下手。</p>
<p>那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，一个完整的数据存储过程总共有 4
步，分别是创建数据库、确认字段、创建数据表、插入数据。</p>
<p></p>
<p>我们要先创建一个数据库，而不是直接创建数据表呢？</p>
<p>因为从系统架构的层次上看，MySQL 数据库系统从大到小依次是<code>数据库服务器</code>、<code>数据库</code>、<code>数据表</code>、数据表的<code>行与列</code>。</p>`,r:{minutes:11.18,words:3355},y:"a",t:"第10章_创建和管理表"},["/mysql/mysql-basic/create","/mysql/mysql-basic/create.md"]],["v-6dd3c849","/mysql/mysql-basic/crud.html",{d:16707168e5,l:"2022年12月11日",c:"基础",g:["MySQL"],e:`<h1> 第11章_数据处理之增删改</h1>
<h2> 1. 插入数据</h2>
<h3> 1.1 实际问题</h3>
<p></p>
<p>解决方式：使用 INSERT 语句向表中插入数据。</p>
<h3> 1.2 方式1：VALUES的方式添加</h3>
<p>使用这种语法一次只能向表中插入<strong>一条</strong>数据。</p>
<p><strong>情况1：为表的所有字段按默认顺序插入数据</strong></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span>value2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.55,words:2865},y:"a",t:"第11章_数据处理之增删改"},["/mysql/mysql-basic/crud","/mysql/mysql-basic/crud.md"]],["v-371d7764","/mysql/mysql-basic/data-type.html",{d:16708032e5,l:"2022年12月12日",c:"基础",g:["MySQL"],e:`<h1> 第12章_MySQL数据类型精讲</h1>
<h2> 1. MySQL中的数据类型</h2>
<table>
<thead>
<tr>
<th>类型</th>
<th>类型举例</th>
</tr>
</thead>
<tbody>
<tr>
<td>整数类型</td>
<td>TINYINT、SMALLINT、MEDIUMINT、INT(或INTEGER)、BIGINT</td>
</tr>
<tr>
<td>浮点类型</td>
<td>FLOAT、DOUBLE</td>
</tr>
<tr>
<td>定点数类型</td>
<td>DECIMAL</td>
</tr>
<tr>
<td>位类型</td>
<td>BIT</td>
</tr>
<tr>
<td>日期时间类型</td>
<td>YEAR、TIME、DATE、DATETIME、TIMESTAMP</td>
</tr>
<tr>
<td>文本字符串类型</td>
<td>CHAR、VARCHAR、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT</td>
</tr>
<tr>
<td>枚举类型</td>
<td>ENUM</td>
</tr>
<tr>
<td>集合类型</td>
<td>SET</td>
</tr>
<tr>
<td>二进制字符串类型</td>
<td>BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB</td>
</tr>
<tr>
<td>JSON类型</td>
<td>JSON对象、JSON数组</td>
</tr>
<tr>
<td>空间数据类型</td>
<td>单值类型：GEOMETRY、POINT、LINESTRING、POLYGON；<br>集合类型：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTION</td>
</tr>
</tbody>
</table>`,r:{minutes:35.7,words:10711},y:"a",t:"第12章_MySQL数据类型精讲"},["/mysql/mysql-basic/data-type","/mysql/mysql-basic/data-type.md"]],["v-27d5225e","/mysql/mysql-basic/env.html",{d:16701984e5,l:"2022年12月5日",c:"基础",g:["MySQL"],e:`<h1> 第02章_MySQL环境搭建</h1>
<h2> 1. MySQL的卸载</h2>
<h3> 步骤1：停止MySQL服务</h3>
<p>在卸载之前，先停止MySQL8.0的服务。按键盘上的"Ctrl + Alt + Delete"组合键，打开"任务管理器"对话框，可以在"服务"列表找到"
MySQL8.0"的服务，如果现在"正在运行"状态，可以右键单击服务，选择"停止"选项停止MySQL8.0的服务，如图所示。</p>
<p></p>
<h3> 步骤2：软件的卸载</h3>
<p><strong>方式1：通过控制面板方式</strong></p>
<p>卸载MySQL8.0的程序可以和其他桌面应用程序一样直接在"控制面板"选择"卸载程序"
，并在程序列表中找到MySQL8.0服务器程序，直接双击卸载即可，如图所示。这种方式删除，数据目录下的数据不会跟着删除。</p>`,r:{minutes:26.91,words:8073},y:"a",t:"第02章_MySQL环境搭建"},["/mysql/mysql-basic/env","/mysql/mysql-basic/env.md"]],["v-7dae299e","/mysql/mysql-basic/multi-table.html",{d:16702848e5,l:"2022年12月6日",c:"基础",g:["MySQL"],e:`<h1> 第06章_多表查询</h1>
<p>多表查询，也称为关联查询，指两个或更多个表一起完成查询操作。</p>
<p>前提条件：这些一起查询的表之间是有关系的（一对一、一对多），它们之间一定是有关联字段，这个关联字段可能建立了外键，也可能没有建立外键。比如：员工表和部门表，这两个表依靠"
部门编号"进行关联。</p>
<h2> 1. 一个案例引发的多表连接</h2>
<h3> 1.1 案例说明</h3>
<p></p>
<p>从多个表中获取数据：</p>
<p></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#案例：查询员工的姓名及其部门名称</span>
<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> department_name
<span class="token keyword">FROM</span> employees<span class="token punctuation">,</span> departments<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:14.17,words:4251},y:"a",t:"第06章_多表查询"},["/mysql/mysql-basic/multi-table","/mysql/mysql-basic/multi-table.md"]],["v-903ed070","/mysql/mysql-basic/mysql-basic.html",{d:1670112e6,l:"2022年12月4日",c:"基础",g:["MySQL"],e:`<h1> 第01章_数据库概述</h1>
<h2> 1. 为什么要使用数据库</h2>
<ul>
<li>持久化(persistence)：<strong>把数据保存到可掉电式存储设备中以供之后使用</strong>。大多数情况下，特别是企业级应用，
<strong>数据持久化意味着将内存中的数据保存到硬盘上加以"固化"</strong>，而持久化的实现过程大多通过各种关系数据库来完成。</li>
<li>持久化的主要作用是<strong>将内存中的数据存储在关系型数据库中</strong>，当然也可以存储在磁盘文件、XML数据文件中。
</li>
</ul>
<h2> 2. 数据库与数据库管理系统</h2>`,r:{minutes:14.67,words:4401},y:"a",t:"第01章_数据库概述"},["/mysql/mysql-basic/mysql-basic","/mysql/mysql-basic/mysql-basic.md"]],["v-a3c94986","/mysql/mysql-basic/new-features.html",{d:16708896e5,l:"2022年12月13日",c:"基础",g:["MySQL"],e:`<h1> 第18章_MySQL8其它新特性</h1>
<h2> 1. MySQL8新特性概述</h2>
<p><code>MySQL从5.7版本直接跳跃发布了8.0版本</code>，可见这是一个令人兴奋的里程碑版本。MySQL
8版本在功能上做了显著的改进与增强，开发者对MySQL的源代码进行了重构，最突出的一点是多MySQL
Optimizer优化器进行了改进。不仅在速度上得到了改善，还为用户带来了更好的性能和更棒的体验。</p>
<h3> 1.1 MySQL8.0 新增特性</h3>
<p><strong>1. 更简便的NoSQL支持</strong>
NoSQL泛指非关系型数据库和数据存储。随着互联网平台的规模飞速发展，传统的关系型数据库已经越来越不能满足需求。从5.6版本开始，MySQL就开始支持简单的NoSQL存储功能。MySQL
8对这一功能做了优化，以更灵活的方式实现NoSQL功能，不再依赖模式（schema）。</p>`,r:{minutes:31.24,words:9373},y:"a",t:"第18章_MySQL8其它新特性"},["/mysql/mysql-basic/new-features","/mysql/mysql-basic/new-features.md"]],["v-37a1b8ba","/mysql/mysql-basic/operator.html",{d:16702848e5,l:"2022年12月6日",c:"基础",g:["MySQL"],e:`<h1> 第04章_运算符</h1>
<h2> 1. 算术运算符</h2>
<p>算术运算符主要用于数学运算，其可以连接运算符前后的两个数值或表达式，对数值或表达式进行加（+）、减（-）、乘（*）、除（/）和取模（%）运算。</p>
<p></p>
<p><strong>1．加法与减法运算符</strong></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">35.5</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">35.5</span> <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+--------------+------------+------------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">50</span> <span class="token operator">-</span><span class="token number">30</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token number">35.5</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token number">35.5</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+--------------+------------+------------+</span>
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>     <span class="token number">100</span> <span class="token operator">|</span>     <span class="token number">100</span> <span class="token operator">|</span>      <span class="token number">150</span> <span class="token operator">|</span>          <span class="token number">120</span> <span class="token operator">|</span>      <span class="token number">135.5</span> <span class="token operator">|</span>       <span class="token number">64.5</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----+---------+---------+----------+--------------+------------+------------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:19.33,words:5798},y:"a",t:"第04章_运算符"},["/mysql/mysql-basic/operator","/mysql/mysql-basic/operator.md"]],["v-7fdbac1d","/mysql/mysql-basic/order.html",{d:16702848e5,l:"2022年12月6日",c:"基础",g:["MySQL"],e:`<h1> 第05章_排序与分页</h1>
<h2> 1. 排序数据</h2>
<h3> 1.1 排序规则</h3>
<ul>
<li>使用 ORDER BY 子句排序
<ul>
<li><strong>ASC（ascend）: 升序</strong></li>
<li><strong>DESC（descend）:降序</strong></li>
</ul>
</li>
<li><strong>ORDER BY 子句在SELECT语句的结尾。</strong></li>
</ul>
<h3> 1.2 单列排序</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>   last_name<span class="token punctuation">,</span> job_id<span class="token punctuation">,</span> department_id<span class="token punctuation">,</span> hire_date
<span class="token keyword">FROM</span>     employees
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> hire_date <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.04,words:912},y:"a",t:"第05章_排序与分页"},["/mysql/mysql-basic/order","/mysql/mysql-basic/order.md"]],["v-1a6efaf1","/mysql/mysql-basic/polymerization.html",{d:16703712e5,l:"2022年12月7日",c:"基础",g:["MySQL"],e:`<h1> 第08章_聚合函数</h1>
<p>我们上一章讲到了 SQL 单行函数。实际上 SQL 函数还有一类，叫做聚合（或聚集、分组）函数，它是对一组数据进行汇总的函数，输入的是一组数据的集合，输出的是单个值。</p>
<h2> 1. 聚合函数介绍</h2>
<ul>
<li><strong>什么是聚合函数</strong></li>
</ul>
<p>聚合函数作用于一组数据，并对一组数据返回一个值。</p>
<p></p>
<ul>
<li>
<p><strong>聚合函数类型</strong></p>
<ul>
<li><strong>AVG()</strong></li>
<li><strong>SUM()</strong></li>
<li><strong>MAX()</strong></li>
<li><strong>MIN()</strong></li>
<li><strong>COUNT()</strong></li>
</ul>
</li>
<li>
<p>聚合函数语法</p>
</li>
</ul>`,r:{minutes:8.09,words:2427},y:"a",t:"第08章_聚合函数"},["/mysql/mysql-basic/polymerization","/mysql/mysql-basic/polymerization.md"]],["v-4aece2b8","/mysql/mysql-basic/procedure.html",{d:16708032e5,l:"2022年12月12日",c:"基础",g:["MySQL"],e:`<h1> 第15章_存储过程与函数</h1>
<p>MySQL从5.0版本开始支持存储过程和函数。存储过程和函数能够将复杂的SQL逻辑封装在一起，应用程序无须关注存储过程和函数内部复杂的SQL逻辑，而只需要简单地调用存储过程和函数即可。</p>
<h2> 1. 存储过程概述</h2>
<h3> 1.1 理解</h3>
<p><strong>含义</strong>：存储过程的英文是 <code>Stored Procedure</code>。它的思想很简单，就是一组经过<code>预先编译</code>的 SQL 语句的封装。</p>
<p>执行过程：存储过程预先存储在 MySQL 服务器上，需要执行的时候，客户端只需要向服务器端发出调用存储过程的命令，服务器端就可以把预先存储好的这一系列
SQL 语句全部执行。</p>`,r:{minutes:17.88,words:5363},y:"a",t:"第15章_存储过程与函数"},["/mysql/mysql-basic/procedure","/mysql/mysql-basic/procedure.md"]],["v-645471cb","/mysql/mysql-basic/select.html",{d:16702848e5,l:"2022年12月6日",c:"基础",g:["MySQL"],e:`<h1> 第03章_基本的SELECT语句</h1>
<h2> 1. SQL概述</h2>
<h3> 1.1 SQL背景知识</h3>
<ul>
<li>
<p>1946 年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。但在这片浩荡的波动里，有一门技术从未消失，甚至"老当益壮"，那就是
SQL。</p>
<ul>
<li>45 年前，也就是 1974 年，IBM
研究员发布了一篇揭开数据库技术的论文《SEQUEL：一门结构化的英语查询语言》，直到今天这门结构化的查询语言并没有太大的变化，相比于其他语言，<code>SQL 的半衰期可以说是非常长</code>
了。</li>
</ul>
</li>
<li>
<p>不论是前端工程师，还是后端算法工程师，都一定会和数据打交道，都需要了解如何又快又准确地提取自己想要的数据。更别提数据分析师了，他们的工作就是和数据打交道，整理不同的报告，以便指导业务决策。</p>
</li>
<li>
<p>SQL（Structured Query Language，结构化查询语言）是使用关系模型的数据库应用语言，<code>与数据直接打交道</code>，由<code>IBM</code>
上世纪70年代开发出来。后由美国国家标准局（ANSI）开始着手制定SQL标准，先后有<code>SQL-86</code>，<code>SQL-89</code>，<code>SQL-92</code>，<code>SQL-99</code>等标准。</p>
<ul>
<li>SQL 有两个重要的标准，分别是 SQL92 和 SQL99，它们分别代表了 92 年和 99 年颁布的 SQL 标准，我们今天使用的 SQL
语言依然遵循这些标准。</li>
</ul>
</li>
<li>
<p>不同的数据库生产厂商都支持SQL语句，但都有特有内容。</p>
</li>
</ul>`,r:{minutes:9.77,words:2930},y:"a",t:"第03章_基本的SELECT语句"},["/mysql/mysql-basic/select","/mysql/mysql-basic/select.md"]],["v-04028272","/mysql/mysql-basic/single-line.html",{d:16703712e5,l:"2022年12月7日",c:"基础",g:["MySQL"],e:`<h1> 第07章_单行函数</h1>
<h2> 1. 函数的理解</h2>
<h3> 1.1 什么是函数</h3>
<p>函数在计算机语言的使用中贯穿始终，函数的作用是什么呢？它可以把我们经常使用的代码封装起来，需要的时候直接调用即可。这样既<code>提高了代码效率</code>
，又<code>提高了可维护性</code>。在 SQL
中我们也可以使用函数对检索出来的数据进行函数操作。使用这些函数，可以极大地<code>提高用户对数据库的管理效率</code>。</p>
<p></p>
<p>从函数定义的角度出发，我们可以将函数分成<code>内置函数</code>和<code>自定义函数</code>。在 SQL
语言中，同样也包括了内置函数和自定义函数。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写的，本章及下一章讲解的是
SQL 的内置函数。</p>`,r:{minutes:18.93,words:5679},y:"a",t:"第07章_单行函数"},["/mysql/mysql-basic/single-line","/mysql/mysql-basic/single-line.md"]],["v-4051f8e0","/mysql/mysql-basic/sub-query.html",{d:16703712e5,l:"2022年12月7日",c:"基础",g:["MySQL"],e:`<h1> 第09章_子查询</h1>
<p>子查询指一个查询语句嵌套在另一个查询语句内部的查询，这个特性从MySQL 4.1开始引入。</p>
<p>SQL 中子查询的使用大大增强了 SELECT 查询的能力，因为很多时候查询需要从结果集中获取数据，或者需要从同一个表中先计算得出一个数据结果，然后与这个数据结果（可能是某个标量，也可能是某个集合）进行比较。</p>
<h2> 1. 需求分析与问题解决</h2>
<h3> 1.1 实际问题</h3>
<p></p>
<p>现有解决方式：</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#方式一：</span>
<span class="token keyword">SELECT</span> salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> last_name <span class="token operator">=</span> <span class="token string">'Abel'</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>salary
<span class="token keyword">FROM</span> employees
<span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token number">11000</span><span class="token punctuation">;</span>

<span class="token comment">#方式二：自连接</span>
<span class="token keyword">SELECT</span> e2<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>e2<span class="token punctuation">.</span>salary
<span class="token keyword">FROM</span> employees e1<span class="token punctuation">,</span>employees e2
<span class="token keyword">WHERE</span> e1<span class="token punctuation">.</span>last_name <span class="token operator">=</span> <span class="token string">'Abel'</span>
<span class="token operator">AND</span> e1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>salary<span class="token punctuation">\`</span></span> <span class="token operator">&lt;</span> e2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>salary<span class="token punctuation">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.93,words:2379},y:"a",t:"第09章_子查询"},["/mysql/mysql-basic/sub-query","/mysql/mysql-basic/sub-query.md"]],["v-000f2373","/mysql/mysql-basic/trigger.html",{d:16708896e5,l:"2022年12月13日",c:"基础",g:["MySQL"],e:`<h1> 第17章_触发器</h1>
<p>在实际开发中，我们经常会遇到这样的情况：有 2 个或者多个相互关联的表，如<code>商品信息</code>和<code>库存信息</code>分别存放在 2
个不同的数据表中，我们在添加一条新商品记录的时候，为了保证数据的完整性，必须同时在库存表中添加一条库存记录。</p>
<p>这样一来，我们就必须把这两个关联的操作步骤写到程序里面，而且要用<code>事务</code>包裹起来，确保这两个操作成为一个<code>原子操作</code>
，要么全部执行，要么全部不执行。要是遇到特殊情况，可能还需要对数据进行手动维护，这样就很<code>容易忘记其中的一步</code>，导致数据缺失。</p>`,r:{minutes:8.26,words:2477},y:"a",t:"第17章_触发器"},["/mysql/mysql-basic/trigger","/mysql/mysql-basic/trigger.md"]],["v-1b76ee94","/mysql/mysql-basic/variables.html",{d:16708896e5,l:"2022年12月13日",c:"基础",g:["MySQL"],e:`<h1> 第16章_变量、流程控制与游标</h1>
<h2> 1. 变量</h2>
<p>在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终的结果数据。</p>
<p>在 MySQL 数据库中，变量分为<code>系统变量</code>以及<code>用户自定义变量</code>。</p>
<h3> 1.1 系统变量</h3>
<h4> 1.1.1 系统变量分类</h4>
<p>变量由系统定义，不是用户定义，属于<code>服务器</code>
层面。启动MySQL服务，生成MySQL服务实例期间，MySQL将为MySQL服务器内存中的系统变量赋值，这些系统变量定义了当前MySQL服务实例的属性、特征。这些系统变量的值要么是<code>编译MySQL时参数</code>
的默认值，要么是<code>配置文件</code>
（例如my.ini等）中的参数值。大家可以通过网址 <code>https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html</code>
查看MySQL文档的系统变量。</p>`,r:{minutes:26.9,words:8070},y:"a",t:"第16章_变量、流程控制与游标"},["/mysql/mysql-basic/variables","/mysql/mysql-basic/variables.md"]],["v-cbf45d7c","/mysql/mysql-basic/view.html",{d:16708032e5,l:"2022年12月12日",c:"基础",g:["MySQL"],e:`<h1> 第14章_视图</h1>
<h2> 1. 常见的数据库对象</h2>
<table>
<thead>
<tr>
<th>对象</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>表(TABLE)</td>
<td>表是存储数据的逻辑单元，以行和列的形式存在，列就是字段，行就是记录</td>
</tr>
<tr>
<td>数据字典</td>
<td>就是系统表，存放数据库相关信息的表。系统表的数据通常由数据库系统维护，程序员通常不应该修改，只可查看</td>
</tr>
<tr>
<td>约束(CONSTRAINT)</td>
<td>执行数据校验的规则，用于保证数据完整性的规则</td>
</tr>
<tr>
<td>视图(VIEW)</td>
<td>一个或者多个数据表里的数据的逻辑显示，视图并不存储数据</td>
</tr>
<tr>
<td>索引(INDEX)</td>
<td>用于提高查询性能，相当于书的目录</td>
</tr>
<tr>
<td>存储过程(PROCEDURE)</td>
<td>用于完成一次完整的业务处理，没有返回值，但可通过传出参数将多个值传给调用环境</td>
</tr>
<tr>
<td>存储函数(FUNCTION)</td>
<td>用于完成一次特定的计算，具有一个返回值</td>
</tr>
<tr>
<td>触发器(TRIGGER)</td>
<td>相当于一个事件监听器，当数据库发生特定事件后，触发器被触发，完成相应的处理</td>
</tr>
</tbody>
</table>`,r:{minutes:10.58,words:3173},y:"a",t:"第14章_视图"},["/mysql/mysql-basic/view","/mysql/mysql-basic/view.md"]],["v-7872cf98","/note/schema/oss.html",{d:16779744e5,l:"2023年3月5日",c:"笔记",g:["架构相关"],e:`<h1> 阿里云对象存储OSS最佳实践</h1>
<p>本文主要介绍如何基于Post
Policy的使用规则在服务端通过各种语言代码完成签名，然后通过表单直传数据到OSS。由于服务端签名直传无需将AccessKey暴露在前端页面，相比JavaScript客户端签名直传具有更高的安全性。</p>
<h2> 流程和源码解析</h2>
<p></p>
<ol>
<li>
<p>用户向应用服务器请求上传Policy和回调。 将客户端源码中的upload.js文件的以下代码片段的变量serverUrl的值设置为应用服务器的URL。</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// serverUrl是用户获取签名和Policy等信息的应用服务器的URL，请将下面的IP和Port配置为您自己的真实信息。
serverUrl = 'http://88.88.XX.XX:8888'
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置完成后，客户端会向该serverUrl发送Get请求来获取需要的信息。</p>
<p>本场景为服务端签名后直传，不涉及上传回调。因此，您需要注释客户端源码中的upload.js文件内的'callback' :!q@#
callbackbody字段，以关闭上传回调功能。</p>
<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">"key"</span><span class="token operator">:</span> key + <span class="token string">"\${filename}"</span><span class="token punctuation">,</span>
  <span class="token property">"policy"</span><span class="token operator">:</span> policyBase64<span class="token punctuation">,</span>
  <span class="token property">"OSSAccessKeyId"</span><span class="token operator">:</span> accessid<span class="token punctuation">,</span>
  <span class="token comment">// 设置服务端返回200状态码，默认返回204。</span>
  <span class="token property">"success_action_status"</span><span class="token operator">:</span> <span class="token string">"200"</span><span class="token punctuation">,</span>
  <span class="token property">"callback"</span><span class="token operator">:</span> callbackbody<span class="token punctuation">,</span>
  <span class="token property">"signature"</span><span class="token operator">:</span> signature
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>应用服务器返回上传Policy和签名给用户。</p>
<p>应用服务器侧的签名直传服务会处理客户端发送的Get请求消息，您可以设置对应的代码让应用服务器能够给客户端返回正确的消息。</p>
<p>以下是签名直传服务返回给客户端消息Body内容的示例：</p>
<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code> <span class="token punctuation">{</span>
 <span class="token property">"accessid"</span><span class="token operator">:</span><span class="token string">"LTAI5tBDFVar1hoq****"</span><span class="token punctuation">,</span>
 <span class="token property">"host"</span><span class="token operator">:</span><span class="token string">"http://post-test.oss-cn-hangzhou.aliyuncs.com"</span><span class="token punctuation">,</span>
 <span class="token property">"policy"</span><span class="token operator">:</span><span class="token string">"eyJleHBpcmF0aW9uIjoiMjAxNS0xMS0wNVQyMDoyMzoyM1oiLCJjxb25kaXRpb25zIjpbWyJjcb250ZW50LWxlbmd0aC1yYW5nZSIsMCwxMDQ4NTc2MDAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInVzZXItZGlyXC8i****"</span><span class="token punctuation">,</span>
 <span class="token property">"signature"</span><span class="token operator">:</span><span class="token string">"VsxOcOudx******z93CLaXPz+4s="</span><span class="token punctuation">,</span>
 <span class="token property">"expire"</span><span class="token operator">:</span><span class="token number">1446727949</span><span class="token punctuation">,</span>
 <span class="token property">"dir"</span><span class="token operator">:</span><span class="token string">"user-dirs/"</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Body中的各字段说明</strong></p>
<table>
<thead>
<tr>
<th>字段</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>accessid</td>
<td>用户请求的AccessKey ID</td>
</tr>
<tr>
<td>host</td>
<td>用户发送上传请求的域名</td>
</tr>
<tr>
<td>policy</td>
<td>用户表单上传的策略（Policy），Policy为经过Base64编码过的字符串。详情请参见<a href="https://help.aliyun.com/document_detail/31988.htm?spm=a2c4g.11186623.0.0.160743b0wKePxr#section-d5z-1ww-wdb" target="_blank" rel="noopener noreferrer">Post Policy</a></td>
</tr>
<tr>
<td>signature</td>
<td>对Policy签名后的字符串。详情请参见<a href="https://help.aliyun.com/document_detail/31988.htm?spm=a2c4g.11186623.0.0.160743b0wKePxr#section-wny-mww-wdb" target="_blank" rel="noopener noreferrer">Post Signature</a></td>
</tr>
<tr>
<td>expire</td>
<td>由服务器端指定的Policy过期时间，格式为Unix时间戳（自UTC时间1970年01月01号开始的秒数）</td>
</tr>
<tr>
<td>dir</td>
<td>限制上传的文件前缀</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>用户使用Post方法向OSS发送文件上传请求</p>
<div class="hint-container info">
<p class="hint-container-title">说明</p>
<ul>
<li>除file表单域外，包含key在内的其他所有表单域的大小均不能超过8 KB</li>
<li></li>
</ul>
<p>客户端上传默认同名覆盖，如果您不希望覆盖同名文件，可以在上传请求的header中携带参数x-oss-forbid-overwrite，并指定其值为true。当您上传的文件在OSS中存在同名文件时，该文件会上传失败，并返回FileAlreadyExists错误</p>
</div>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>new_multipart_params <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// key表示上传到Bucket内的Object的完整路径，例如exampledir/exampleobject.txtObject，完整路径中不能包含Bucket名称。</span>
  <span class="token comment">// filename表示待上传的本地文件名称。</span>
  <span class="token string-property property">'key'</span> <span class="token operator">:</span> key <span class="token operator">+</span> <span class="token string">'\${filename}'</span><span class="token punctuation">,</span>
  <span class="token string-property property">'policy'</span><span class="token operator">:</span> policyBase64<span class="token punctuation">,</span>
  <span class="token string-property property">'OSSAccessKeyId'</span><span class="token operator">:</span> accessid<span class="token punctuation">,</span>
  <span class="token comment">// 设置服务端返回状态码为200，不设置则默认返回状态码204。</span>
  <span class="token string-property property">'success_action_status'</span> <span class="token operator">:</span> <span class="token string">'200'</span><span class="token punctuation">,</span>    
  <span class="token string-property property">'signature'</span><span class="token operator">:</span> signature<span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>`,r:{minutes:6.27,words:1881},y:"a",t:"阿里云对象存储OSS最佳实践"},["/note/schema/oss","/note/schema/oss.md"]],["v-038b55a7","/other/audition/Github%E5%AD%A6%E4%B9%A0.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> Github学习</h1>
<p>使用Github优秀框架 + 源码 提升自己</p>
<h2> 常用词含义</h2>
<ul>
<li>watch：会持续收到该项目的动态</li>
<li>fork：复制某个仓库到自己的Github仓库中</li>
<li>star：可以理解为点赞</li>
<li>clone：将项目下载至本地</li>
<li>follow：关注你感兴趣的作者，会收到他们的动态</li>
</ul>
<h2> in关键字限制搜索范围</h2>
<ul>
<li>公式：<code>XXX关键字 in:name 或 description 或 readme</code></li>
<li>xxx in:name 项目名称含有XXX的</li>
<li>xxx in:description 项目描述含有XXX的</li>
<li>xxx in:readme 项目的readme文件中包含XXX的</li>
<li>组合使用
<ul>
<li>xxx in:name,readme 项目的名称和readme中包含xxx的</li>
</ul>
</li>
</ul>`,r:{minutes:1.3,words:389},y:"a",t:"Github学习"},["/other/audition/Github学习.html","/other/audition/Github%E5%AD%A6%E4%B9%A0","/other/audition/Github学习.md","/other/audition/Github%E5%AD%A6%E4%B9%A0.md"]],["v-d55d46bc","/other/audition/Linux%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> Linux诊断原因</h1>
<h2> 命令集合</h2>
<h3> 整机：top，查看整机系统新能</h3>
<p></p>
<p>使用top命令的话，重点关注的是 %CPU、%MEM 、load average 三个指标</p>
<ul>
<li>load average三个指标：分别代表1、5、15分钟的负载情况</li>
</ul>
<p>在这个命令下，按1的话，可以看到每个CPU的占用情况</p>
<p>uptime：系统性能命令的精简版</p>
<h3> CPU：vmstat</h3>
<ul>
<li>查看CPU（包含但是不限于）</li>
<li>查看额外
<ul>
<li>查看所有CPU核信息：mpstat -p ALL 2</li>
<li>每个进程使用CPU的用量分解信息：pidstat -u 1 -p 进程编号</li>
</ul>
</li>
</ul>`,r:{minutes:3.62,words:1087},y:"a",t:"Linux诊断原因"},["/other/audition/Linux相关命令.html","/other/audition/Linux%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4","/other/audition/Linux相关命令.md","/other/audition/Linux%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.md"]],["v-d4b45c94","/java/JVM/memory-garbageCollection/%E7%AC%AC1%E7%AB%A0-JVM%E4%B8%8EJava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html",{d:16782336e5,l:"2023年3月8日",c:"JVM",g:["JAVA"],e:`<h1> 第1章-JVM和Java体系架构</h1>
<h2> 前言</h2>
<p>你是否也遇到过这些问题？</p>
<ol>
<li>运行着的线上系统突然卡死，系统无法访问，甚至直接OOM！</li>
<li>想解决线上JVM GC问题，但却无从下手。</li>
<li>新项目上线，对各种JVM参数设置一脸茫然，直接默认吧然后就JJ了。</li>
<li>每次面试之前都要重新背一遍JVM的一些原理概念性的东西，然而面试官却经常问你在实际项目中如何调优VM参数，如何解决GC、OOM等问题，一脸懵逼。</li>
</ol>
<p></p>
<p>大部分Java开发人员，除了会在项目中使用到与Java平台相关的各种高精尖技术，对于Java技术的核心Java虚拟机了解甚少。</p>`,r:{minutes:22.6,words:6781},y:"a",t:"第1章-JVM和Java体系架构"},["/java/JVM/memory-garbageCollection/第1章-JVM与Java体系结构.html","/java/JVM/memory-garbageCollection/%E7%AC%AC1%E7%AB%A0-JVM%E4%B8%8EJava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84","/java/JVM/memory-garbageCollection/第1章-JVM与Java体系结构.md","/java/JVM/memory-garbageCollection/%E7%AC%AC1%E7%AB%A0-JVM%E4%B8%8EJava%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.md"]],["v-73cdf5ae","/java/JVM/memory-garbageCollection/%E7%AC%AC2%E7%AB%A0-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F.html",{d:167832e7,l:"2023年3月9日",c:"JVM",g:["JAVA"],e:`<h1> 第2章-类加载子系统</h1>
<h2> 内存结构概述</h2>
<h3> 简图</h3>
<p></p>
<h3> 详细图</h3>
<p></p>
<div class="hint-container tip">
<p class="hint-container-title">注意</p>
<p>方法区只有HotSpot虚拟机有，J9，JRockit都没有</p>
</div>
<p>如果自己想手写一个Java虚拟机的话，主要考虑哪些结构呢？</p>
<ol>
<li>类加载器</li>
<li>执行引擎</li>
</ol>
<h2> 类加载器子系统</h2>
<p><strong>类加载器子系统作用：</strong></p>`,r:{minutes:18.62,words:5587},y:"a",t:"第2章-类加载子系统"},["/java/JVM/memory-garbageCollection/第2章-类加载子系统.html","/java/JVM/memory-garbageCollection/%E7%AC%AC2%E7%AB%A0-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F","/java/JVM/memory-garbageCollection/第2章-类加载子系统.md","/java/JVM/memory-garbageCollection/%E7%AC%AC2%E7%AB%A0-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%AD%90%E7%B3%BB%E7%BB%9F.md"]],["v-4a0adab0","/java/JVM/memory-garbageCollection/%E7%AC%AC3%E7%AB%A0-%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.html",{d:16786656e5,l:"2023年3月13日",c:"JVM",g:["JAVA"],e:`<blockquote>
<p>此章把运行时数据区里比较少的地方讲一下。虚拟机栈，堆，方法区这些地方后续再讲。</p>
</blockquote>
<h1> 第3章-运行时数据区概述及线程</h1>
<h2> 前言</h2>
<p>本节主要讲的是运行时数据区，也就是下图这部分，它是在类加载完成后的阶段</p>
<p></p>
<p>当我们通过前面的：类的加载 --&gt; 验证 --&gt; 准备 --&gt; 解析 --&gt; 初始化，这几个阶段完成后，就会用到执行引擎对我们的类进行使用，同时执行引擎将会使用到我们运行时数据区</p>
<p></p>
<p>内存是非常重要的系统资源，是硬盘和CPU的中间仓库及桥梁，承载着操作系统和应用程序的实时运行JVM内存布局规定了Java在运行过程中内存申请、分配、管理的策略，保证了JVM的高效稳定运行。不同的JVM对于内存的划分方式和管理机制存在着部分差异。结合JVM虚拟机规范，来探讨一下经典的JVM内存布局。</p>`,r:{minutes:13.89,words:4167},y:"a",t:"第3章-运行时数据区概述及线程"},["/java/JVM/memory-garbageCollection/第3章-运行时数据区.html","/java/JVM/memory-garbageCollection/%E7%AC%AC3%E7%AB%A0-%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA","/java/JVM/memory-garbageCollection/第3章-运行时数据区.md","/java/JVM/memory-garbageCollection/%E7%AC%AC3%E7%AB%A0-%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.md"]],["v-ba5bb3ce","/java/JVM/memory-garbageCollection/%E7%AC%AC4%E7%AB%A0-%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.html",{d:16789248e5,l:"2023年3月16日",c:"JVM",g:["JAVA"],e:`<h1> 第4章-虚拟机栈</h1>
<h2> 简介</h2>
<h3> 虚拟机栈的出现背景</h3>
<ol>
<li>由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的【如果设计成基于寄存器的，耦合度高，性能会有所提升，因为可以对具体的CPU架构进行优化，但是跨平台性大大降低】。</li>
<li>优点是跨平台，指令集小，编译器容易实现，缺点是性能下降，实现同样的功能需要更多的指令。</li>
</ol>
<h3> 内存中的栈与堆</h3>
<ol>
<li>首先栈是运行时的单位，而堆是存储的单位。</li>
<li>即：栈解决程序的运行问题，即程序如何执行，或者说如何处理数据。堆解决的是数据存储的问题，即数据怎么放，放哪里</li>
</ol>`,r:{minutes:33.86,words:10158},y:"a",t:"第4章-虚拟机栈"},["/java/JVM/memory-garbageCollection/第4章-虚拟机栈.html","/java/JVM/memory-garbageCollection/%E7%AC%AC4%E7%AB%A0-%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88","/java/JVM/memory-garbageCollection/第4章-虚拟机栈.md","/java/JVM/memory-garbageCollection/%E7%AC%AC4%E7%AB%A0-%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88.md"]],["v-c96633fe","/java/JVM/memory-garbageCollection/%E7%AC%AC5%E7%AB%A0-%E5%A0%86.html",{d:16793568e5,l:"2023年3月21日",c:"JVM",g:["JAVA"],e:`<h1> 第5章-堆</h1>
<h2> 堆的核心概述</h2>
<h3> 堆与进程</h3>
<ol>
<li>堆针对一个JVM进程来说是唯一的。也就是<strong>一个进程只有一个JVM实例</strong>，一个JVM实例中就有一个运行时数据区，一个运行时数据区只有一个堆和一个方法区。</li>
<li>但是<strong>进程包含多个线程，他们是共享同一堆空间的</strong>。</li>
</ol>
<p></p>
<ol>
<li>
<p>一个JVM实例只存在一个堆内存，堆也是Java内存管理的核心区域。</p>
</li>
<li>
<p>Java堆区在JVM启动的时候即被创建，其空间大小也就确定了，堆是JVM管理的最大一块内存空间，并且堆内存的大小是可以调节的。</p>
</li>
<li>
<p>《Java虚拟机规范》规定，堆可以处于物理上不连续的内存空间中，但在逻辑上它应该被视为连续的。</p>
</li>
<li>
<p>所有的线程共享Java堆，在这里还可以划分线程私有的缓冲区（Thread Local Allocation Buffer，<strong>TLAB</strong>）。</p>
</li>
<li>
<p>《Java虚拟机规范》中对Java堆的描述是：<strong>所有的对象实例以及数组都应当在运行时分配在堆上</strong>。（The heap is the run-time data area from which memory for all class instances and arrays is allocated）</p>
<ul>
<li>从实际使用角度看：“几乎”所有的对象实例都在堆分配内存，但并非全部。因为还有一些对象是在栈上分配的（逃逸分析，标量替换）</li>
</ul>
</li>
<li>
<p>数组和对象可能永远不会存储在栈上（<strong>不一定</strong>），因为栈帧中保存引用，这个引用指向对象或者数组在堆中的位置。</p>
</li>
<li>
<p>在方法结束后，堆中的对象不会马上被移除，仅仅在垃圾收集的时候才会被移除。</p>
<ul>
<li>也就是触发了GC的时候，才会进行回收</li>
<li>如果堆中对象马上被回收，那么用户线程就会收到影响，因为有stop the word</li>
</ul>
</li>
<li>
<p>堆，是GC（Garbage Collection，垃圾收集器）执行垃圾回收的重点区域。</p>
</li>
</ol>`,r:{minutes:33.52,words:10056},y:"a",t:"第5章-堆"},["/java/JVM/memory-garbageCollection/第5章-堆.html","/java/JVM/memory-garbageCollection/%E7%AC%AC5%E7%AB%A0-%E5%A0%86","/java/JVM/memory-garbageCollection/第5章-堆.md","/java/JVM/memory-garbageCollection/%E7%AC%AC5%E7%AB%A0-%E5%A0%86.md"]],["v-3c334100","/java/java-advanced/IOStream/IO.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> IO流概述</h1>
<h2> 流的分类</h2>
<ol>
<li>操作数据单位：<code>字节流</code>、<code>字符流</code></li>
<li>数据的流向：<code>输入流</code>、<code>输出流</code></li>
<li>流的角色：<code>节点流</code>、<code>处理流</code></li>
</ol>
<p>图示：</p>
<p></p>
<h2> 流的体系结构</h2>
<p></p>
<div class="hint-container info">
<p class="hint-container-title">说明</p>
<p>红框对应的是IO流中的4个抽象基类。</p>
<p>蓝框的流需要大家重点关注。</p>
</div>`,r:{minutes:1.07,words:321},y:"a",t:"IO流概述"},["/java/java-advanced/IOStream/IO","/java/java-advanced/IOStream/IO.md"]],["v-2d4b817a","/java/java-advanced/IOStream/RandomAccessFile.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> RandomAccessFile的使用</h1>
<h2> 使用说明</h2>
<ol>
<li><code>RandomAccessFile</code>直接继承于java.lang.Object类，实现了DataInput和DataOutput接口</li>
<li><code>RandomAccessFile</code>既可以作为一个输入流，又可以作为一个输出流</li>
<li>如果RandomAccessFile作为输出流时，写出到的文件如果不存在，则在执行过程中自动创建。如果写出到的文件存在，则会对原文件内容进行覆盖。（默认情况下，从头覆盖）</li>
<li>可以通过相关的操作，实现RandomAccessFile"插入"数据的效果。<code>seek(int pos)</code></li>
</ol>`,r:{minutes:1.18,words:355},y:"a",t:"RandomAccessFile的使用"},["/java/java-advanced/IOStream/RandomAccessFile","/java/java-advanced/IOStream/RandomAccessFile.md"]],["v-2a128727","/java/java-advanced/IOStream/buffered.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 缓冲流的使用</h1>
<h2> 缓冲流涉及到的类</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BufferedInputStream</span>
<span class="token class-name">BufferedOutputStream</span>
<span class="token class-name">BufferedReader</span>
<span class="token class-name">BufferedWriter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.48,words:443},y:"a",t:"缓冲流的使用"},["/java/java-advanced/IOStream/buffered","/java/java-advanced/IOStream/buffered.md"]],["v-27d32cce","/java/java-advanced/IOStream/convert.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 转换流的使用</h1>
<h2> 转换流涉及到的类</h2>
<p>属于字符流</p>
<ol>
<li>
<p><code>InputStreamReader</code>：将一个字节的输入流转换为字符的输入流</p>
<ul>
<li>解码：字节、字节数组 ---&gt; 字符数组、字符串</li>
</ul>
</li>
<li>
<p><code>OutputStreamWriter</code>：将一个字符的输出流转换为字节的输出流</p>
<ul>
<li>编码：字符数组、字符串 ---&gt; 字节、字节数组</li>
</ul>
</li>
</ol>
<div class="hint-container info">
<p class="hint-container-title">说明</p>
<p>编码决定了解码的方式</p>
</div>`,r:{minutes:1.96,words:588},y:"a",t:"转换流的使用"},["/java/java-advanced/IOStream/convert","/java/java-advanced/IOStream/convert.md"]],["v-f1e47790","/java/java-advanced/IOStream/file-reader.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 节点流（或文件流）</h1>
<h2> FileReader/FileWriter的使用</h2>
<h3> FileReader的使用</h3>
<p>将day09下的hello.txt文件内容读入程序中，并输出到控制台</p>
<div class="hint-container info">
<p class="hint-container-title">说明点</p>
<ol>
<li><code>read()</code>的理解：返回读入的一个字符。如果达到文件末尾，返回-1</li>
<li>异常的处理：为了保证流资源一定可以执行关闭操作。需要使用<code>try-catch-finally</code>处理</li>
<li>读入的文件一定要存在，否则就会报<code>FileNotFoundException</code>。</li>
</ol>
</div>`,r:{minutes:3.42,words:1027},y:"a",t:"节点流（或文件流）"},["/java/java-advanced/IOStream/file-reader","/java/java-advanced/IOStream/file-reader.md"]],["v-1bcd6b2a","/java/java-advanced/IOStream/file.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> File类的使用</h1>
<h2> File类的理解</h2>
<ol>
<li>File类的一个对象，代表一个文件或一个文件目录(俗称：文件夹)</li>
<li>File类声明在<code>java.io</code>包下</li>
<li>File类中涉及到关于文件或文件目录的创建、删除、重命名、修改时间、文件大小等方法，
并未涉及到写入或读取文件内容的操作。如果需要读取或写入文件内容，必须使用IO流来完成。</li>
<li>后续File类的对象常会作为参数传递到流的构造器中，指明读取或写入的"终点".</li>
</ol>
<h2> File的实例化</h2>
<h3> 常用构造器</h3>`,r:{minutes:1.18,words:354},y:"a",t:"File类的使用"},["/java/java-advanced/IOStream/file","/java/java-advanced/IOStream/file.md"]],["v-7032fff2","/java/java-advanced/IOStream/object.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 对象流的使用</h1>
<h2> 对象流</h2>
<p><code>ObjectInputStream</code> 和 <code>ObjectOutputStream</code></p>
<h2> 作用</h2>
<p><code>ObjectOutputStream</code>: 内存中的对象---&gt;存储中的文件、通过网络传输出去：序列化过程</p>
<p><code>ObjectInputStream</code>: 存储中的文件、通过网络接收过来 ---&gt;内存中的对象：反序列化过程</p>
<h2> 对象的序列化机制</h2>
<p>对象序列化机制允许把内存中的Java对象转换成平台无关的二进制流，从而允许把这种二进制流持久地保存在磁盘上，或通过网络将这种二进制流传输到另一个网络节点。</p>`,r:{minutes:1.42,words:426},y:"a",t:"对象流的使用"},["/java/java-advanced/IOStream/object","/java/java-advanced/IOStream/object.md"]],["v-24b3e31c","/java/java-advanced/IOStream/other.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 其它的流的使用</h1>
<h2> 标准的输入输出流</h2>
<p><code>System.in</code>:标准的输入流，默认从键盘输入</p>
<p><code>System.out</code>:标准的输出流，默认从控制台输出</p>
<p>修改默认的输入和输出行为：</p>
<p>System类的<code>setIn(InputStream is)</code> / <code>setOut(PrintStream ps)</code>方式重新指定输入和输出的流。</p>
<h2> 打印流：</h2>
<p><code>PrintStream</code> 和 <code>PrintWriter</code></p>`,r:{minutes:1.19,words:358},y:"a",t:"其它的流的使用"},["/java/java-advanced/IOStream/other","/java/java-advanced/IOStream/other.md"]],["v-53c0be21","/java/java-advanced/IOStream/path.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> Path、Paths、Files的使用</h1>
<h2> NIO的使用说明</h2>
<ul>
<li>Java NIO (New IO，Non-Blocking IO)是从Java 1.4版本开始引入的一套新的IO API，可以替代标准的Java IO AP。</li>
<li>NIO与原来的IO同样的作用和目的，但是使用的方式完全不同，NIO支持面向缓冲区的(IO是面向流的)、基于 通道的IO操作。</li>
<li>NIO将以更加高效的方式进行文件的读写操作。</li>
<li>随着 JDK 7 的发布，Java对NIO进行了极大的扩展，增强了对文件处理和文件系统特性的支持，以至于我们称他们为 NIO.2。</li>
</ul>`,r:{minutes:.75,words:226},y:"a",t:"Path、Paths、Files的使用"},["/java/java-advanced/IOStream/path","/java/java-advanced/IOStream/path.md"]],["v-536ec9a8","/java/java-advanced/collection/array-collection.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> 数组与集合</h1>
<h2> 集合与数组存储数据概述</h2>
<p><code>集合</code>、<code>数组</code>都是对多个数据进行存储操作的结构，简称<code>Java容器</code>。</p>
<div class="hint-container info">
<p class="hint-container-title">说明</p>
<p>此时的存储，主要指的是内存层面的存储，不涉及到持久化的存储（.txt,.jpg,.avi，数据库中)</p>
</div>
<h2> 数组存储的特点</h2>
<ol>
<li>一旦初始化以后，其长度就确定了。</li>
<li>数组一旦定义好，其元素的类型也就确定了。我们也就只能操作指定类型的数据了。
<ul>
<li>比如：<code>String[] arr</code>; <code>int[] arr1</code>; <code>Object[] arr2</code>;</li>
</ul>
</li>
</ol>`,r:{minutes:.97,words:292},y:"a",t:"数组与集合"},["/java/java-advanced/collection/array-collection","/java/java-advanced/collection/array-collection.md"]],["v-87a74b40","/java/java-advanced/collection/collection.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Collection接口</h1>
<h2> 单列集合框架结构</h2>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|----Collection接口：单列集合，用来存储一个一个的对象
	|----List接口：存储序的、可重复的数据。  --&gt;"动态"数组
		|----ArrayList、LinkedList、Vector
	|----Set接口：存储无序的、不可重复的数据   --&gt;高中讲的"集合"
		|----HashSet、LinkedHashSet、TreeSet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.8,words:240},y:"a",t:"Collection接口"},["/java/java-advanced/collection/collection","/java/java-advanced/collection/collection.md"]],["v-3be6a79f","/java/java-advanced/collection/collections.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Collections工具类的使用</h1>
<h2> 作用</h2>
<p>操作Collection和Map的工具类</p>
<h2> 常用方法</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>：反转 <span class="token class-name">List</span> 中元素的顺序
<span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>：对 <span class="token class-name">List</span> 集合元素进行随机排序
<span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>：根据元素的自然顺序对指定 <span class="token class-name">List</span> 集合元素升序排序
<span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">List</span>，<span class="token class-name">Comparator</span><span class="token punctuation">)</span>：根据指定的 <span class="token class-name">Comparator</span> 产生的顺序对 <span class="token class-name">List</span> 集合元素进行排序
<span class="token function">swap</span><span class="token punctuation">(</span><span class="token class-name">List</span>，<span class="token keyword">int</span>， <span class="token keyword">int</span><span class="token punctuation">)</span>：将指定 list 集合中的 i 处元素和 j 处元素进行交换
<span class="token class-name">Object</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token punctuation">)</span>：根据元素的自然顺序，返回给定集合中的最大元素
<span class="token class-name">Object</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Collection</span>，<span class="token class-name">Comparator</span><span class="token punctuation">)</span>：根据 <span class="token class-name">Comparator</span> 指定的顺序，返回给定集合中的最大元素
<span class="token class-name">Object</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token punctuation">)</span>
<span class="token class-name">Object</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Collection</span>，<span class="token class-name">Comparator</span><span class="token punctuation">)</span>
<span class="token keyword">int</span> <span class="token function">frequency</span><span class="token punctuation">(</span><span class="token class-name">Collection</span>，<span class="token class-name">Object</span><span class="token punctuation">)</span>：返回指定集合中指定元素的出现次数
<span class="token keyword">void</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">List</span> dest<span class="token punctuation">,</span><span class="token class-name">List</span> src<span class="token punctuation">)</span>：将src中的内容复制到dest中
<span class="token keyword">boolean</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token class-name">List</span> list，<span class="token class-name">Object</span> oldVal，<span class="token class-name">Object</span> newVal<span class="token punctuation">)</span>：使用新值替换 <span class="token class-name">List</span> 对象的所旧值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.97,words:292},y:"a",t:"Collections工具类的使用"},["/java/java-advanced/collection/collections","/java/java-advanced/collection/collections.md"]],["v-9d865aa4","/java/java-advanced/collection/data-structure.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> 数据结构简述</h1>
<h2> 数据结构概述</h2>
<p>数据结构（Data
Structure是一门和计算机硬件与软件都密切相关的学科，它的研究重点是在计算机的程序设计领域中探讨如何在计算机中组织和存储数据并进行高效率的运用，<mark>涉及的内容包含：数据的逻辑关系、数据的存储结构、排序算法（Algorithm）、查找（或搜索）等。</mark></p>
<h2> 数据结构与算法的理解</h2>
<p><mark>程序能否快速而高效地完成预定的任务，取决于是否选对了数据结构，而程序是否能清楚而正确地把问题解决，则取决于算法。</mark></p>
<p>所以大家认为："<mark>Algorithms + Data Structures = Programs</mark>"（出自：Pascal之父Nicklaus Wirth）</p>`,r:{minutes:1.2,words:360},y:"a",t:"数据结构简述"},["/java/java-advanced/collection/data-structure","/java/java-advanced/collection/data-structure.md"]],["v-39d5b7d0","/java/java-advanced/collection/iterator.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Iterator接口与foreach循环</h1>
<h2> 遍历Collection的两种方式</h2>
<ol>
<li>使用迭代器Iterator</li>
<li>foreach循环（或增强for循环）</li>
</ol>
<h2> Iterator</h2>
<p>java.utils包下定义的迭代器接口</p>
<h3> 说明</h3>
<ol>
<li>Iterator对象称为迭代器(设计模式的一种)，主要用于遍历 <code>Collection</code> 集合中的元素。</li>
<li>GOF给迭代器模式的定义为：<em>提供一种方法访问一个容器(container)
对象中各个元素，而又不需暴露该对象的内部细节。迭代器模式，就是为容器而生</em>。</li>
</ol>`,r:{minutes:1.6,words:481},y:"a",t:"Iterator接口与foreach循环"},["/java/java-advanced/collection/iterator","/java/java-advanced/collection/iterator.md"]],["v-5531c820","/java/java-advanced/collection/list.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Collection子接口：List接口</h1>
<h2> 存储的数据特点</h2>
<p>存储序的、可重复的数据。</p>
<h2> 常用方法💡</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>增：<span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span>
删：<span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span>
改：<span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Object</span> ele<span class="token punctuation">)</span>
查：<span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span>
插：<span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Object</span> ele<span class="token punctuation">)</span>
长度：<span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
遍历：
① <span class="token class-name">Iterator</span>迭代器方式
② 增强<span class="token keyword">for</span>循环
③ 普通的循环
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.23,words:668},y:"a",t:"Collection子接口：List接口"},["/java/java-advanced/collection/list","/java/java-advanced/collection/list.md"]],["v-2e2d5738","/java/java-advanced/collection/map.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Map接口</h1>
<h2> 常用实现类结构</h2>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|----Map:双列数据，存储key-value对的数据   ---类似于高中的函数：y = f(x)
	|----HashMap:作为Map的主要实现类；线程不安全的，效率高；存储null的key和value
		|----LinkedHashMap:保证在遍历map元素时，可以照添加的顺序实现遍历。
			原因：在原的HashMap底层结构基础上，添加了一对指针，指向前一个和后一个元素。
			对于频繁的遍历操作，此类执行效率高于HashMap。
	|----TreeMap:保证照添加的key-value对进行排序，实现排序遍历。此时考虑key的自然排序或定制排序
			底层使用红黑树
	|----Hashtable:作为古老的实现类；线程安全的，效率低；不能存储null的key和value
		|----Properties:常用来处理配置文件。key和value都是String类型
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.07,words:1222},y:"a",t:"Map接口"},["/java/java-advanced/collection/map","/java/java-advanced/collection/map.md"]],["v-77e0b3f2","/java/java-advanced/collection/set.html",{d:16698528e5,l:"2022年12月1日",c:"基础进阶",g:["JAVA"],e:`<h1> Collection子接口：Set接口</h1>
<h2> 存储的数据特点</h2>
<p>无序的、不可重复的元素</p>
<p>具体的:以HashSet为例说明</p>
<ol>
<li>无序性：不等于随机性。存储的数据在底层数组中并非照数组索引的顺序添加，而是根据数据的哈希值决定的。</li>
<li>不可重复性：保证添加的元素照equals()判断时，不能返回true.即：相同的元素只能添加一个。</li>
</ol>
<h2> 元素添加过程</h2>
<p>以HashSet为例</p>
<ol>
<li>我们向HashSet中添加元素a,首先调用元素a所在类的hashCode()方法，计算元素a的哈希值，</li>
<li>此哈希值接着通过某种算法计算出在HashSet底层数组中的存放位置（即为：索引位置，判断</li>
<li>数组此位置上是否已经元素：
<ul>
<li>如果此位置上没其他元素，则元素a添加成功。 ---&gt;情况1</li>
<li>如果此位置上其他元素b(或以链表形式存在的多个元素，则比较元素a与元素b的hash值：
<ul>
<li>如果hash值不相同，则元素a添加成功。---&gt;情况2</li>
<li>如果hash值相同，进而需要调用元素a所在类的equals()方法：
<ul>
<li>equals()返回true,元素a添加失败</li>
<li>equals()返回false,则元素a添加成功。---&gt;情况2</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>`,r:{minutes:3.56,words:1067},y:"a",t:"Collection子接口：Set接口"},["/java/java-advanced/collection/set","/java/java-advanced/collection/set.md"]],["v-3470dfde","/java/java-advanced/common-utils/String.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> java.lang.String类的使用</h1>
<h2> 概述</h2>
<p><code>String</code>: 字符串，使用一对<code>""</code>引起来表示。</p>
<ol>
<li>String声明为final的，不可被继承</li>
<li>String实现了Serializable接口：表示字符串是支持序列化的。
实现了Comparable接口：表示String可以比较大小</li>
<li>String内部定义了<code>final char[] value</code>用于存储字符串数据</li>
<li>通过字面量的方式（区别于new给一个字符串赋值，此时的字符串值声明在字符串常量池中)。</li>
<li>字符串常量池中是不会存储相同内容(使用String类的equals()比较，返回true)的字符串的。</li>
</ol>`,r:{minutes:7.44,words:2231},y:"a",t:"String类"},["/java/java-advanced/common-utils/String","/java/java-advanced/common-utils/String.md"]],["v-6b47986a","/java/java-advanced/common-utils/StringBufferAndStringBuilder.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> StringBuffer、StringBuilder</h1>
<h2> String、StringBuffer、StringBuilder三者的对比</h2>
<p><code>String</code>:不可变的字符序列；底层使用char[]存储</p>
<p><code>StringBuffer</code>:可变的字符序列；线程安全的，效率低；底层使用char[]存储</p>
<p><code>StringBuilder</code>:可变的字符序列；jdk5.0新增的，线程不安全的，效率高；底层使用char[]存储</p>
<h2> StringBuffer与StringBuilder的内存解析</h2>`,r:{minutes:1.12,words:336},y:"a",t:"StringBuffer、StringBuilder"},["/java/java-advanced/common-utils/StringBufferAndStringBuilder","/java/java-advanced/common-utils/StringBufferAndStringBuilder.md"]],["v-3549794e","/java/java-advanced/common-utils/comparator.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> Java比较器</h1>
<h2> 使用背景</h2>
<p>Java中的对象，正常情况下，只能进行比较：<code>==</code>  或  <code>!=</code> 。不能使用 <code>&gt;</code> 或 <code>&lt;</code> 的</p>
<p>但是在开发场景中，我们需要对多个对象进行排序，言外之意，就需要比较对象的大小。</p>
<p>如何实现？使用两个接口中的任何一个：<code>Comparable</code> 或 <code>Comparator</code></p>
<h2> 自然排序</h2>
<p>使用Comparable接口</p>`,r:{minutes:2.27,words:682},y:"a",t:"Java比较器"},["/java/java-advanced/common-utils/comparator","/java/java-advanced/common-utils/comparator.md"]],["v-ae0fdffe","/java/java-advanced/common-utils/date.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> JDK 8之前日期时间API</h1>
<h2> 获取系统当前时间</h2>
<p>System类中的<code>currentTimeMillis()</code></p>
<blockquote>
<p>返回当前时间与1970年1月1日0时0分0秒之间以毫秒为单位的时间差。称为时间戳</p>
</blockquote>
<h2> java.util.Date类与java.sql.Date类</h2>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java.util.Date类
	|---java.sql.Date类
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.82,words:547},y:"a",t:"JDK 8之前日期时间API"},["/java/java-advanced/common-utils/date","/java/java-advanced/common-utils/date.md"]],["v-eeea671a","/java/java-advanced/common-utils/other.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> 其他类</h1>
<h2> System类</h2>
<p>System类代表系统，系统级的很多属性和控制方法都放置在该类的内部。该类位于<code>java.lang</code>包。</p>
<p>由于该类的构造器是<code>private</code>的，所以无法创建该类的对象，也就是无法实例化该类。其内部的成员变量和成员方法都是static的，所以也可以很方便的进行调用。</p>
<p>方法：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">native</span> <span class="token keyword">long</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name">String</span> <span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:208},y:"a",t:"其他类"},["/java/java-advanced/common-utils/other","/java/java-advanced/common-utils/other.md"]],["v-8c066f7c","/java/java-advanced/common-utils/time.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> JDK8中新日期时间API</h1>
<h2> 日期时间API的迭代</h2>
<ol>
<li>第一代：jdk 1.0 Date类</li>
<li>第二代：jdk 1.1 Calendar类，一定程度上替换Date类</li>
<li>第三代：jdk 1.8 提出了新的一套API</li>
</ol>
<h2> 前两代存在的问题举例</h2>
<ol>
<li>可变性：像日期和时间这样的类应该是不可变的。</li>
<li>偏移性：Date中的年份是从1900开始的，而月份都从0开始。</li>
<li>格式化：格式化只对Date用，Calendar则不行。</li>
</ol>`,r:{minutes:2.9,words:870},y:"a",t:"JDK8中新日期时间API"},["/java/java-advanced/common-utils/time","/java/java-advanced/common-utils/time.md"]],["v-c50f2d5c","/java/java-advanced/enum/annotation.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> 注解的使用</h1>
<h2> 注解的理解</h2>
<ol>
<li>jdk 5.0 新增的功能</li>
<li>Annotation 其实就是代码里的特殊标记, 这些标记可以在编译, 类加载, 运行时被读取, 并执行相应的处理。通过使用
Annotation,程序员可以在不改变原逻辑的情况下, 在源文件中嵌入一些补充信息。</li>
<li>在JavaSE中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在JavaEE/Android中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替JavaEE旧版中所遗留的繁冗代码和XML配置等。</li>
</ol>
`,r:{minutes:2.42,words:725},y:"a",t:"注解的使用"},["/java/java-advanced/enum/annotation","/java/java-advanced/enum/annotation.md"]],["v-60b668c0","/java/java-advanced/enum/enum.html",{d:166968e7,l:"2022年11月29日",c:"基础进阶",g:["JAVA"],e:`<h1> 枚举类的使用</h1>
<h2> 枚举类的说明</h2>
<ol>
<li>枚举类的理解：类的对象只有有限个，确定的。我们称此类为枚举类</li>
<li>当需要定义一组常量时，强烈建议使用枚举类</li>
<li>如果枚举类中只一个对象，则可以作为单例模式的实现方式。</li>
</ol>
<h2> 如何自定义枚举类❓</h2>
<p>步骤：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//自定义枚举类</span>
<span class="token keyword">class</span> <span class="token class-name">Season</span><span class="token punctuation">{</span>
   <span class="token comment">// 1.声明Season对象的属性:private final修饰</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> seasonName<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> seasonDesc<span class="token punctuation">;</span>
   
   <span class="token comment">// 2.私化类的构造器,并给对象属性赋值</span>
   <span class="token keyword">private</span> <span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token class-name">String</span> seasonName<span class="token punctuation">,</span><span class="token class-name">String</span> seasonDesc<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>seasonName <span class="token operator">=</span> seasonName<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>seasonDesc <span class="token operator">=</span> seasonDesc<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   
   <span class="token comment">// 3.提供当前枚举类的多个对象：public static final的</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Season</span> <span class="token constant">SPRING</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"春天"</span><span class="token punctuation">,</span><span class="token string">"春暖花开"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Season</span> <span class="token constant">SUMMER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"夏天"</span><span class="token punctuation">,</span><span class="token string">"夏日炎炎"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Season</span> <span class="token constant">AUTUMN</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"秋天"</span><span class="token punctuation">,</span><span class="token string">"秋高气爽"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Season</span> <span class="token constant">WINTER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Season</span><span class="token punctuation">(</span><span class="token string">"冬天"</span><span class="token punctuation">,</span><span class="token string">"冰天雪地"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   
   <span class="token comment">// 4.其他诉求1：获取枚举类对象的属性</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSeasonName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> seasonName<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSeasonDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> seasonDesc<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// 4.其他诉求1：提供toString()</span>
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">"Season{"</span> <span class="token operator">+</span>
      <span class="token string">"seasonName='"</span> <span class="token operator">+</span> seasonName <span class="token operator">+</span> <span class="token char">'\\''</span> <span class="token operator">+</span>
      <span class="token string">", seasonDesc='"</span> <span class="token operator">+</span> seasonDesc <span class="token operator">+</span> <span class="token char">'\\''</span> <span class="token operator">+</span>
      <span class="token char">'}'</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.26,words:678},y:"a",t:"枚举类的使用"},["/java/java-advanced/enum/enum","/java/java-advanced/enum/enum.md"]],["v-a75094a6","/java/java-advanced/generic/collection.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 泛型在集合中的使用</h1>
<h2> 在集合中使用泛型</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">ArrayList</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// 需求：存放学生的成绩</span>
   list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">76</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// 问题一：类型不安全</span>
   <span class="token comment">// list.add("Tom");</span>
   
   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Object</span> score <span class="token operator">:</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// 问题二：强转时，可能出现ClassCastException</span>
      <span class="token keyword">int</span> stuScore <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> score<span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stuScore<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.55,words:466},y:"a",t:"泛型在集合中的使用"},["/java/java-advanced/generic/collection","/java/java-advanced/generic/collection.md"]],["v-3ff70dba","/java/java-advanced/generic/custom.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 自定义泛型类、泛型接口、泛型方法</h1>
<h2> Order.java</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
	<span class="token class-name">String</span> orderName<span class="token punctuation">;</span>
	<span class="token keyword">int</span> orderId<span class="token punctuation">;</span>
	
	<span class="token comment">// 类的内部结构就可以使用类的泛型</span>
	
	<span class="token class-name">T</span> orderT<span class="token punctuation">;</span>
	
	<span class="token keyword">public</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// 编译不通过</span>
		<span class="token comment">// T[] arr = new T[10];</span>
		<span class="token comment">// 编译通过</span>
		<span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderName<span class="token punctuation">,</span><span class="token keyword">int</span> orderId<span class="token punctuation">,</span><span class="token class-name">T</span> orderT<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>orderName <span class="token operator">=</span> orderName<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>orderId <span class="token operator">=</span> orderId<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>orderT <span class="token operator">=</span> orderT<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">// 如下的个方法都不是泛型方法</span>
	<span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">getOrderT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">return</span> orderT<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOrderT</span><span class="token punctuation">(</span><span class="token class-name">T</span> orderT<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>orderT <span class="token operator">=</span> orderT<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">"Order{"</span> <span class="token operator">+</span>
		<span class="token string">"orderName='"</span> <span class="token operator">+</span> orderName <span class="token operator">+</span> <span class="token char">'\\''</span> <span class="token operator">+</span>
		<span class="token string">", orderId="</span> <span class="token operator">+</span> orderId <span class="token operator">+</span>
		<span class="token string">", orderT="</span> <span class="token operator">+</span> orderT <span class="token operator">+</span>
		<span class="token char">'}'</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// 静态方法中不能使用类的泛型。</span>
	<span class="token comment">// public static void show(T orderT){</span>
	<span class="token comment">//      System.out.println(orderT);</span>
	<span class="token comment">// }</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// 编译不通过</span>
		<span class="token comment">// try{</span>
		<span class="token comment">// }catch(T t){</span>
		<span class="token comment">// }</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">// 泛型方法：在方法中出现了泛型的结构，泛型参数与类的泛型参数没任何关系。</span>
	<span class="token comment">// 换句话说，泛型方法所属的类是不是泛型类都没关系。</span>
	<span class="token comment">// 泛型方法，可以声明为静态的。原因：泛型参数是在调用方法时确定的。并非在实例化类时确定。</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">copyFromArrayToList</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
	
		<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">E</span> e <span class="token operator">:</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
			list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">return</span> list<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.7,words:809},y:"a",t:"自定义泛型类、泛型接口、泛型方法"},["/java/java-advanced/generic/custom","/java/java-advanced/generic/custom.md"]],["v-005d1f24","/java/java-advanced/generic/extends.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 泛型在继承上的体现</h1>
<p>虽然类A是类B的父类，但是<code>G&lt;A&gt;</code> 和<code>G&lt;B&gt;</code>二者不具备子父类关系，二者是并列关系。</p>
<div class="hint-container info">
<p class="hint-container-title">补充</p>
<p>类A是类B的父类，<code>A&lt;G&gt;</code> 是 <code>B&lt;G&gt;</code> 的父类</p>
</div>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token class-name">Object</span> obj <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	obj <span class="token operator">=</span> str<span class="token punctuation">;</span>
	
	<span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	arr1 <span class="token operator">=</span> arr2<span class="token punctuation">;</span>
	<span class="token comment">// 编译不通过</span>
	<span class="token comment">// Date date = new Date();</span>
	<span class="token comment">// str = date;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 此时的list1和list2的类型不具子父类关系</span>
	<span class="token comment">// 编译不通过</span>
	<span class="token comment">// list1 = list2;</span>
	<span class="token comment">/*
	反证法：
	假设 list1 = list2;
	list1.add(123);导致混入非String的数据。出错。
	*/</span>
	<span class="token function">show</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">show1</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show1</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list3 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	
	list1 <span class="token operator">=</span> list3<span class="token punctuation">;</span>
	list2 <span class="token operator">=</span> list3<span class="token punctuation">;</span>
	
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:207},y:"a",t:"泛型在继承上的体现"},["/java/java-advanced/generic/extends","/java/java-advanced/generic/extends.md"]],["v-558dbc20","/java/java-advanced/generic/generic.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 泛型的理解</h1>
<h2> 泛型的概念</h2>
<p>所谓泛型，就是允许在定义类、接口时通过一个标识表示类中某个属性的类型或者是某个方法的返
回值及参数类型。这个类型参数将在使用时（例如，继承或实现这个接口，用这个类型声明变量、 创建对象时确定（即传入实际的类型参数，也称为类型实参）。</p>
<h2> 泛型的引入背景</h2>
<p>集合容器类在设计阶段/声明阶段不能确定这个容器到底实际存的是什么类型的对象，所以在<mark>JDK1.5之前只能把元素类型设计为Object，JDK1.5之后使用泛型来解决</mark>。
因为这个时候除了元素的类型不确定，其他的部分是确定的，例如关于这个元素如何保存，如何管理等是确定的，因此此时<mark>把元素的类型设计成一个参数，这个类型参数叫做泛型</mark>。
<code>Collection&lt;E&gt;</code>,<code>List&lt;E&gt;</code>,<code>ArrayList&lt;E&gt;</code>这个<code>&lt;E&gt;</code>就是类型参数，即泛型。</p>`,r:{minutes:.95,words:286},y:"a",t:"泛型的理解"},["/java/java-advanced/generic/generic","/java/java-advanced/generic/generic.md"]],["v-3e2fd871","/java/java-advanced/generic/wildcard.html",{d:16700256e5,l:"2022年12月3日",c:"基础进阶",g:["JAVA"],e:`<h1> 通配符</h1>
<h2> 通配符的使用</h2>
<p>通配符：<code>?</code></p>
<p>类A是类B的父类，<code>G&lt;A&gt;</code>和<code>G&lt;B&gt;</code>是没关系的，二者共同的父类是：<code>G&lt;?&gt;</code></p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	
	list <span class="token operator">=</span> list1<span class="token punctuation">;</span>
	list <span class="token operator">=</span> list2<span class="token punctuation">;</span>
	<span class="token comment">// 编译通过</span>
	<span class="token comment">// print(list1);</span>
	<span class="token comment">// print(list2);</span>
	
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"AA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"BB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"CC"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list <span class="token operator">=</span> list3<span class="token punctuation">;</span>
	<span class="token comment">// 添加(写入)：对于List&lt;?&gt;就不能向其内部添加数据。</span>
	<span class="token comment">// 除了添加null之外。</span>
	<span class="token comment">// list.add("DD");</span>
	<span class="token comment">// list.add('?');</span>
	
	list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 获取(读取)：允许读取数据，读取的数据类型为Object。</span>
	<span class="token class-name">Object</span> o <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
	
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Object</span> obj <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.19,words:356},y:"a",t:"通配符"},["/java/java-advanced/generic/wildcard","/java/java-advanced/generic/wildcard.md"]],["v-8eaec032","/java/java-advanced/multi-thread/concurrent.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> 并行与并发</h1>
<h2> 单核CPU与多核CPU的理解</h2>
<p><code>单核CPU</code>，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。</p>
<div class="hint-container info">
<p class="hint-container-title">例如</p>
<p>虽然有多车道，但是收费站只有一个工作人员在收费，只有收了费才能通过，那么CPU就好比收费人员。如果某个人不想交钱，那么收费人员可以把他“挂起”（晾着他，等他想通了，准备好了钱，再去收费。）但是因为CPU时间单元特别短，因此感觉不出来。</p>
</div>`,r:{minutes:1.01,words:303},y:"a",t:"并行与并发"},["/java/java-advanced/multi-thread/concurrent","/java/java-advanced/multi-thread/concurrent.md"]],["v-88462fd6","/java/java-advanced/multi-thread/introduce.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> 程序、进程、线程的理解</h1>
<h2> 程序(program)</h2>
<div class="hint-container info">
<p class="hint-container-title">概念</p>
<p>是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。</p>
</div>
<h2> 进程(process)</h2>
<div class="hint-container info">
<p class="hint-container-title">概念</p>
<p>程序的一次执行过程，或是正在运行的一个程序。</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">说明</p>
<p>进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域</p>
</div>`,r:{minutes:.82,words:247},y:"a",t:"程序、进程、线程的理解"},["/java/java-advanced/multi-thread/introduce","/java/java-advanced/multi-thread/introduce.md"]],["v-0746fc97","/java/java-advanced/multi-thread/thread-lifeCycle.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> Thread的生命周期</h1>
<p></p>
<ol>
<li>
<p>生命周期关注两个概念：<mark>状态</mark>、<mark>相应的方法</mark></p>
</li>
<li>
<p>关注：状态a➡️状态b:哪些方法执行了（回调方法）</p>
<p>某个方法主动调用：状态a➡️状态b</p>
</li>
<li>
<p>阻塞：临时状态，不可以作为最终状态</p>
<p>死亡：最终状态。</p>
</li>
</ol>
`,r:{minutes:.32,words:95},y:"a",t:"Thread的生命周期"},["/java/java-advanced/multi-thread/thread-lifeCycle","/java/java-advanced/multi-thread/thread-lifeCycle.md"]],["v-7f6489a2","/java/java-advanced/multi-thread/thread-methods.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> Thread类中的常用方法</h1>
<h2> Thread类中的常用的方法</h2>
<ol>
<li><code>start()</code>:启动当前线程；调用当前线程的run()</li>
<li><code>run()</code>: 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中</li>
<li><code>currentThread()</code>:静态方法，返回执行当前代码的线程</li>
<li><code>getName()</code>:获取当前线程的名字</li>
<li><code>setName()</code>:设置当前线程的名字</li>
<li><code>yield()</code>:释放当前cpu的执行权</li>
<li><code>join()</code>:在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。</li>
<li><code>stop()</code>:已过时。当执行此方法时，强制结束当前线程。</li>
<li><code>sleep(long millitime)</code>:让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。</li>
<li><code>isAlive()</code>:判断当前线程是否存活</li>
</ol>`,r:{minutes:1.38,words:413},y:"a",t:"Thread类中的常用方法"},["/java/java-advanced/multi-thread/thread-methods","/java/java-advanced/multi-thread/thread-methods.md"]],["v-28368601","/java/java-advanced/multi-thread/thread-new.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> JDK5.0新增线程创建的方式</h1>
<h2> 新增方式一：实现Callable接口 </h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1.创建一个实现Callable的实现类</span>
<span class="token keyword">class</span> <span class="token class-name">NumThread</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token punctuation">{</span>
    <span class="token comment">// 2.实现call方法，将此线程需要执行的操作声明在call()中</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadNew</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 3.创建Callable接口实现类的对象</span>
    <span class="token class-name">NumThread</span> numThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NumThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象</span>
    <span class="token class-name">FutureTask</span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token punctuation">(</span>numThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 6.获取Callable中call方法的返回值</span>
            <span class="token comment">// get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。</span>
            <span class="token class-name">Object</span> sum <span class="token operator">=</span> futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总和为："</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.97,words:590},y:"a",t:"JDK5.0新增线程创建的方式"},["/java/java-advanced/multi-thread/thread-new","/java/java-advanced/multi-thread/thread-new.md"]],["v-09a2e130","/java/java-advanced/multi-thread/thread-notify.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> 线程通信</h1>
<h2> 线程通信涉及到的三个方法</h2>
<ul>
<li><code>wait()</code>: 一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。</li>
<li><code>notify()</code>: 一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。</li>
<li><code>notifyAll()</code>: 一旦执行此方法，就会唤醒所有被wait的线程。</li>
</ul>
<h2> 说明</h2>
<ol>
<li><code>wait()</code>，<code>notify()</code>，<code>notifyAll()</code>三个方法必须使用在同步代码块或同步方法中。</li>
<li><code>wait()</code>，<code>notify()</code>，<code>notifyAll()</code>三个方法的调用者必须是同步代码块或同步方法中的同步监视器。否则，会出现<mark>IllegalMonitorStateException异常</mark></li>
<li>wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。</li>
</ol>`,r:{minutes:1.18,words:353},y:"a",t:"线程通信"},["/java/java-advanced/multi-thread/thread-notify","/java/java-advanced/multi-thread/thread-notify.md"]],["v-7efbc941","/java/java-advanced/multi-thread/thread-synchronization.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> 线程的同步机制</h1>
<h2> 背景</h2>
<div class="hint-container info">
<p class="hint-container-title">例子</p>
<p>创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式</p>
<ol>
<li>问题：卖票过程中，出现了重票、错票 <mark>出现了线程的安全问题</mark></li>
<li>问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。</li>
<li>如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。</li>
</ol>
</div>`,r:{minutes:3.01,words:902},y:"a",t:"线程的同步机制"},["/java/java-advanced/multi-thread/thread-synchronization","/java/java-advanced/multi-thread/thread-synchronization.md"]],["v-1beca418","/java/java-advanced/multi-thread/thread.html",{d:16695936e5,l:"2022年11月28日",c:"基础进阶",g:["JAVA"],e:`<h1> 创建多线程的两种方式</h1>
<h2> 继承Thread类的方式</h2>
<ol>
<li>创建一个继承于Thread类的子类</li>
<li>重写Thread类的run() --&gt; 将此线程执行的操作声明在run()中</li>
<li>创建Thread类的子类的对象</li>
<li>通过此对象调用start()：
<ul>
<li>启动当前线程</li>
<li>调用当前线程的run()</li>
</ul>
</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">两个问题</p>
<p>问题一：我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。</p>
<p>问题二：如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().</p>
</div>`,r:{minutes:1.23,words:369},y:"a",t:"创建多线程的两种方式"},["/java/java-advanced/multi-thread/thread","/java/java-advanced/multi-thread/thread.md"]],["v-5785aa50","/java/java-advanced/network/InetAddress.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> InetAddress类的使用</h1>
<h2> 实现网络通信需要解决的两个问题</h2>
<ol>
<li>如何准确地定位网络上一台或多台主机；定位主机上的特定的应用</li>
<li>找到主机后如何可靠高效地进行数据传输</li>
</ol>
<h2> 网络通信的两个要素</h2>
<ol>
<li>对应问题一：IP和端口号</li>
<li>对应问题二：提供网络通信协议：TCP/IP参考模型（应用层、传输层、网络层、物理+数据链路层）</li>
</ol>
<h2> 通信要素一：IP和端口号</h2>
<h3> IP的理解</h3>
<ol>
<li>IP:唯一的标识 Internet 上的计算机（通信实体）</li>
<li>在Java中使用InetAddress类代表IP</li>
<li>IP分类：IPv4 和 IPv6 ; 万维网 和 局域网</li>
<li>域名: <a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">www.baidu.com</a> <a href="http://www.mi.com" target="_blank" rel="noopener noreferrer">www.mi.com</a> <a href="http://www.sina.com" target="_blank" rel="noopener noreferrer">www.sina.com</a> <a href="http://www.jd.com" target="_blank" rel="noopener noreferrer">www.jd.com</a>
<ul>
<li>域名解析：域名容易记忆，当在连接网络时输入一个主机的域名后，域名服务器(DNS)负责将域名转化成IP地址，这样才能和主机建立连接。</li>
</ul>
</li>
<li>本地回路地址：127.0.0.1 对应着：localhost</li>
</ol>`,r:{minutes:1.36,words:408},y:"a",t:"InetAddress类的使用"},["/java/java-advanced/network/InetAddress","/java/java-advanced/network/InetAddress.md"]],["v-5af222cf","/java/java-advanced/network/TCP.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> TCP网络编程</h1>
<p>代码示例1：客户端发送信息给服务端，服务端将数据显示在控制台上</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 客户端</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">client</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	<span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">OutputStream</span> os <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// 1.创建Socket对象，指明服务器端的ip和端口号</span>
		<span class="token class-name">InetAddress</span> inet <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span><span class="token string">"192.168.14.100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span>inet<span class="token punctuation">,</span><span class="token number">8899</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 2.获取一个输出流，用于输出数据</span>
		os <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 3.写出数据的操作</span>
		os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"你好，我是客户端mm"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token comment">// 4.资源的关闭</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>os <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>socket <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 服务端</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	<span class="token class-name">ServerSocket</span> ss <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">ByteArrayOutputStream</span> baos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// 1.创建服务器端的ServerSocket，指明自己的端口号</span>
		ss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">8899</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 2.调用accept()表示接收来自于客户端的socket</span>
		socket <span class="token operator">=</span> ss<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 3.获取输入流</span>
		is <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">// 不建议这样写，可能会乱码</span>
		<span class="token comment">// byte[] buffer = new byte[1024];</span>
		<span class="token comment">// int len;</span>
		<span class="token comment">// while((len = is.read(buffer)) != -1){</span>
		<span class="token comment">//      String str = new String(buffer,0,len);</span>
		<span class="token comment">//      System.out.print(str);</span>
		<span class="token comment">// }</span>
		<span class="token comment">// 4.读取输入流中的数据</span>
		baos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> len<span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			baos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>baos<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"收到了来自于："</span> <span class="token operator">+</span> socket<span class="token punctuation">.</span><span class="token function">getInetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"的数据"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>baos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">// 5.关闭资源</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				baos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>is <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>socket <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>ss <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				ss<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.59,words:777},y:"a",t:"TCP网络编程"},["/java/java-advanced/network/TCP","/java/java-advanced/network/TCP.md"]],["v-108cea22","/java/java-advanced/network/UDP.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> UDP网络编程</h1>
<p>代码示例：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 发送端</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

	<span class="token class-name">DatagramSocket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"我是UDP方式发送的导弹"</span><span class="token punctuation">;</span>
	<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">InetAddress</span> inet <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">DatagramPacket</span> packet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>length<span class="token punctuation">,</span>inet<span class="token punctuation">,</span><span class="token number">9090</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	socket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// 接收端</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
	<span class="token class-name">DatagramSocket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token number">9090</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token class-name">DatagramPacket</span> packet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>buffer<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	socket<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>packet<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>packet<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:101},y:"a",t:"UDP网络编程"},["/java/java-advanced/network/UDP","/java/java-advanced/network/UDP.md"]],["v-550533fe","/java/java-advanced/network/URL.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> URL编程</h1>
<h2> URL的理解:</h2>
<p>URL(Uniform Resource Locator)统一资源定位符，对应着互联网的某一资源地址</p>
<h2> URL的5个基本结构</h2>
<p></p>
<h2> 如何实例化</h2>
<p><code>URL url = new URL("http://localhost:8080/examples/beauty.jpg?username=Tom")</code>;</p>
<h2> 常用方法</h2>
<p></p>
<h2> 可以读取、下载对应的url资源</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token class-name">HttpURLConnection</span> urlConnection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token class-name">URL</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/examples/beauty.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		urlConnection <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		urlConnection<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		is <span class="token operator">=</span> urlConnection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">"day10\\\\beauty3.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> len<span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> is<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下载完成"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token comment">//关闭资源</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>is <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				is<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>fos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>urlConnection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			urlConnection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.57,words:172},y:"a",t:"URL编程"},["/java/java-advanced/network/URL","/java/java-advanced/network/URL.md"]],["v-84dcaf5c","/java/java-advanced/new-features/FunctionalInterface.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 函数式接口</h1>
<h2> 函数式接口的使用说明</h2>
<ul>
<li>如果一个接口中，只声明了一个抽象方法，则此接口就称为函数式接口。</li>
<li>我们可以在一个接口上使用 @FunctionalInterface 注解，这样做可以检查它是否是一个函数式接口。</li>
<li>Lambda表达式的本质：作为函数式接口的实例</li>
</ul>
<h2> 函数式接口</h2>
<p>Java8中关于Lambda表达式提供的4个基本的函数式接口</p>
<p>具体使用：</p>
<p></p>
<h2> 总结</h2>
<h3> 何时使用lambda表达式？</h3>`,r:{minutes:.85,words:255},y:"a",t:"函数式接口"},["/java/java-advanced/new-features/FunctionalInterface","/java/java-advanced/new-features/FunctionalInterface.md"]],["v-4ca20ce3","/java/java-advanced/new-features/Lambda.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> Lambda表达式</h1>
<h2> Lambda表达式使用前后的对比</h2>
<p>举例一：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token class-name">Runnable</span> r1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token annotation punctuation">@Override</span>
		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我爱北京天安门"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	
	r1<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"***********************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">Runnable</span> r2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我爱北京故宫"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	r2<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.03,words:309},y:"a",t:"Lambda表达式"},["/java/java-advanced/new-features/Lambda","/java/java-advanced/new-features/Lambda.md"]],["v-448856ac","/java/java-advanced/new-features/Optional.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> Optional类的使用</h1>
<p><code>java.util.Optional</code>类</p>
<h2> 理解</h2>
<p>为了解决java中的空指针问题而生！</p>
<p><code>Optional&lt;T&gt;</code> 类(java.util.Optional) 是一个容器类，它可以保存类型T的值，代表这个值存在。或者仅仅保存null，表示这个值不存在。原来用
null 表示一个值不存在，现在 Optional 可以更好的表达这个概念。并且可以避免空指针异常。</p>
<h2> 常用方法</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">// empty():创建的Optional对象内部的value = null</span>
	<span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> op1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>op1<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//Optional封装的数据是否包含数据</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"数据为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>op1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>op1<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 如果Optional封装的数据value为空，则get()报错。否则，value不为空时，返回value.</span>
	
	<span class="token comment">// System.out.println(op1.get());</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>
	
	<span class="token comment">// str = null;</span>
	<span class="token comment">// of(T t):封装数据t生成Optional对象。要求t非空，否则报错。</span>
	<span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> op1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// get()通常与of()方法搭配使用。用于获取内部的封装的数据value</span>
	<span class="token class-name">String</span> str1 <span class="token operator">=</span> op1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"beijing"</span><span class="token punctuation">;</span>
	str <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token comment">// ofNullable(T t) ：封装数据t赋给Optional内部的value。不要求t非空</span>
	<span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> op1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// orElse(T t1):如果Optional内部的value非空，则返回此value值。如果</span>
	<span class="token comment">// value为空，则返回t1.</span>
	<span class="token class-name">String</span> str2 <span class="token operator">=</span> op1<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"shanghai"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.48,words:443},y:"a",t:"Optional类的使用"},["/java/java-advanced/new-features/Optional","/java/java-advanced/new-features/Optional.md"]],["v-2d8b618e","/java/java-advanced/new-features/StreamAPI.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> Stream API</h1>
<h2> Stream API的理解</h2>
<ol>
<li>
<p>Stream关注的是对数据的运算，与CPU打交道;集合关注的是数据的存储，与内存打交道</p>
</li>
<li>
<p>java8提供了一套api,使用这套api可以对内存中的数据进行过滤、排序、映射、归约等操作。类似于sql对数据库中表的相关操作。</p>
</li>
</ol>
<h2> 注意点</h2>
<ol>
<li>Stream 自己不会存储元素。</li>
<li>Stream 不会改变源对象。相反，他们会返回一个持有结果的新Stream。</li>
<li>Stream 操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。</li>
</ol>`,r:{minutes:1.75,words:524},y:"a",t:"Stream API"},["/java/java-advanced/new-features/StreamAPI","/java/java-advanced/new-features/StreamAPI.md"]],["v-463a97a4","/java/java-advanced/new-features/constructor.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 构造器引用与数组引用</h1>
<h2> 构造器引用格式</h2>
<p>类名::new</p>
<h2> 构造器引用使用要求</h2>
<p>和方法引用类似，函数式接口的抽象方法的形参列表和构造器的形参列表一致。抽象方法的返回值类型即为构造器所属的类的类型</p>
<h2> 构造器引用举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Supplier中的T get()</span>
<span class="token comment">// Employee的空参构造器：Employee()</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

	<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> sup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token annotation punctuation">@Override</span>
		<span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*******************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span>  sup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sup1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*******************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span>  sup2 <span class="token operator">=</span> <span class="token class-name">Employee</span> <span class="token operator">::</span> <span class="token keyword">new</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sup2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Function中的R apply(T t)</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> func1 <span class="token operator">=</span> id <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Employee</span> employee <span class="token operator">=</span> func1<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*******************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> func2 <span class="token operator">=</span> <span class="token class-name">Employee</span> <span class="token operator">::</span> <span class="token keyword">new</span><span class="token punctuation">;</span>
	<span class="token class-name">Employee</span> employee1 <span class="token operator">=</span> func2<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">// BiFunction中的R apply(T t,U u)</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> func1 <span class="token operator">=</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>func1<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*******************"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> func2 <span class="token operator">=</span> <span class="token class-name">Employee</span> <span class="token operator">::</span> <span class="token keyword">new</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>func2<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.97,words:290},y:"a",t:"构造器引用与数组引用"},["/java/java-advanced/new-features/constructor","/java/java-advanced/new-features/constructor.md"]],["v-f3af73a8","/java/java-advanced/new-features/quote.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 方法引用</h1>
<h2> 理解</h2>
<p>方法引用可以看做是Lambda表达式深层次的表达。换句话说，方法引用就是Lambda表达式，也就是函数式接口的一个实例，通过方法的名字来指向一个方法。</p>
<h2> 使用情境</h2>
<p>当要传递给Lambda体的操作，已经实现的方法了，可以使用方法引用！</p>
<h2> 格式</h2>
<p>类(或对象) :: 方法名</p>
<h2> 分为如下的三种情况</h2>
<ul>
<li>情况1 对象 :: 非静态方法</li>
<li>情况2 类 :: 静态方法</li>
<li>情况3 类 :: 非静态方法</li>
</ul>`,r:{minutes:2.27,words:681},y:"a",t:"方法引用"},["/java/java-advanced/new-features/quote","/java/java-advanced/new-features/quote.md"]],["v-86f91362","/java/java-advanced/reflection/Class.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> Class类</h1>
<h2> Class类的理解</h2>
<ol>
<li>类的加载过程
<ul>
<li>程序经过javac.exe命令以后，会生成一个或多个字节码文件(.class结尾)。</li>
<li>接着我们使用java.exe命令对某个字节码文件进行解释运行。相当于将某个字节码文件加载到内存中。此过程就称为类的加载。</li>
<li>加载到内存中的类，我们就称为运行时类，此运行时类，就作为Class的一个实例。</li>
</ul>
</li>
<li>换句话说，Class的实例就对应着一个运行时类。</li>
<li>加载到内存中的运行时类，会缓存一定的时间。在此时间之内，我们可以通过不同的方式来获取此运行时类。</li>
</ol>`,r:{minutes:1.35,words:406},y:"a",t:"Class类"},["/java/java-advanced/reflection/Class","/java/java-advanced/reflection/Class.md"]],["v-4c65917c","/java/java-advanced/reflection/ClassLoader.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 了解ClassLoader</h1>
<h2> 类的加载过程----了解</h2>
<p></p>
<h2> 类的加载器的作用</h2>
<p></p>
<h2> 类的加载器的分类</h2>
<p></p>
<h2> Java类编译、运行的执行的流程</h2>
<p></p>
<h2> 使用Classloader加载src目录下的配置文件</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

	<span class="token class-name">Properties</span> pros <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 此时的文件默认在当前的module下。</span>
	<span class="token comment">// 读取配置文件的方式一：</span>
	<span class="token comment">// FileInputStream fis = new FileInputStream("jdbc.properties");</span>
	<span class="token comment">// FileInputStream fis = new FileInputStream("src\\\\jdbc1.properties");</span>
	<span class="token comment">// pros.load(fis);</span>
	
	<span class="token comment">// 读取配置文件的方式二：使用ClassLoader</span>
	<span class="token comment">// 配置文件默认识别为：当前module的src下</span>
	<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">ClassLoaderTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">InputStream</span> is <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"jdbc1.properties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	pros<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">String</span> user <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> password <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"user = "</span> <span class="token operator">+</span> user <span class="token operator">+</span> <span class="token string">",password = "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.59,words:176},y:"a",t:"了解ClassLoader"},["/java/java-advanced/reflection/ClassLoader","/java/java-advanced/reflection/ClassLoader.md"]],["v-30059228","/java/java-advanced/reflection/apply1.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 反射应用一：创建运行时类的对象</h1>
<h2> 代码举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

<span class="token class-name">Person</span> obj <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.63,words:190},y:"a",t:"反射应用一：创建运行时类的对象"},["/java/java-advanced/reflection/apply1","/java/java-advanced/reflection/apply1.md"]],["v-31ba6ac7","/java/java-advanced/reflection/apply2.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 反射应用二：获取运行时类的完整结构</h1>
<p>我们可以通过反射，获取对应的运行时类中所有的<code>属性</code>、<code>方法</code>、<code>构造器</code>、<code>父类</code>、<code>接口</code>、<code>父类的泛型</code>、<code>包</code>、<code>注解</code>、<code>异常</code>等。。。。</p>
<p>典型代码：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 获取属性结构</span>
	<span class="token comment">// getFields():获取当前运行时类及其父类中声明为public访问权限的属性</span>
	<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Field</span> f <span class="token operator">:</span> fields<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// getDeclaredFields():获取当前运行时类中声明的所属性。（不包含父类中声明的属性</span>
	<span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Field</span> f <span class="token operator">:</span> declaredFields<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.73,words:518},y:"a",t:"反射应用二：获取运行时类的完整结构"},["/java/java-advanced/reflection/apply2","/java/java-advanced/reflection/apply2.md"]],["v-336f4366","/java/java-advanced/reflection/apply3.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 反射应用三：调用运行时类的指定结构</h1>
<p>调用指定的属性：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testField1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 创建运行时类的对象</span>
	<span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 1. getDeclaredField(String fieldName): 获取运行时类中指定变量名的属性</span>
	<span class="token class-name">Field</span> name <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 2.保证当前属性是可访问的</span>
	name<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 3.获取、设置指定对象的此属性值</span>
	name<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token string">"Tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.39,words:418},y:"a",t:"反射应用三：调用运行时类的指定结构"},["/java/java-advanced/reflection/apply3","/java/java-advanced/reflection/apply3.md"]],["v-35241c05","/java/java-advanced/reflection/apply4.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 反射应用四：动态代理</h1>
<h2> 代理模式的原理</h2>
<p>使用一个代理将对象包装起来, 然后用该代理对象取代原始对象。任何对原始对象的调用都要通过代理。代理对象决定是否以及何时将方法调用转到原始对象上。</p>
<h2> 静态代理</h2>
<h3> 举例</h3>
<p>实现Runnable接口的方法创建多线程。</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">//相当于被代理类</span>
<span class="token class-name">Class</span> <span class="token class-name">Thread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">//相当于代理类</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">MyThread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
	thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//启动线程；调用线程的run()</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.53,words:758},y:"a",t:"反射应用四：动态代理"},["/java/java-advanced/reflection/apply4","/java/java-advanced/reflection/apply4.md"]],["v-bfc9df00","/java/java-advanced/reflection/reflection.html",{d:1670112e6,l:"2022年12月4日",c:"基础进阶",g:["JAVA"],e:`<h1> 反射的概述</h1>
<h2> 关于反射的理解</h2>
<p>Reflection（反射)是被视为动态语言的关键，反射机制允许程序在执行期借助于Reflection API取得任何类的内部信息，并能直接操作任意对象的内部属性及方法。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>框架 = 反射 + 注解 + 设计模式。</p>
</div>
<h2> 体会反射机制的"动态性"</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0,1,2</span>
		<span class="token class-name">String</span> classPath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
				classPath <span class="token operator">=</span> <span class="token string">"java.util.Date"</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
				classPath <span class="token operator">=</span> <span class="token string">"java.lang.Object"</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
				classPath <span class="token operator">=</span> <span class="token string">"com.atguigu.java.Person"</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token class-name">Object</span> obj <span class="token operator">=</span> <span class="token function">getInstance</span><span class="token punctuation">(</span>classPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 创建一个指定类的对象。
 * classPath: 指定类的全类名
 */</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">String</span> classPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token class-name">Class</span> clazz <span class="token operator">=</span>  <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>classPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.71,words:212},y:"a",t:"反射的概述"},["/java/java-advanced/reflection/reflection","/java/java-advanced/reflection/reflection.md"]],["v-9c6fc078","/java/source-code/jdk/ArrayList.html",{d:16936992e5,l:"2023年9月3日",c:"Source Code",g:["JAVA"],e:`<h1> ArrayList</h1>
<h2> ArrayList 简介</h2>
<p>ArrayList 的底层是数组队列，相当于动态数组。与 Java 中的数组相比，它的容量能动态增长。在添加大量元素前，应用程序可以使用ensureCapacity操作来增加 ArrayList 实例的容量。这可以减少递增式再分配的数量。</p>
<p>ArrayList 继承于 AbstractList ，实现了 List, RandomAccess, Cloneable, java.io.Serializable 这些接口。</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> 
    <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:14.78,words:4434},y:"a",t:"ArrayList"},["/java/source-code/jdk/ArrayList","/java/source-code/jdk/ArrayList.md"]],["v-ca1551da","/note/backend/spring/exception-handling.html",{d:16782336e5,l:"2023年3月8日",c:"笔记",g:["Spring"],e:`<h1> SpringBoot统一的异常处理</h1>
<h2> 编写异常处理类</h2>
<p>使用@ControllerAdvice/@RestControllerAdvice</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestControllerAdvice</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionControllerAdvice</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.28,words:83},y:"a",t:"SpringBoot统一的异常处理"},["/note/backend/spring/exception-handling","/note/backend/spring/exception-handling.md"]],["v-5af48dfd","/note/backend/spring/validation.html",{d:16782336e5,l:"2023年3月8日",c:"笔记",g:["Spring"],e:`<h1> SpringBoot字段验证器</h1>
<h2> 添加POM坐标</h2>
<p>在SpringBoot2.3.0以后，我们需要给 pom.xml 加入下面的依赖项，SpringBoot 校验属性 @Valid 才会起作用</p>
<div class="language-pom line-numbers-mode" data-ext="pom"><pre class="language-pom"><code>&lt;dependency&gt;
	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
	&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.55,words:465},y:"a",t:"SpringBoot字段验证器"},["/note/backend/spring/validation","/note/backend/spring/validation.md"]],["v-3c7e9249","/note/backend/spring/value-inject.html",{d:16789248e5,l:"2023年3月16日",c:"笔记",g:["Spring"],e:`<h1> SpringBoot注入配置文件值</h1>
<h2> @ConfigurationProperties注解的方式自动注入</h2>
<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">person</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> 小明
  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">12</span>
  <span class="token key atrule">birth</span><span class="token punctuation">:</span> 2018/9/9
  <span class="token key atrule">maps</span><span class="token punctuation">:</span>
    <span class="token key atrule">k1</span><span class="token punctuation">:</span> v1
    <span class="token key atrule">k2</span><span class="token punctuation">:</span> v2
  <span class="token key atrule">list</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> a
    <span class="token punctuation">-</span> b
    <span class="token punctuation">-</span> c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.4,words:120},y:"a",t:"SpringBoot注入配置文件值"},["/note/backend/spring/value-inject","/note/backend/spring/value-inject.md"]],["v-5ac030d7","/other/audition/JUC/ArrayList%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%BE%E4%BE%8B.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> ArrayList线程不安全的举例</h1>
<h2> 前言</h2>
<p>1、当我们执行下面语句的时候，底层进行了什么操作</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:3.36,words:1007},y:"a",t:"ArrayList线程不安全的举例"},["/other/audition/JUC/ArrayList线程不安全的举例.html","/other/audition/JUC/ArrayList%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%BE%E4%BE%8B","/other/audition/JUC/ArrayList线程不安全的举例.md","/other/audition/JUC/ArrayList%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E4%B8%BE%E4%BE%8B.md"]],["v-1987ca6a","/other/audition/JUC/AtomicInteger%E7%9A%84ABA%E9%97%AE%E9%A2%98.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> AtomicInteger的ABA问题</h1>
<h2> 连环套路</h2>
<p>从AtomicInteger引出下面的问题</p>
<p>CAS -&gt; Unsafe -&gt; CAS底层思想 -&gt; ABA -&gt; 原子引用更新 -&gt; 如何规避ABA问题</p>
<h2> ABA问题是什么</h2>
<p>狸猫换太子</p>
<p></p>
<p>假设现在有两个线程，分别是T1 和
T2，然后T1执行某个操作的时间为10秒，T2执行某个时间的操作是2秒，最开始AB两个线程，分别从主内存中获取A值，但是因为B的执行速度更快，他先把A的值改成B，然后在修改成A，然后执行完毕，T1线程在10秒后，执行完毕，判断内存中的值为A，并且和自己预期的值一样，它就认为没有人更改了主内存中的值，就快乐的修改成B，但是实际上
可能中间经历了 ABCDEFA 这个变换，也就是中间的值经历了狸猫换太子。</p>`,r:{minutes:13.74,words:4121},y:"a",t:"AtomicInteger的ABA问题"},["/other/audition/JUC/AtomicInteger的ABA问题.html","/other/audition/JUC/AtomicInteger%E7%9A%84ABA%E9%97%AE%E9%A2%98","/other/audition/JUC/AtomicInteger的ABA问题.md","/other/audition/JUC/AtomicInteger%E7%9A%84ABA%E9%97%AE%E9%A2%98.md"]],["v-c5de3364","/other/audition/JUC/CAS%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> CAS底层原理</h1>
<h2> 概念</h2>
<p>CAS的全称是Compare-And-Swap，它是CPU并发原语</p>
<p>它的功能是判断内存某个位置的值是否为预期值，如果是则更改为新的值，这个过程是原子的</p>
<p>CAS并发原语体现在Java语言中就是sun.misc.Unsafe类的各个方法。调用UnSafe类中的CAS方法，JVM会帮我们实现出CAS汇编指令，这是一种完全依赖于硬件的功能，通过它实现了原子操作，再次强调，由于CAS是一种系统原语，原语属于操作系统用于范畴，是由若干条指令组成，用于完成某个功能的一个过程，并且原语的执行必须是连续的，在执行过程中不允许被中断，也就是说CAS是一条CPU的原子指令，不会造成所谓的数据不一致的问题，也就是说CAS是线程安全的。</p>`,r:{minutes:6.44,words:1932},y:"a",t:"CAS底层原理"},["/other/audition/JUC/CAS底层原理.html","/other/audition/JUC/CAS%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86","/other/audition/JUC/CAS底层原理.md","/other/audition/JUC/CAS%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.md"]],["v-73e7cb85","/other/audition/JUC/CountDownLatch.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> CountDownLatch</h1>
<h2> 概念</h2>
<p>让一些线程阻塞直到另一些线程完成一系列操作才被唤醒</p>
<p>CountDownLatch主要有两个方法，当一个或多个线程调用await方法时，调用线程就会被阻塞。其它线程调用CountDown方法会将计数器减1（调用CountDown方法的线程不会被阻塞），当计数器的值变成零时，因调用await方法被阻塞的线程会被唤醒，继续执行</p>
<h2> 场景</h2>
<p>现在有这样一个场景，假设一个自习室里有7个人，其中有一个是班长，班长的主要职责就是在其它6个同学走了后，关灯，锁教室门，然后走人，因此班长是需要最后一个走的，那么有什么方法能够控制班长这个线程是最后一个执行，而其它线程是随机执行的</p>`,r:{minutes:2.23,words:670},y:"a",t:"CountDownLatch"},["/other/audition/JUC/CountDownLatch","/other/audition/JUC/CountDownLatch.md"]],["v-1450f1bc","/other/audition/JUC/CyclicBarrier.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> CyclicBarrier</h1>
<h2> 概念</h2>
<p>和CountDownLatch相反，需要集齐七颗龙珠，召唤神龙。也就是做加法，开始是0，加到某个值的时候就执行</p>
<p>CyclicBarrier的字面意思就是可循环（cyclic）使用的屏障（Barrier）。它要求做的事情是，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活，线程进入屏障通过CyclicBarrier的await方法</p>
<h2> 案例</h2>
<p>集齐7个龙珠，召唤神龙的Demo，我们需要首先创建CyclicBarrier</p>`,r:{minutes:1.49,words:446},y:"a",t:"CyclicBarrier"},["/other/audition/JUC/CyclicBarrier","/other/audition/JUC/CyclicBarrier.md"]],["v-50691d19","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%85%AC%E5%B9%B3%E9%94%81%E5%92%8C%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Java锁之公平锁和非公平锁</h1>
<h2> 概念</h2>
<h3> 公平锁</h3>
<p>是指多个线程按照申请锁的顺序来获取锁，类似于排队买饭，先来后到，先来先服务，就是公平的，也就是队列</p>
<h3> 非公平锁</h3>
<p>是指多个线程获取锁的顺序，并不是按照申请锁的顺序，有可能申请的线程比先申请的线程优先获取锁，在高并发环境下，有可能造成优先级翻转，或者饥饿的线程（也就是某个线程一直得不到锁）</p>
<h2> 如何创建</h2>
<p>并发包中ReentrantLock的创建可以指定析构函数的boolean类型来得到公平锁或者非公平锁，默认是非公平锁</p>
`,r:{minutes:1.41,words:422},y:"a",t:"Java锁之公平锁和非公平锁"},["/other/audition/JUC/Java锁之公平锁和非公平锁.html","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%85%AC%E5%B9%B3%E9%94%81%E5%92%8C%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81","/other/audition/JUC/Java锁之公平锁和非公平锁.md","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%85%AC%E5%B9%B3%E9%94%81%E5%92%8C%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81.md"]],["v-0237c77a","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%E5%92%8C%E9%80%92%E5%BD%92%E9%94%81.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Java锁之可重入锁和递归锁</h1>
<h2> 概念</h2>
<p>可重入锁就是递归锁</p>
<p>指的是同一线程外层函数获得锁之后，内层递归函数仍然能获取到该锁的代码，在同一线程在外层方法获取锁的时候，在进入内层方法会自动获取锁</p>
<p>也就是说：<code>线程可以进入任何一个它已经拥有的锁所同步的代码块</code></p>
<p>ReentrantLock / Synchronized 就是一个典型的可重入锁</p>
<h2> 代码</h2>
<p>可重入锁就是，在一个method1方法中加入一把锁，方法2也加锁了，那么他们拥有的是同一把锁</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">method1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.82,words:1146},y:"a",t:"Java锁之可重入锁和递归锁"},["/other/audition/JUC/Java锁之可重入锁和递归锁.html","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%E5%92%8C%E9%80%92%E5%BD%92%E9%94%81","/other/audition/JUC/Java锁之可重入锁和递归锁.md","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81%E5%92%8C%E9%80%92%E5%BD%92%E9%94%81.md"]],["v-2fa9d5fe","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%87%AA%E6%97%8B%E9%94%81.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Java锁之自旋锁</h1>
<p>自旋锁：spinlock，是指尝试获取锁的线程不会立即阻塞，而是采用循环的方式去尝试获取锁，这样的好处是减少线程上下文切换的消耗，缺点是循环会消耗CPU</p>
<p>原来提到的比较并交换，底层使用的就是自旋，自旋就是多次尝试，多次访问，不会阻塞的状态就是自旋。</p>
<p></p>
<h2> 优缺点</h2>
<p>优点：循环比较获取直到成功为止，没有类似于wait的阻塞</p>
<p>缺点：当不断自旋的线程越来越多的时候，会因为执行while循环不断的消耗CPU资源</p>
<h2> 手写自旋锁</h2>
<p>通过CAS操作完成自旋锁，A线程先进来调用myLock方法自己持有锁5秒，B随后进来发现当前有线程持有锁，不是null，所以只能通过自旋等待，直到A释放锁后B随后抢到</p>`,r:{minutes:1.92,words:575},y:"a",t:"Java锁之自旋锁"},["/other/audition/JUC/Java锁之自旋锁.html","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%87%AA%E6%97%8B%E9%94%81","/other/audition/JUC/Java锁之自旋锁.md","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%87%AA%E6%97%8B%E9%94%81.md"]],["v-c60a508e","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%AF%BB%E5%86%99%E9%94%81.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Java锁之读写锁</h1>
<h2> 概念</h2>
<p>独占锁：指该锁一次只能被一个线程所持有。对ReentrantLock和Synchronized而言都是独占锁</p>
<p>共享锁：指该锁可以被多个线程锁持有</p>
<p>对ReentrantReadWriteLock其读锁是共享，其写锁是独占</p>
<p>写的时候只能一个人写，但是读的时候，可以多个人同时读</p>
<h2> 为什么会有写锁和读锁</h2>
<p>原来我们使用ReentrantLock创建锁的时候，是独占锁，也就是说一次只能一个线程访问，但是有一个读写分离场景，读的时候想同时进行，因此原来独占锁的并发性就没这么好了，因为读锁并不会造成数据不一致的问题，因此可以多个人共享读</p>`,r:{minutes:5.31,words:1592},y:"a",t:"Java锁之读写锁"},["/other/audition/JUC/Java锁之读写锁.html","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%AF%BB%E5%86%99%E9%94%81","/other/audition/JUC/Java锁之读写锁.md","/other/audition/JUC/Java%E9%94%81%E4%B9%8B%E8%AF%BB%E5%86%99%E9%94%81.md"]],["v-5c881476","/other/audition/JUC/Semaphore.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Semaphore：信号量</h1>
<h2> 概念</h2>
<p>信号量主要用于两个目的</p>
<ul>
<li>一个是用于共享资源的互斥使用</li>
<li>另一个用于并发线程数的控制</li>
</ul>
<h2> 代码</h2>
<p>我们模拟一个抢车位的场景，假设一共有6个车，3个停车位</p>
<p>那么我们首先需要定义信号量为3，也就是3个停车位</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 初始化一个信号量为3，默认是false 非公平锁， 模拟3个停车位
*/</span>
<span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.6,words:481},y:"a",t:"Semaphore：信号量"},["/other/audition/JUC/Semaphore","/other/audition/JUC/Semaphore.md"]],["v-19968dde","/other/audition/JUC/Synchronized%E5%92%8CLock%E7%9A%84%E5%8C%BA%E5%88%AB.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> Synchronized和Lock的区别</h1>
<h2> 前言</h2>
<p>早期的时候我们对线程的主要操作为：</p>
<ul>
<li>synchronized wait notify</li>
</ul>
<p>然后后面出现了替代方案</p>
<ul>
<li>lock await signal</li>
</ul>
<p></p>
<h2> 问题</h2>
<h3> synchronized 和 lock 有什么区别？用新的lock有什么好处？举例说明</h3>
<ul>
<li>synchronized 和 lock 有什么区别？用新的lock有什么好处？举例说明</li>
</ul>`,r:{minutes:3.86,words:1157},y:"a",t:"Synchronized和Lock的区别"},["/other/audition/JUC/Synchronized和Lock的区别.html","/other/audition/JUC/Synchronized%E5%92%8CLock%E7%9A%84%E5%8C%BA%E5%88%AB","/other/audition/JUC/Synchronized和Lock的区别.md","/other/audition/JUC/Synchronized%E5%92%8CLock%E7%9A%84%E5%8C%BA%E5%88%AB.md"]],["v-ee8ad7fc","/other/audition/JUC/Synchronized%E6%97%A0%E6%B3%95%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92%E5%8D%B4%E8%83%BD%E4%BF%9D%E8%AF%81%E6%9C%89%E5%BA%8F%E6%80%A7.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> 为什么Synchronized无法禁止指令重排，却能保证有序性</h1>
<h2> 前言</h2>
<p>首先我们要分析下这道题，这简单的一个问题，其实里面还是包含了很多信息的，要想回答好这个问题，面试者至少要知道一下概念：</p>
<ul>
<li>Java内存模型</li>
<li>并发编程有序性问题</li>
<li>指令重排</li>
<li>synchronized锁</li>
<li>可重入锁</li>
<li>排它锁</li>
<li>as-if-serial语义</li>
<li>单线程&amp;多线程</li>
</ul>
<h2> 标准解答</h2>
<p>为了进一步提升计算机各方面能力，在硬件层面做了很多优化，如处理器优化和指令重排等，但是这些技术的引入就会导致有序性问题。</p>`,r:{minutes:2.38,words:714},y:"a",t:"为什么Synchronized无法禁止指令重排，却能保证有序性"},["/other/audition/JUC/Synchronized无法禁止指令重排却能保证有序性.html","/other/audition/JUC/Synchronized%E6%97%A0%E6%B3%95%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92%E5%8D%B4%E8%83%BD%E4%BF%9D%E8%AF%81%E6%9C%89%E5%BA%8F%E6%80%A7","/other/audition/JUC/Synchronized无法禁止指令重排却能保证有序性.md","/other/audition/JUC/Synchronized%E6%97%A0%E6%B3%95%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92%E5%8D%B4%E8%83%BD%E4%BF%9D%E8%AF%81%E6%9C%89%E5%BA%8F%E6%80%A7.md"]],["v-6bdaf652","/other/audition/JUC/Volatile%E4%B8%8D%E4%BF%9D%E8%AF%81%E5%8E%9F%E5%AD%90%E6%80%A7.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> Volatile不保证原子性</h1>
<h2> 前言</h2>
<p>通过前面对JMM的介绍，我们知道，各个线程对主内存中共享变量的操作都是各个线程各自拷贝到自己的工作内存进行操作后在写回到主内存中的。</p>
<p>这就可能存在一个线程AAA修改了共享变量X的值，但是还未写入主内存时，另外一个线程BBB又对主内存中同一共享变量X进行操作，但此时A线程工作内存中共享变量X对线程B来说是不可见，这种工作内存与主内存同步延迟现象就造成了可见性问题。</p>
<h2> 原子性</h2>
<p>不可分割，完整性，也就是说某个线程正在做某个具体业务时，中间不可以被加塞或者被分割，需要具体完成，要么同时成功，要么同时失败。</p>`,r:{minutes:18.74,words:5623},y:"a",t:"Volatile不保证原子性"},["/other/audition/JUC/Volatile不保证原子性.html","/other/audition/JUC/Volatile%E4%B8%8D%E4%BF%9D%E8%AF%81%E5%8E%9F%E5%AD%90%E6%80%A7","/other/audition/JUC/Volatile不保证原子性.md","/other/audition/JUC/Volatile%E4%B8%8D%E4%BF%9D%E8%AF%81%E5%8E%9F%E5%AD%90%E6%80%A7.md"]],["v-20305f5e","/other/audition/JUC/Volatile%E5%92%8CJMM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> Volatile和JMM内存模型的可见性</h1>
<ul>
<li>JUC（java.util.concurrent）
<ul>
<li>进程和线程
<ul>
<li>进程：后台运行的程序（我们打开的一个软件，就是进程）</li>
<li>线程：轻量级的进程，并且一个进程包含多个线程（同在一个软件内，同时运行窗口，就是线程）</li>
</ul>
</li>
<li>并发和并行
<ul>
<li>并发：同时访问某个东西，就是并发</li>
<li>并行：一起做某些事情，就是并行</li>
</ul>
</li>
</ul>
</li>
<li>JUC下的三个包
<ul>
<li>java.util.concurrent
<ul>
<li>java.util.concurrent.atomic</li>
<li>java.util.concurrent.locks</li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:6.21,words:1862},y:"a",t:"Volatile和JMM内存模型的可见性"},["/other/audition/JUC/Volatile和JMM内存模型的可见性.html","/other/audition/JUC/Volatile%E5%92%8CJMM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7","/other/audition/JUC/Volatile和JMM内存模型的可见性.md","/other/audition/JUC/Volatile%E5%92%8CJMM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%8F%AF%E8%A7%81%E6%80%A7.md"]],["v-0bc86b6e","/other/audition/JUC/Volatile%E7%9A%84%E5%BA%94%E7%94%A8.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC","设计模式"],e:`<h1> Volatile的应用</h1>
<h2> 单例模式DCL代码</h2>
<p>首先回顾一下，单线程下的单例模式代码</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SingletonDemo</span> instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">SingletonDemo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\t 我是构造方法SingletonDemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonDemo</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 这里的 == 是比较内存地址</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">SingletonDemo</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.76,words:1127},y:"a",t:"Volatile的应用"},["/other/audition/JUC/Volatile的应用.html","/other/audition/JUC/Volatile%E7%9A%84%E5%BA%94%E7%94%A8","/other/audition/JUC/Volatile的应用.md","/other/audition/JUC/Volatile%E7%9A%84%E5%BA%94%E7%94%A8.md"]],["v-15868bda","/other/audition/JUC/Volatile%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> Volatile禁止指令重排</h1>
<p>计算机在执行程序时，为了提高性能，编译器和处理器常常会对指令重排，一般分为以下三种：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>源代码 -&gt; 编译器优化的重排 -&gt; 指令并行的重排 -&gt; 内存系统的重排 -&gt; 最终执行指令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:4.02,words:1205},y:"a",t:"Volatile禁止指令重排"},["/other/audition/JUC/Volatile禁止指令重排.html","/other/audition/JUC/Volatile%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92","/other/audition/JUC/Volatile禁止指令重排.md","/other/audition/JUC/Volatile%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92.md"]],["v-c1ed0eaa","/other/audition/JUC/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JUC"],e:`<h1> 乐观锁和悲观锁</h1>
<h2> 乐观锁</h2>
<h3> 概念</h3>
<p>乐观锁：顾名思义，就是十分乐观，它总是认为不会出现问题，无论干什么都不去上锁~，如果出现了问题，再次更新值测试，这里使用了version字段。</p>
<p>也就是每次更新的时候同时维护一个version字段</p>
<h3> 乐观锁实现方式</h3>
<ul>
<li>取出记录时，获取当前的version</li>
<li>更新时，带上这个version</li>
<li>执行更新时，set version = newVersion where version = oldVersion</li>
<li>如果version不对，就更新失败</li>
</ul>`,r:{minutes:1.08,words:323},y:"a",t:"乐观锁和悲观锁"},["/other/audition/JUC/乐观锁和悲观锁.html","/other/audition/JUC/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81","/other/audition/JUC/乐观锁和悲观锁.md","/other/audition/JUC/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81.md"]],["v-65b076e8","/other/audition/JUC/%E5%80%BC%E4%BC%A0%E9%80%92%E5%92%8C%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92.html",{d:16801344e5,l:"2023年3月30日",c:"面试",g:["JUC"],e:`<h1> 值传递和引用传递</h1>
<h2> 举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> personName<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> personName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>personName <span class="token operator">=</span> personName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransferValueDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeValue1</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeValue2</span><span class="token punctuation">(</span><span class="token class-name">Person</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        person<span class="token punctuation">.</span><span class="token function">setPersonName</span><span class="token punctuation">(</span><span class="token string">"XXXX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeValue3</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        str <span class="token operator">=</span> <span class="token string">"XXX"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TransferValueDemo</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransferValueDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 定义基本数据类型</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
        test<span class="token punctuation">.</span><span class="token function">changeValue1</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"age ----"</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 实例化person类</span>
        <span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test<span class="token punctuation">.</span><span class="token function">changeValue2</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"personName-----"</span> <span class="token operator">+</span> person<span class="token punctuation">.</span><span class="token function">getPersonName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// String</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">;</span>
        test<span class="token punctuation">.</span><span class="token function">changeValue3</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"string-----"</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.37,words:410},y:"a",t:"值传递和引用传递"},["/other/audition/JUC/值传递和引用传递.html","/other/audition/JUC/%E5%80%BC%E4%BC%A0%E9%80%92%E5%92%8C%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92","/other/audition/JUC/值传递和引用传递.md","/other/audition/JUC/%E5%80%BC%E4%BC%A0%E9%80%92%E5%92%8C%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92.md"]],["v-bc4804ee","/other/audition/JUC/%E6%AD%BB%E9%94%81%E7%BC%96%E7%A0%81%E5%8F%8A%E5%AE%9A%E4%BD%8D%E5%88%86%E6%9E%90.html",{d:16803936e5,l:"2023年4月2日",c:"面试",g:["JUC"],e:`<h1> 死锁编码及定位分析</h1>
<h2> 概念</h2>
<p>死锁是指两个或多个以上的进程在执行过程中，因争夺资源而造成一种互相等待的现象，若无外力干涉那他们都将无法推进下去。如果资源充足，进程的资源请求都能够得到满足，死锁出现的可能性就很低，否则就会因争夺有限的资源而陷入死锁。</p>
<p></p>
<h2> 产生死锁的原因</h2>
<ul>
<li>系统资源不足</li>
<li>进程运行推进的顺序不对</li>
<li>资源分配不当</li>
</ul>
<h2> 死锁产生的四个必要条件</h2>
<ul>
<li>互斥
<ul>
<li>解决方法：把互斥的共享资源封装成可同时访问</li>
</ul>
</li>
<li>占有且等待
<ul>
<li>解决方法：进程请求资源时，要求它不占有任何其它资源，也就是它必须一次性申请到所有的资源，这种方式会导致资源效率低。</li>
</ul>
</li>
<li>非抢占式
<ul>
<li>解决方法：如果进程不能立即分配资源，要求它不占有任何其他资源，也就是只能够同时获得所有需要资源时，才执行分配操作</li>
</ul>
</li>
<li>循环等待
<ul>
<li>解决方法：对资源进行排序，要求进程按顺序请求资源。</li>
</ul>
</li>
</ul>`,r:{minutes:2.37,words:712},y:"a",t:"死锁编码及定位分析"},["/other/audition/JUC/死锁编码及定位分析.html","/other/audition/JUC/%E6%AD%BB%E9%94%81%E7%BC%96%E7%A0%81%E5%8F%8A%E5%AE%9A%E4%BD%8D%E5%88%86%E6%9E%90","/other/audition/JUC/死锁编码及定位分析.md","/other/audition/JUC/%E6%AD%BB%E9%94%81%E7%BC%96%E7%A0%81%E5%8F%8A%E5%AE%9A%E4%BD%8D%E5%88%86%E6%9E%90.md"]],["v-55b50432","/other/audition/JUC/%E7%BA%BF%E7%A8%8B%E6%B1%A0.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> 线程池</h1>
<h2> 前言</h2>
<p>获取多线程的方法，我们都知道有三种，还有一种是实现Callable接口</p>
<ul>
<li>实现Runnable接口</li>
<li>实现Callable接口</li>
<li>实例化Thread类</li>
<li>使用线程池获取</li>
</ul>
<h2> Callable接口</h2>
<p>Callable接口，是一种让线程执行完成后，能够返回结果的</p>
<p>在说到Callable接口的时候，我们不得不提到Runnable接口</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 实现Runnable接口
 */</span>
<span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:17.36,words:5207},y:"a",t:"线程池"},["/other/audition/JUC/线程池.html","/other/audition/JUC/%E7%BA%BF%E7%A8%8B%E6%B1%A0","/other/audition/JUC/线程池.md","/other/audition/JUC/%E7%BA%BF%E7%A8%8B%E6%B1%A0.md"]],["v-7bf5fab5","/other/audition/JUC/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html",{d:16802208e5,l:"2023年3月31日",c:"面试",g:["JUC"],e:`<h1> 阻塞队列</h1>
<h2> 概念</h2>
<h3> 队列</h3>
<p>队列就可以想成是一个数组，从一头进入，一头出去，排队买饭</p>
<h3> 阻塞队列</h3>
<p>BlockingQueue 阻塞队列，排队拥堵，首先它是一个队列，而一个阻塞队列在数据结构中所起的作用大致如下图所示：</p>
<p></p>
<p>线程1往阻塞队列中添加元素，而线程2从阻塞队列中移除元素</p>
<ul>
<li>
<p><code>当阻塞队列是空时，从队列中获取元素的操作将会被阻塞</code></p>
<ul>
<li>当蛋糕店的柜子空的时候，无法从柜子里面获取蛋糕</li>
</ul>
</li>
<li>
<p><code>当阻塞队列是满时，从队列中添加元素的操作将会被阻塞</code></p>
<ul>
<li>当蛋糕店的柜子满的时候，无法继续向柜子里面添加蛋糕了</li>
</ul>
</li>
</ul>`,r:{minutes:10.49,words:3146},y:"a",t:"阻塞队列"},["/other/audition/JUC/阻塞队列.html","/other/audition/JUC/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97","/other/audition/JUC/阻塞队列.md","/other/audition/JUC/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.md"]],["v-ef415652","/other/audition/JVM/GC%20Roots.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> GC Roots</h1>
<h2> JVM垃圾回收的时候如何确定垃圾？是否知道什么是GC Roots</h2>
<h3> 什么是垃圾</h3>
<p>简单来说就是内存中已经不再被使用的空间就是垃圾</p>
<h3> 如何判断一个对象是否可以被回收</h3>
<h4> 引用计数法</h4>
<p>Java中，引用和对象是有关联的。如果要操作对象则必须用引用进行。</p>
<p>因此，很显然一个简单的办法就是通过引用计数来判断一个对象是否可以回收。简单说，给对象中添加一个引用计数器</p>
<p>每当有一个地方引用它，计数器值加1</p>
<p>每当有一个引用失效，计数器值减1</p>`,r:{minutes:2.95,words:885},y:"a",t:"GC Roots"},["/other/audition/JVM/GC Roots.html","/other/audition/JVM/GC%20Roots","/other/audition/JVM/GC Roots.md","/other/audition/JVM/GC%20Roots.md"]],["v-f5e4303e","/other/audition/JVM/JVM%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> JVM体系结构</h1>
<h2> 概览</h2>
<p></p>
<p>java gc 主要回收的是 方法区 和 堆中的内容</p>
<p></p>
<h2> 类加载器</h2>
<ul>
<li>类加载器是什么</li>
<li>双亲委派机制</li>
<li>Java类加载的沙箱安全机制</li>
</ul>
<h2> 常见的垃圾回收算法</h2>
<ul>
<li>引用计数</li>
</ul>
<p></p>
<p>在双端循环，互相引用的时候，容易报错，目前很少使用这种方式了</p>
<ul>
<li>复制</li>
</ul>
<p>复制算法在年轻代的时候，进行使用，复制时候有交换</p>`,r:{minutes:.68,words:205},y:"a",t:"JVM体系结构"},["/other/audition/JVM/JVM体系结构.html","/other/audition/JVM/JVM%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84","/other/audition/JVM/JVM体系结构.md","/other/audition/JVM/JVM%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.md"]],["v-26a155c8","/other/audition/JVM/JVM%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> JVM参数调优</h1>
<h2> 前言</h2>
<p>你说你做过JVM调优和参数配置，请问如何盘点查看JVM系统默认值</p>
<p>使用jps和jinfo进行查看</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-Xms：初始堆空间
-Xmx：堆最大值
-Xss：栈空间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.15,words:2444},y:"a",t:"JVM参数调优"},["/other/audition/JVM/JVM参数调优.html","/other/audition/JVM/JVM%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98","/other/audition/JVM/JVM参数调优.md","/other/audition/JVM/JVM%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98.md"]],["v-35242adc","/other/audition/JVM/Java%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> Java中的引用</h1>
<h2> 前言</h2>
<p>在原来的时候，我们谈到一个类的实例化</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:9.42,words:2827},y:"a",t:"Java中的引用"},["/other/audition/JVM/Java中的引用.html","/other/audition/JVM/Java%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8","/other/audition/JVM/Java中的引用.md","/other/audition/JVM/Java%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8.md"]],["v-ce39e9e0","/other/audition/JVM/Java%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BAOOM.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> Java内存溢出OOM</h1>
<h2> 经典错误</h2>
<p>JVM中常见的两个错误</p>
<p>StackOverflowError ：栈溢出</p>
<p>OutOfMemoryError: java heap space：堆溢出</p>
<p>除此之外，还有以下的错误</p>
<ul>
<li>java.lang.StackOverflowError</li>
<li>java.lang.OutOfMemoryError：java heap space</li>
<li>java.lang.OutOfMemoryError：GC overhead limit exceeded</li>
<li>java.lang.OutOfMemoryError：Direct buffer memory</li>
<li>java.lang.OutOfMemoryError：unable to create new native thread</li>
<li>java.lang.OutOfMemoryError：Metaspace</li>
</ul>`,r:{minutes:6.38,words:1914},y:"a",t:"Java内存溢出OOM"},["/other/audition/JVM/Java内存溢出OOM.html","/other/audition/JVM/Java%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BAOOM","/other/audition/JVM/Java内存溢出OOM.md","/other/audition/JVM/Java%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BAOOM.md"]],["v-ff4661a4","/other/audition/JVM/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html",{d:168048e7,l:"2023年4月3日",c:"面试",g:["JVM"],e:`<h1> 垃圾收集器</h1>
<h2> GC垃圾回收算法和垃圾收集器关系</h2>
<blockquote>
<p>天上飞的理念，要有落地的实现（垃圾收集器就是GC垃圾回收算法的实现）</p>
<p>GC算法是内存回收的方法论，垃圾收集器就是算法的落地实现</p>
</blockquote>
<p>GC算法主要有以下几种</p>
<ul>
<li>引用计数（几乎不用，无法解决循环引用的问题）</li>
<li>复制拷贝（用于新生代）</li>
<li>标记清除（用于老年代）</li>
<li>标记整理（用于老年代）</li>
</ul>
<p>因为目前为止还没有完美的收集器出现，更没有万能的收集器，只是针对具体应用最合适的收集器，进行分代收集（那个代用什么收集器）</p>`,r:{minutes:18.52,words:5555},y:"a",t:"垃圾收集器"},["/other/audition/JVM/垃圾收集器.html","/other/audition/JVM/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8","/other/audition/JVM/垃圾收集器.md","/other/audition/JVM/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.md"]],["v-2b13dc0f","/java/java-basic/object/lower/class-coder.html",{d:16694208e5,l:"2022年11月26日",c:"基础",g:["JAVA"],e:`<h1> 类的结构：代码块</h1>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>类的成员之四：代码块(初始化块)（重要性较属性、方法、构造器差一些）</p>
</div>
<h2> 代码块的作用</h2>
<p>用来初始化类、对象的信息</p>
<h2> 分类</h2>
<p>代码块要是使用修饰符，只能使用static
<code>静态代码块</code> vs <code>非静态代码块</code></p>
<p><code>静态代码块</code></p>
<ul>
<li>内部可以输出语句</li>
<li>随着类的加载而执行,而且只执行一次</li>
<li>作用：初始化类的信息</li>
<li>如果一个类中定义了多个静态代码块，则按照声明的先后顺序执行</li>
<li>静态代码块的执行要优先于非静态代码块的执行</li>
<li>静态代码块内只能调用静态的属性、静态的方法，不能调用非静态的结构</li>
</ul>`,r:{minutes:1.49,words:448},y:"a",t:"类的结构：代码块"},["/java/java-basic/object/lower/class-coder","/java/java-basic/object/lower/class-coder.md"]],["v-6f34ec08","/java/java-basic/object/lower/class-innerClass.html",{d:16695072e5,l:"2022年11月27日",c:"基础",g:["JAVA"],e:`<h1> 类的结构：内部类</h1>
<div class="hint-container tip">
<p class="hint-container-title">内部类</p>
<p>类的第五个成员</p>
</div>
<h2> 定义</h2>
<p>Java中允许将一个类A声明在另一个类B中，则类A就是内部类，类B称为外部类.</p>
<h2> 内部类的分类</h2>
<p><code>成员内部类</code>（静态、非静态 ） vs <code>局部内部类</code> (方法内、代码块内、构造器内)</p>
<h2> 成员内部类的理解</h2>
<ol>
<li>一方面，作为外部类的成员：
<ul>
<li>调用外部类的结构</li>
<li>可以被static修饰</li>
<li>可以被4种不同的权限修饰</li>
</ul>
</li>
<li>另一方面，作为一个类：
<ul>
<li>类内可以定义属性、方法、构造器等</li>
<li>可以被final修饰，表示此类不能被继承。言外之意，不使用final，就可以被继承</li>
<li>可以被abstract修饰</li>
</ul>
</li>
</ol>`,r:{minutes:2,words:601},y:"a",t:"类的结构：内部类"},["/java/java-basic/object/lower/class-innerClass","/java/java-basic/object/lower/class-innerClass.md"]],["v-b4d8d1b6","/java/java-basic/object/lower/class-main.html",{d:16694208e5,l:"2022年11月26日",c:"基础",g:["JAVA"],e:`<h1> main()的使用说明</h1>
<ol>
<li><code>main()</code>方法作为程序的入口</li>
<li><code>main()</code>方法也是一个普通的静态方法</li>
<li><code>main()</code>方法可以作为我们与控制台交互的方式。（之前：使用Scanner）</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如何将控制台获取的数据传给形参：String[] args?<br>
运行时：java 类名 "Tom" "Jerry" "123" "true"</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// "Tom"</span>
<span class="token function">sysout</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// "true"  --&gt;Boolean.parseBoolean(args[3]);</span>
<span class="token function">sysout</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 报异常</span>
<span class="token function">sysout</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,r:{minutes:.8,words:241},y:"a",t:"main()的使用说明"},["/java/java-basic/object/lower/class-main","/java/java-basic/object/lower/class-main.md"]],["v-1d981fe6","/java/java-basic/object/lower/keyword-abstract.html",{d:16694208e5,l:"2022年11月26日",c:"基础",g:["JAVA"],e:`<h1> 关键字：abstract</h1>
<p><code>abstract</code>: 抽象的</p>
<h2> 可以用来修饰</h2>
<p>类、方法</p>
<h2> 具体</h2>
<h3> 修饰类：抽象类</h3>
<ol>
<li>此类不能实例化</li>
<li>抽象类中一定有构造器，便于子类实例化时调用（涉及：子类对象实例化的全过程）</li>
<li>开发中，都会提供抽象类的子类，让子类对象实例化，完成相关的操作 ---&gt;抽象的使用前提：继承性</li>
</ol>
<h3> 修饰方法：抽象方法</h3>
<ol>
<li>抽象方法只方法的声明，没方法体</li>
<li>包含抽象方法的类，一定是一个抽象类。反之，抽象类中可以没有抽象方法的。</li>
<li>若子类重写了父类中的所的抽象方法后，此子类方可实例化</li>
<li>若子类没重写父类中的所的抽象方法，则此子类也是一个抽象类，需要使用abstract修饰</li>
</ol>`,r:{minutes:1.77,words:530},y:"a",t:"关键字：abstract"},["/java/java-basic/object/lower/keyword-abstract","/java/java-basic/object/lower/keyword-abstract.md"]],["v-7fc97266","/java/java-basic/object/lower/keyword-final.html",{d:16693344e5,l:"2022年11月25日",c:"基础",g:["JAVA"],e:`<h1> 关键字：final</h1>
<p><code>final</code>：最终的</p>
<h2> 可以用来修饰</h2>
<p>类、方法、变量</p>
<h2> 具体</h2>
<h3> 用来修饰一个类</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>此类不能被其他类所继承。</p>
</div>
<div class="hint-container info">
<p class="hint-container-title">比如</p>
<p><code>String类</code>、<code>System类</code>、<code>StringBuffer类</code></p>
</div>`,r:{minutes:.75,words:225},y:"a",t:"关键字：final"},["/java/java-basic/object/lower/keyword-final","/java/java-basic/object/lower/keyword-final.md"]],["v-a4d4d02c","/java/java-basic/object/lower/keyword-interface.html",{d:16695072e5,l:"2022年11月27日",c:"基础",g:["JAVA"],e:`<h1> 关键字：interface</h1>
<p><code>interface</code>:接口</p>
<h2> 使用说明</h2>
<ol>
<li>
<p>接口使用interface来定义</p>
</li>
<li>
<p>Java中，接口和类是并列的两个结构</p>
</li>
<li>
<p>如何定义接口：定义接口中的成员</p>
<div class="hint-container tip">
<p class="hint-container-title">JDK7及以前</p>
<p>只能定义全局常量和抽象方法</p>
<ul>
<li>全局常量：<code>public static final</code>的.但是书写时，可以省略不写</li>
<li>抽象方法：<code>public abstract</code>的</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">JDK8</p>
<p>除了定义全局常量和抽象方法之外，还可以定义静态方法、默认方法（略)</p>
</div>
</li>
<li>
<p>接口中不能定义构造器的！意味着接口不可以实例化</p>
</li>
<li>
<p>Java开发中，接口通过让类去实现(implements)的方式来使用.</p>
<p>如果实现类覆盖了接口中的所抽象方法，则此实现类就可以实例化</p>
<p>如果实现类没覆盖接口中所的抽象方法，则此实现类仍为一个抽象类</p>
</li>
<li>
<p>Java类可以实现多个接口 ---&gt;弥补了Java单继承性的局限性</p>
<p>格式：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">AA</span> <span class="token keyword">extends</span> <span class="token class-name">BB</span> <span class="token keyword">implements</span> <span class="token class-name">CC</span><span class="token punctuation">,</span><span class="token constant">DD</span><span class="token punctuation">,</span><span class="token constant">EE</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>接口与接口之间可以继承，而且可以多继承</p>
</li>
<li>
<p>接口的具体使用，体现多态性</p>
</li>
<li>
<p>接口，实际上可以看做是一种规范</p>
</li>
</ol>`,r:{minutes:2.77,words:832},y:"a",t:"关键字：interface"},["/java/java-basic/object/lower/keyword-interface","/java/java-basic/object/lower/keyword-interface.md"]],["v-38d6aec1","/java/java-basic/object/lower/keyword-static.html",{d:16693344e5,l:"2022年11月25日",c:"基础",g:["JAVA"],e:`<h1> 关键字：static</h1>
<p><code>static</code>: <strong>静态的</strong></p>
<h2> 可以用来修饰的结构</h2>
<p>主要用来修饰类的内部结构<br>
<code>属性</code>、<code>方法</code>、<code>代码块</code>、<code>内部类</code></p>
<h2> static修饰属性：静态变量（或类变量）</h2>
<ol>
<li>
<p>属性，是否使用static修饰，又分为：<code>静态属性</code> vs <code>非静态属性</code>(<code>实例变量</code>)</p>
<ul>
<li><code>实例变量</code>：我们创建了类的多个对象，每个对象都独立的拥一套类中的非静态属性。当修改其中一个对象中的非静态属性时，不会导致其他对象中同样的属性值的修改。</li>
<li><code>静态变量</code>：我们创建了类的多个对象，多个对象共享同一个静态变量。当通过某一个对象修改静态变量时，会导致其他对象调用此静态变量时，是修改过了的。</li>
</ul>
</li>
<li>
<p>static修饰属性的其他说明</p>
<ul>
<li>静态变量随着类的加载而加载。可以通过<code>类.静态变量</code>的方式进行调用</li>
<li>静态变量的加载要早于对象的创建。</li>
<li>由于类只会加载一次，则静态变量在内存中也只会存在一份：存在方法区的静态域中。</li>
</ul>
</li>
<li>
<p>静态属性举例：<code>System.out</code>; <code>Math.PI</code>;</p>
</li>
</ol>`,r:{minutes:2.36,words:707},y:"a",t:"关键字：static"},["/java/java-basic/object/lower/keyword-static","/java/java-basic/object/lower/keyword-static.md"]],["v-87a67b52","/java/java-basic/object/middle/class-extends.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 面向对象的特征二：继承性</h1>
<h2> 为什么要有类的继承性？(继承性的好处）</h2>
<ol>
<li>减少了代码的冗余，提高了代码的复用性</li>
<li>便于功能的扩展</li>
<li>为之后多态性的使用，提供了前提
</li>
</ol>
<h2> 继承性的格式</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// A:子类、派生类、subclass</span>
<span class="token comment">// B:父类、超类、基类、superclass</span>
<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.52,words:457},y:"a",t:"面向对象的特征二：继承性"},["/java/java-basic/object/middle/class-extends","/java/java-basic/object/middle/class-extends.md"]],["v-619018ba","/java/java-basic/object/middle/class-object.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> Object类的使用</h1>
<h2> java.lang.Object类的说明</h2>
<ol>
<li>
<p><code>Object</code>类是所Java类的根父类</p>
</li>
<li>
<p>如果在类的声明中未使用extends关键字指明其父类，则默认父类为<code>java.lang.Object</code>类</p>
</li>
<li>
<p><code>Object类</code>中的功能(属性、方法)就具通用性。</p>
<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>属性：无<br>
方法：equals() / toString() / getClass() /hashCode() / clone() / finalize()
wait() 、 notify()、notifyAll()</p>
</div>
</li>
<li>
<p>Object类只声明了一个空参的构造器</p>
</li>
</ol>`,r:{minutes:2.21,words:663},y:"a",t:"Object类的使用"},["/java/java-basic/object/middle/class-object","/java/java-basic/object/middle/class-object.md"]],["v-09bf4e9d","/java/java-basic/object/middle/class-wrapper.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 包装类的使用</h1>
<h2> 为什么要有包装类(或封装类）</h2>
<p>为了使基本数据类型的变量具有类的特征，引入包装类。</p>
<h2> 基本数据类型与对应的包装类</h2>
<p></p>
<h2> 需要掌握的类型间的转换</h2>
<p>基本数据类型、包装类、String<br>
</p>
<div class="hint-container info">
<p class="hint-container-title">简易版</p>
<p>基本数据类型&lt;---&gt;包装类：JDK 5.0 新特性：自动装箱 与自动拆箱
基本数据类型、包装类---&gt;String:调用String重载的valueOf(Xxx xxx)
String---&gt;基本数据类型、包装类:调用包装类的parseXxx(String s)</p>
</div>`,r:{minutes:.65,words:195},y:"a",t:"包装类的使用"},["/java/java-basic/object/middle/class-wrapper","/java/java-basic/object/middle/class-wrapper.md"]],["v-5b3d0bee","/java/java-basic/object/middle/instantiation.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 子类对象实例化全过程</h1>
<p>理解即可</p>
<ol>
<li>
<p>从结果上看：继承性</p>
<p>子类继承父类以后，就获取了父类中声明的属性或方法。</p>
<p>创建子类的对象，在堆空间中，就会加载所父类中声明的属性。</p>
</li>
<li>
<p>从过程上看：
当我们通过子类的构造器创建子类对象时，我们一定会直接或间接的调用其父类的构造器，进而调用父类的父类的构造器，...直到调用了<code>java.lang.Object</code>
类中空参的构造器为止。正因为加载过所的父类的结构，所以才可以看到内存中父类中的结构，子类对象才可以考虑进行调用。</p>
<p></p>
</li>
<li>
<p>强调说明
虽然创建子类对象时，调用了父类的构造器，但是自始至终就创建过一个对象，即为<code>new</code>的子类对象。
</p>
</li>
</ol>`,r:{minutes:.82,words:246},y:"a",t:"子类对象实例化全过程"},["/java/java-basic/object/middle/instantiation","/java/java-basic/object/middle/instantiation.md"]],["v-b16bee38","/java/java-basic/object/middle/keyword-super.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 关键字：super</h1>
<p><strong><code>super</code>关键字可以理解为：<code>父类的</code></strong></p>
<h2> 可以用来调用的结构</h2>
<p><code>属性</code>、<code>方法</code>、<code>构造器</code></p>
<h2> super调用属性、方法</h2>
<ol>
<li>我们可以在子类的方法或构造器中。通过使用<code>super.属性</code>或<code>super.方法</code>
的方式，显式的调用父类中声明的属性或方法。但是，通常情况下，我们习惯省略<code>super.</code></li>
<li>特殊情况：当子类和父类中定义了同名的属性时，我们要想在子类中调用父类中声明的属性，则必须显式的使用<code>super.属性</code>
的方式，表明调用的是父类中声明的属性。</li>
<li>特殊情况：当子类重写了父类中的方法以后，我们想在子类的方法中调用父类中被重写的方法时，则必须显式的使用<code>super.方法</code>
的方式，表明调用的是父类中被重写的方法。</li>
</ol>`,r:{minutes:1.42,words:426},y:"a",t:"关键字：super"},["/java/java-basic/object/middle/keyword-super","/java/java-basic/object/middle/keyword-super.md"]],["v-af4c19ea","/java/java-basic/object/middle/override.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 方法的重写</h1>
<h2> 什么是方法的重写❓</h2>
<div class="hint-container tip">
<p class="hint-container-title">override 或 overwrite</p>
<p>子类继承父类以后，可以对父类中同名同参数的方法，进行覆盖操作.</p>
</div>
<h2> 应用</h2>
<p><code>重写</code>以后，当创建子类对象以后，通过子类对象调用子父类中的同名同参数的方法时，实际执行的是子类重写父类的方法。</p>
<h2> 举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Circle</span><span class="token punctuation">{</span>
    <span class="token comment">//求面积</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cylinder</span> <span class="token keyword">extends</span> <span class="token class-name">Circle</span><span class="token punctuation">{</span>
    <span class="token comment">//求表面积</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">findArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">class</span> <span class="token class-name">Account</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> amt<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">CheckAccount</span> <span class="token keyword">extends</span> <span class="token class-name">Account</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token keyword">double</span> amt<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.67,words:802},y:"a",t:"方法的重写"},["/java/java-basic/object/middle/override","/java/java-basic/object/middle/override.md"]],["v-0a02e885","/java/java-basic/object/middle/polymorphic.html",{d:16689888e5,l:"2022年11月21日",c:"基础",g:["JAVA"],e:`<h1> 面向对象的特征三：多态性</h1>
<h2> 多态性的理解</h2>
<p>可以理解为一个事物的多种形态。</p>
<h2> 何为多态性</h2>
<p>对象的多态性：父类的引用指向子类的对象（或子类的对象赋给父类的引用）
举例：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Person</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.35,words:706},y:"a",t:"面向对象的特征三：多态性"},["/java/java-basic/object/middle/polymorphic","/java/java-basic/object/middle/polymorphic.md"]],["v-2d386659","/java/java-basic/object/upper/class-constructor.html",{d:16689024e5,l:"2022年11月20日",c:"基础",g:["JAVA"],e:`<h1> 类的结构之三：构造器</h1>
<h2> 作用</h2>
<ol>
<li>创建对象</li>
<li>初始化对象的信息</li>
</ol>
<h2> 使用说明</h2>
<ol>
<li>如果没显式的定义类的构造器的话，则系统默认提供一个空参的构造器</li>
<li>定义构造器的格式：权限修饰符 类名(形参列表){}</li>
<li>一个类中定义的多个构造器，彼此构成重载</li>
<li>一旦我们显式的定义了类的构造器之后，系统就不再提供默认的空参构造器</li>
<li>一个类中，至少会有一个构造器。</li>
</ol>
<h2> 举例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 构造器</span>
<span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Person()....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    name <span class="token operator">=</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
	
<span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
    name <span class="token operator">=</span> n<span class="token punctuation">;</span>
    age <span class="token operator">=</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.97,words:291},y:"a",t:"类的结构之三：构造器"},["/java/java-basic/object/upper/class-constructor","/java/java-basic/object/upper/class-constructor.md"]],["v-7db4671e","/java/java-basic/object/upper/class-method.html",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA"],e:`<h1> 类的结构之二：方法</h1>
<p><strong>描述类应该具的功能</strong></p>
<div class="hint-container info">
<p class="hint-container-title">比如</p>
<p>Math类：sqrt()、random() ...<br>
Scanner类：nextXxx() ...<br>
Arrays类：sort()、binarySearch()、toString()、equals() ...</p>
</div>
<p>举例：</p>
<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">int</span> hour<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNation</span><span class="token punctuation">(</span><span class="token class-name">String</span> nation<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.96,words:1488},y:"a",t:"类的结构之二：方法"},["/java/java-basic/object/upper/class-method","/java/java-basic/object/upper/class-method.md"]],["v-8406ca00","/java/java-basic/object/upper/class-structure.html",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA"],e:`<h1> 类的结构之一：属性</h1>
<p>类的设计中，两个重要结构之一：属性</p>
<h2> <code>属性</code>  🆚  <code>局部变量</code></h2>
<h3> 相同点</h3>
<ol>
<li>定义变量的格式：数据类型  <code>变量名 = 变量值</code></li>
<li>先声明，后使用</li>
<li>变量都其对应的作用域</li>
</ol>
<h3> 不同点</h3>
<ol>
<li>在类中声明的位置的不同
<ul>
<li>属性：直接定义在类的一对{}内</li>
<li>局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量</li>
</ul>
</li>
<li>关于权限修饰符的不同
<ul>
<li>属性：可以在声明属性时，指明其权限，使用权限修饰符。<div class="hint-container info">
<p class="hint-container-title">常用的权限修饰符</p>
<p><code>private</code>、<code>public</code>、<code>缺省</code>、<code>protected</code></p>
</div>
</li>
<li>局部变量：不可以使用权限修饰符。</li>
</ul>
</li>
<li>默认初始化值的情况：
<ul>
<li>属性：类的属性，根据其类型，都默认初始化值。
<ul>
<li>整型（byte、short、int、long：0）</li>
<li>浮点型（float、double：0.0）</li>
<li>字符型（char：0 （或'\\u0000'））</li>
<li>布尔型（boolean：false）</li>
<li>引用数据类型（类、数组、接口：null）</li>
</ul>
</li>
<li>局部变量：没默认初始化值。<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>意味着，我们在调用局部变量之前，一定要显式赋值。</p>
</div>
</li>
</ul>
</li>
<li>在内存中加载的位置：
<ul>
<li>属性：加载到堆空间中（非static）</li>
<li>局部变量：加载到栈空间</li>
</ul>
</li>
</ol>`,r:{minutes:1.08,words:325},y:"a",t:"类的结构之一：属性"},["/java/java-basic/object/upper/class-structure","/java/java-basic/object/upper/class-structure.md"]],["v-40bbb766","/java/java-basic/object/upper/class.html",{d:1668816e6,l:"2022年11月19日",c:"基础",g:["JAVA"],e:`<h1> 类与对象</h1>
<h2> 面向对象学习的三条主线</h2>
<h3> 1. Java类及类的成员</h3>
<p><code>属性</code> <code>方法</code> <code>构造器</code> <code>代码块</code> <code>内部类</code></p>
<h3> 2. 面向对象的大特征</h3>
<p><code>封装性</code> <code>继承性</code> <code>多态性(抽象性)</code></p>
<h3> 3. 其它关键字</h3>
<p><code>this</code> <code>super</code> <code>static</code> <code>final</code> <code>abstract</code> <code>interface</code> <code>package</code> <code>import</code> ...</p>`,r:{minutes:2.32,words:697},y:"a",t:"类与对象"},["/java/java-basic/object/upper/class","/java/java-basic/object/upper/class.md"]],["v-6d24fe2c","/java/java-basic/object/upper/encapsulation.html",{d:16689024e5,l:"2022年11月20日",c:"基础",g:["JAVA"],e:`<h1> 面向对象的特征一：封装性</h1>
<h3> 为什么要引入封装性❓</h3>
<p>我们程序设计追求<code>高内聚</code>，<code>低耦合</code>。</p>
<p><code>高内聚</code> ：类的内部数据操作细节自己完成，不允许外部干涉；<br>
<code>低耦合</code> ：仅对外暴露少量的方法用于使用。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>隐藏对象内部的复杂性，只对外公开简单的接口。便于外界调用，从而提高系统的可扩展性、可维护性。通俗的说，把该隐藏的隐藏起来，该暴露的暴露出来。这就是封装性的设计思想。</p>
</div>`,r:{minutes:1.87,words:561},y:"a",t:"面向对象的特征一：封装性"},["/java/java-basic/object/upper/encapsulation","/java/java-basic/object/upper/encapsulation.md"]],["v-141471ea","/java/java-basic/object/upper/keyword-import.html",{d:16689024e5,l:"2022年11月20日",c:"基础",g:["JAVA"],e:`<h1> 关键字：package/import</h1>
<h2> package的使用</h2>
<h3> 使用说明</h3>
<ol>
<li>为了更好的实现项目中类的管理，提供包的概念</li>
<li>使用<code>package</code>声明类或接口所属的包，声明在源文件的首行</li>
<li>包，属于标识符，遵循标识符的命名规则、规范(xxxyyyzzz)、“见名知意”</li>
<li>每"."一次，就代表一层文件目录。</li>
</ol>
<h3> 举例</h3>
<ul>
<li>某航运软件系统包括：一组域对象、GUI和reports子系统
</li>
<li>MVC设计模式
</li>
</ul>`,r:{minutes:1.27,words:380},y:"a",t:"关键字：package/import"},["/java/java-basic/object/upper/keyword-import","/java/java-basic/object/upper/keyword-import.md"]],["v-54fd2172","/java/java-basic/object/upper/keyword-this.html",{d:16689024e5,l:"2022年11月20日",c:"基础",g:["JAVA"],e:`<h1> 关键字：this</h1>
<h2> 可以调用的结构</h2>
<p><code>属性</code>、<code>方法</code>；<code>构造器</code></p>
<h2> this调用属性、方法：</h2>
<p><code>this</code>理解为<code>当前对象</code> 或 <code>当前正在创建的对象</code></p>
<ol>
<li>
<p>在类的方法中，我们可以使用"<code>this</code>.属性"或"<code>this</code>.方法"的方式，调用当前对象属性或方法。但是，
通常情况下，我们都择省略"<code>this</code>."。特殊情况下，如果方法的形参和类的属性同名时，我们必须显式
的使用"<code>this</code>.变量"的方式，表明此变量是属性，而非形参。</p>
</li>
<li>
<p>在类的构造器中，我们可以使用"<code>this</code>.属性"或"<code>this</code>.方法"
的方式，调用当前正在创建的对象属性或方法。但是，通常情况下，我们都择省略"<code>this</code>."
。特殊情况下，如果构造器的形参和类的属性同名时，我们必须显式的使用"<code>this</code>.变量"的方式，表明此变量是属性，而非形参。</p>
</li>
</ol>`,r:{minutes:1.34,words:401},y:"a",t:"关键字：this"},["/java/java-basic/object/upper/keyword-this","/java/java-basic/object/upper/keyword-this.md"]],["v-3706649a","/404.html",{y:"p",t:""},["/404"]],["v-74bc627b","/about/",{y:"p",t:"About"},["/about/index.html"]],["v-e4cb1150","/other/",{y:"p",t:"Other"},["/other/index.html"]],["v-91ced15e","/java/design-patterns/",{y:"p",t:"Design Patterns"},["/java/design-patterns/index.html"]],["v-eb072ff4","/mysql/",{y:"p",t:"Mysql"},["/mysql/index.html"]],["v-93b8c1ec","/note/schema/",{y:"p",t:"Schema"},["/note/schema/index.html"]],["v-15054f24","/note/",{y:"p",t:"Note"},["/note/index.html"]],["v-4801eb2a","/other/audition/",{y:"p",t:"Audition"},["/other/audition/index.html"]],["v-440250b4","/java/JVM/memory-garbageCollection/",{y:"p",t:"Memory Garbage Collection"},["/java/JVM/memory-garbageCollection/index.html"]],["v-6d0a1e7c","/java/JVM/",{y:"p",t:"J V M"},["/java/JVM/index.html"]],["v-1ad2b313","/java/java-advanced/IOStream/",{y:"p",t:"I O Stream"},["/java/java-advanced/IOStream/index.html"]],["v-3a1fa58a","/java/java-advanced/collection/",{y:"p",t:"Collection"},["/java/java-advanced/collection/index.html"]],["v-1b060d2a","/java/java-advanced/common-utils/",{y:"p",t:"Common Utils"},["/java/java-advanced/common-utils/index.html"]],["v-7129cab8","/java/java-advanced/enum/",{y:"p",t:"Enum"},["/java/java-advanced/enum/index.html"]],["v-54757ce4","/java/java-advanced/generic/",{y:"p",t:"Generic"},["/java/java-advanced/generic/index.html"]],["v-6f31d83b","/java/java-advanced/multi-thread/",{y:"p",t:"Multi Thread"},["/java/java-advanced/multi-thread/index.html"]],["v-8fb207d2","/java/java-advanced/network/",{y:"p",t:"Network"},["/java/java-advanced/network/index.html"]],["v-a7cf45e2","/java/java-advanced/new-features/",{y:"p",t:"New Features"},["/java/java-advanced/new-features/index.html"]],["v-d044bd64","/java/java-advanced/reflection/",{y:"p",t:"Reflection"},["/java/java-advanced/reflection/index.html"]],["v-0ecb4afc","/java/source-code/jdk/",{y:"p",t:"Jdk"},["/java/source-code/jdk/index.html"]],["v-4fed98a4","/java/source-code/",{y:"p",t:"Source Code"},["/java/source-code/index.html"]],["v-0728b3a3","/note/backend/spring/",{y:"p",t:"Spring"},["/note/backend/spring/index.html"]],["v-934e9182","/note/backend/",{y:"p",t:"Backend"},["/note/backend/index.html"]],["v-51873101","/other/audition/JUC/",{y:"p",t:"J U C"},["/other/audition/JUC/index.html"]],["v-518735f8","/other/audition/JVM/",{y:"p",t:"J V M"},["/other/audition/JVM/index.html"]],["v-14b300c6","/java/java-basic/object/lower/",{y:"p",t:"Lower"},["/java/java-basic/object/lower/index.html"]],["v-35cfc578","/java/java-basic/object/",{y:"p",t:"Object"},["/java/java-basic/object/index.html"]],["v-a96c067c","/java/java-basic/object/middle/",{y:"p",t:"Middle"},["/java/java-basic/object/middle/index.html"]],["v-24198745","/java/java-basic/object/upper/",{y:"p",t:"Upper"},["/java/java-basic/object/upper/index.html"]],["v-5bc93818","/category/",{y:"p",t:"分类",I:0},["/category/index.html"]],["v-744d024e","/tag/",{y:"p",t:"标签",I:0},["/tag/index.html"]],["v-e52c881c","/article/",{y:"p",t:"文章",I:0},["/article/index.html"]],["v-154dc4c4","/star/",{y:"p",t:"收藏",I:0},["/star/index.html"]],["v-01560935","/timeline/",{y:"p",t:"时间轴",I:0},["/timeline/index.html"]],["v-13b66e9c","/category/%E5%85%B6%E4%BB%96/",{y:"p",t:"其他 分类",I:0},["/category/其他/","/category/%E5%85%B6%E4%BB%96/index.html"]],["v-b99e3274","/tag/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/",{y:"p",t:"个人介绍 标签",I:0},["/tag/个人介绍/","/tag/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/index.html"]],["v-2ae54282","/category/%E5%9F%BA%E7%A1%80/",{y:"p",t:"基础 分类",I:0},["/category/基础/","/category/%E5%9F%BA%E7%A1%80/index.html"]],["v-28a1d8bf","/tag/java/",{y:"p",t:"JAVA 标签",I:0},["/tag/java/index.html"]],["v-64c6f0ae","/category/%E5%9F%BA%E7%A1%80%E8%BF%9B%E9%98%B6/",{y:"p",t:"基础进阶 分类",I:0},["/category/基础进阶/","/category/%E5%9F%BA%E7%A1%80%E8%BF%9B%E9%98%B6/index.html"]],["v-a59eec78","/tag/%E7%9B%AE%E5%BD%95/",{y:"p",t:"目录 标签",I:0},["/tag/目录/","/tag/%E7%9B%AE%E5%BD%95/index.html"]],["v-49425445","/category/%E7%AC%94%E8%AE%B0/",{y:"p",t:"笔记 分类",I:0},["/category/笔记/","/category/%E7%AC%94%E8%AE%B0/index.html"]],["v-2cce94e0","/tag/elasticsearch/",{y:"p",t:"ElasticSearch 标签",I:0},["/tag/elasticsearch/index.html"]],["v-116a43a7","/category/%E9%9D%A2%E8%AF%95/",{y:"p",t:"面试 分类",I:0},["/category/面试/","/category/%E9%9D%A2%E8%AF%95/index.html"]],["v-05b88e01","/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{y:"p",t:"设计模式 标签",I:0},["/tag/设计模式/","/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.html"]],["v-65f163c6","/category/jvm/",{y:"p",t:"JVM 分类",I:0},["/category/jvm/index.html"]],["v-1bee38ca","/tag/mysql/",{y:"p",t:"MySQL 标签",I:0},["/tag/mysql/index.html"]],["v-09599fc8","/category/source-code/",{y:"p",t:"Source Code 分类",I:0},["/category/source-code/index.html"]],["v-c8142fd8","/tag/%E6%9E%B6%E6%9E%84%E7%9B%B8%E5%85%B3/",{y:"p",t:"架构相关 标签",I:0},["/tag/架构相关/","/tag/%E6%9E%B6%E6%9E%84%E7%9B%B8%E5%85%B3/index.html"]],["v-b30dba08","/tag/jvm/",{y:"p",t:"JVM 标签",I:0},["/tag/jvm/index.html"]],["v-7d0ba9b4","/tag/spring/",{y:"p",t:"Spring 标签",I:0},["/tag/spring/index.html"]],["v-b30dc3f6","/tag/juc/",{y:"p",t:"JUC 标签",I:0},["/tag/juc/index.html"]]];var Vuepress=defineComponent({name:"Vuepress",setup(){const Q=usePageLayout();return()=>h$2(Q.value)}}),createRoutes=()=>pagesRoutes.reduce((Q,[nn,an,en,sn])=>(Q.push({name:nn,path:an,component:Vuepress,meta:en},...sn.map(tn=>({path:tn,redirect:an}))),Q),[{name:"404",path:"/:catchAll(.*)",component:Vuepress}]),historyCreator=createWebHistory,createVueRouter=()=>{const Q=createRouter({history:historyCreator(removeEndingSlash("/")),routes:createRoutes(),scrollBehavior:(nn,an,en)=>en||(nn.hash?{el:nn.hash}:{top:0})});return Q.beforeResolve(async(nn,an)=>{var en;(nn.path!==an.path||an===START_LOCATION_NORMALIZED)&&([pageData.value]=await Promise.all([resolvers.resolvePageData(nn.name),(en=pagesComponents[nn.name])==null?void 0:en.__asyncLoader()]))}),Q},setupGlobalComponents=Q=>{Q.component("ClientOnly",ClientOnly),Q.component("Content",Content)},setupGlobalComputed=(Q,nn,an)=>{const en=ref(nn.currentRoute.value.path);watch(()=>nn.currentRoute.value.path,dn=>en.value=dn);const sn=computed(()=>resolvers.resolveLayouts(an)),tn=computed(()=>resolvers.resolveRouteLocale(siteData.value.locales,en.value)),on=computed(()=>resolvers.resolveSiteLocaleData(siteData.value,tn.value)),ln=computed(()=>resolvers.resolvePageFrontmatter(pageData.value)),pn=computed(()=>resolvers.resolvePageHeadTitle(pageData.value,on.value)),cn=computed(()=>resolvers.resolvePageHead(pn.value,ln.value,on.value)),rn=computed(()=>resolvers.resolvePageLang(pageData.value)),un=computed(()=>resolvers.resolvePageLayout(pageData.value,sn.value));return Q.provide(layoutsSymbol,sn),Q.provide(pageFrontmatterSymbol,ln),Q.provide(pageHeadTitleSymbol,pn),Q.provide(pageHeadSymbol,cn),Q.provide(pageLangSymbol,rn),Q.provide(pageLayoutSymbol,un),Q.provide(routeLocaleSymbol,tn),Q.provide(siteLocaleDataSymbol,on),Object.defineProperties(Q.config.globalProperties,{$frontmatter:{get:()=>ln.value},$head:{get:()=>cn.value},$headTitle:{get:()=>pn.value},$lang:{get:()=>rn.value},$page:{get:()=>pageData.value},$routeLocale:{get:()=>tn.value},$site:{get:()=>siteData.value},$siteLocale:{get:()=>on.value},$withBase:{get:()=>withBase}}),{layouts:sn,pageData,pageFrontmatter:ln,pageHead:cn,pageHeadTitle:pn,pageLang:rn,pageLayout:un,routeLocale:tn,siteData,siteLocaleData:on}},setupUpdateHead=()=>{const Q=usePageHead(),nn=usePageLang(),an=ref([]),en=()=>{Q.value.forEach(tn=>{const on=queryHeadTag(tn);on&&an.value.push(on)})},sn=()=>{document.documentElement.lang=nn.value,an.value.forEach(tn=>{tn.parentNode===document.head&&document.head.removeChild(tn)}),an.value.splice(0,an.value.length),Q.value.forEach(tn=>{const on=createHeadTag(tn);on!==null&&(document.head.appendChild(on),an.value.push(on))})};provide(updateHeadSymbol,sn),onMounted(()=>{en(),sn(),watch(()=>Q.value,()=>sn())})},queryHeadTag=([Q,nn,an=""])=>{const en=Object.entries(nn).map(([ln,pn])=>isString$1(pn)?`[${ln}=${JSON.stringify(pn)}]`:pn===!0?`[${ln}]`:"").join(""),sn=`head > ${Q}${en}`;return Array.from(document.querySelectorAll(sn)).find(ln=>ln.innerText===an)||null},createHeadTag=([Q,nn,an])=>{if(!isString$1(Q))return null;const en=document.createElement(Q);return isPlainObject(nn)&&Object.entries(nn).forEach(([sn,tn])=>{isString$1(tn)?en.setAttribute(sn,tn):tn===!0&&en.setAttribute(sn,"")}),isString$1(an)&&en.appendChild(document.createTextNode(an)),en},appCreator=createSSRApp,createVueApp=async()=>{var an;const Q=appCreator({name:"VuepressApp",setup(){var en;setupUpdateHead();for(const sn of clientConfigs)(en=sn.setup)==null||en.call(sn);return()=>[h$2(RouterView),...clientConfigs.flatMap(({rootComponents:sn=[]})=>sn.map(tn=>h$2(tn)))]}}),nn=createVueRouter();setupGlobalComponents(Q),setupGlobalComputed(Q,nn,clientConfigs);for(const en of clientConfigs)await((an=en.enhance)==null?void 0:an.call(en,{app:Q,router:nn,siteData}));return Q.use(nn),{app:Q,router:nn}};createVueApp().then(({app:Q,router:nn})=>{nn.isReady().then(()=>{Q.mount("#app")})});export{I$2 as I,__vitePreload as _,createVueApp,f$1 as f};

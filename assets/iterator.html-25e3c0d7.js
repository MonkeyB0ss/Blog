const e=JSON.parse('{"key":"v-39d5b7d0","path":"/java/java-advanced/collection/iterator.html","title":"Iterator接口与foreach循环","lang":"zh-CN","frontmatter":{"date":"2022-12-01T00:00:00.000Z","category":"基础进阶","tag":["JAVA"]},"headers":[{"level":2,"title":"遍历Collection的两种方式","slug":"遍历collection的两种方式","link":"#遍历collection的两种方式","children":[]},{"level":2,"title":"Iterator","slug":"iterator","link":"#iterator","children":[{"level":3,"title":"说明","slug":"说明","link":"#说明","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"如何获取实例","slug":"如何获取实例","link":"#如何获取实例","children":[]},{"level":3,"title":"遍历的代码实现","slug":"遍历的代码实现","link":"#遍历的代码实现","children":[]},{"level":3,"title":"图示说明","slug":"图示说明","link":"#图示说明","children":[]},{"level":3,"title":"remove()的使用","slug":"remove-的使用","link":"#remove-的使用","children":[]}]},{"level":2,"title":"增强for循环","slug":"增强for循环","link":"#增强for循环","children":[{"level":3,"title":"遍历集合举例","slug":"遍历集合举例","link":"#遍历集合举例","children":[]},{"level":3,"title":"遍历数组举例","slug":"遍历数组举例","link":"#遍历数组举例","children":[]}]}],"git":{"createdTime":1669908955000,"updatedTime":1669908955000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.6,"words":481},"filePathRelative":"java/java-advanced/collection/iterator.md","localizedDate":"2022年12月1日","excerpt":"<h1> Iterator接口与foreach循环</h1>\\n<h2> 遍历Collection的两种方式</h2>\\n<ol>\\n<li>使用迭代器Iterator</li>\\n<li>foreach循环（或增强for循环）</li>\\n</ol>\\n<h2> Iterator</h2>\\n<p>java.utils包下定义的迭代器接口</p>\\n<h3> 说明</h3>\\n<ol>\\n<li>Iterator对象称为迭代器(设计模式的一种)，主要用于遍历 <code>Collection</code> 集合中的元素。</li>\\n<li>GOF给迭代器模式的定义为：<em>提供一种方法访问一个容器(container)\\n对象中各个元素，而又不需暴露该对象的内部细节。迭代器模式，就是为容器而生</em>。</li>\\n</ol>"}');export{e as data};

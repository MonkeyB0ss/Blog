import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,e}from"./app.6c68b90f.js";const t={},o=e(`<h1 id="第09章-性能分析工具的使用" tabindex="-1"><a class="header-anchor" href="#第09章-性能分析工具的使用" aria-hidden="true">#</a> 第09章_性能分析工具的使用</h1><h2 id="_1-统计sql的查询成本-last-query-cost" tabindex="-1"><a class="header-anchor" href="#_1-统计sql的查询成本-last-query-cost" aria-hidden="true">#</a> <strong>1.</strong> <strong>统计SQL的查询成本：last_query_cost</strong></h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">STATUS</span> <span class="token operator">LIKE</span> <span class="token string">&#39;last_query_cost&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用场景：它对于比较开销是非常有用的，特别是我们有好几种查询方式可选的时候。</p><blockquote><p>SQL 查询是一个动态的过程，从页加载的角度来看，我们可以得到以下两点结论：</p><ol><li><code>位置决定效率</code>。如果页就在数据库<code>缓冲池</code>中，那么效率是最高的，否则还需要从<code>内存</code>或者<code>磁盘</code> 中进行读取，当然针对单个页的读取来说，如果页存在于内存中，会比在磁盘中读取效率高很多。</li><li><code>批量决定效率</code>。如果我们从磁盘中对单一页进行随机读，那么效率是很低的（差不多10ms），而采用顺序读取的方式，批量对页进行读取，平均一页的读取效率就会提升很多，甚至要快于单个页面在内存中的随机读取。</li></ol></blockquote><p>所以说，遇到I/O并不用担心，方法找对了，效率还是很高的。我们首先要考虑数据存放的位置，如果是经常使用的数据就要尽量放到<code>缓冲池</code> 中，其次我们可以充分利用磁盘的吞吐能力，一次性批量读取数据，这样单个页的读取效率也就得到了提升。</p><h2 id="_2-定位执行慢的sql-慢查询日志" tabindex="-1"><a class="header-anchor" href="#_2-定位执行慢的sql-慢查询日志" aria-hidden="true">#</a> <strong>2.</strong> <strong>定位执行慢的SQL：慢查询日志</strong></h2><p>MySQL的慢查询日志，用来记录在MySQL中<code>响应时间超过阈值</code>的语句，具体指运行时间超过<code>long_query_time</code> 的值的SQL，则会被记录到慢查询日志中。long_query_time的默认值为<code>10</code>，意思是运行10秒以上（不含10秒）的语句，认为是超出了我们的最大忍耐时间值。</p><p>默认情况下，MySQL数据库<code>没有开启慢查询日志</code>，需要我们手动来设置这个参数。<code>如果不是调优需要的话，一般不建议启动该参数</code> ，因为开启慢查询日志会或多或少带来一定的性能影响。</p><h3 id="_2-1-开启慢查询日志参数" tabindex="-1"><a class="header-anchor" href="#_2-1-开启慢查询日志参数" aria-hidden="true">#</a> <strong>2.1</strong> <strong>开启慢查询日志参数</strong></h3><p><strong>1.</strong> <strong>开启slow_query_log</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token keyword">global</span> slow_query_log<span class="token operator">=</span><span class="token string">&#39;ON&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看下慢查询日志是否开启，以及慢查询日志文件的位置：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token identifier"><span class="token punctuation">\`</span>%slow_query_log%<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.</strong> <strong>修改long_query_time阈值</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%long_query_time%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#测试发现：设置global的方式对当前session的long_query_time失效。对新连接的客户端有效。所以可以一并 执行下述语句 </span>
mysql <span class="token operator">&gt;</span> <span class="token keyword">set</span> <span class="token keyword">global</span> long_query_time <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">&#39;%long_query_time%&#39;</span><span class="token punctuation">;</span> 

mysql<span class="token operator">&gt;</span> <span class="token keyword">set</span> long_query_time<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> 
mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%long_query_time%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-查看慢查询数目" tabindex="-1"><a class="header-anchor" href="#_2-2-查看慢查询数目" aria-hidden="true">#</a> <strong>2.2</strong> <strong>查看慢查询数目</strong></h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">STATUS</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%Slow_queries%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3-慢查询日志分析工具-mysqldumpslow" tabindex="-1"><a class="header-anchor" href="#_2-3-慢查询日志分析工具-mysqldumpslow" aria-hidden="true">#</a> <strong>2.3</strong> <strong>慢查询日志分析工具：mysqldumpslow</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#得到返回记录集最多的10个SQL </span>
mysqldumpslow <span class="token parameter variable">-s</span> r <span class="token parameter variable">-t</span> <span class="token number">10</span> /var/lib/mysql/atguigu-slow.log 
<span class="token comment">#得到访问次数最多的10个SQL </span>
mysqldumpslow <span class="token parameter variable">-s</span> c <span class="token parameter variable">-t</span> <span class="token number">10</span> /var/lib/mysql/atguigu-slow.log
<span class="token comment">#得到按照时间排序的前10条里面含有左连接的查询语句 </span>
mysqldumpslow <span class="token parameter variable">-s</span> t <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token parameter variable">-g</span> <span class="token string">&quot;left join&quot;</span> /var/lib/mysql/atguigu-slow.log 
<span class="token comment">#另外建议在使用这些命令时结合 | 和more 使用 ，否则有可能出现爆屏情况 </span>
mysqldumpslow <span class="token parameter variable">-s</span> r <span class="token parameter variable">-t</span> <span class="token number">10</span> /var/lib/mysql/atguigu-slow.log <span class="token operator">|</span> <span class="token function">more</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-关闭慢查询日志" tabindex="-1"><a class="header-anchor" href="#_2-4-关闭慢查询日志" aria-hidden="true">#</a> <strong>2.4</strong> <strong>关闭慢查询日志</strong></h3><p><strong>方式1：永久性方式</strong></p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span> 
<span class="token key attr-name">slow_query_log</span><span class="token punctuation">=</span><span class="token value attr-value">OFF</span>
<span class="token comment">#或</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span> 
<span class="token comment">#slow_query_log =OFF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方式2：临时性方式</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> slow_query_log<span class="token operator">=</span><span class="token keyword">off</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-查看-sql-执行成本-show-profile" tabindex="-1"><a class="header-anchor" href="#_3-查看-sql-执行成本-show-profile" aria-hidden="true">#</a> <strong>3.</strong> <strong>查看</strong> <strong>SQL</strong> <strong>执行成本：SHOW PROFILE</strong></h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;profiling&#39;</span><span class="token punctuation">;</span>
<span class="token comment">#开启</span>
<span class="token keyword">set</span> profiling <span class="token operator">=</span> <span class="token string">&#39;ON&#39;</span><span class="token punctuation">;</span>
<span class="token comment">#查看</span>
<span class="token keyword">show</span> profiles<span class="token punctuation">;</span>
<span class="token keyword">show</span> profile cpu<span class="token punctuation">,</span>block io <span class="token keyword">for</span> query <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-分析查询语句-explain" tabindex="-1"><a class="header-anchor" href="#_4-分析查询语句-explain" aria-hidden="true">#</a> <strong>4.</strong> <strong>分析查询语句：EXPLAIN</strong></h2><h3 id="_4-1-基本语法" tabindex="-1"><a class="header-anchor" href="#_4-1-基本语法" aria-hidden="true">#</a> <strong>4.1</strong> <strong>基本语法</strong></h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> select_options 
<span class="token comment">#或者</span>
<span class="token keyword">DESCRIBE</span> <span class="token keyword">SELECT</span> select_options
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EXPLAIN 语句输出的各个列的作用如下：</p><table><thead><tr><th>列名</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>在一个大的查询语句中每个SELECT关键字都对应一个<code>唯一的id</code></td></tr><tr><td>select_type</td><td>SELECT关键字对应的那个查询的类型</td></tr><tr><td>table</td><td>表名</td></tr><tr><td>partitions</td><td>匹配的分区信息</td></tr><tr><td>type</td><td>针对单表的访问方法</td></tr><tr><td>possible_keys</td><td>可能用到的索引</td></tr><tr><td>key</td><td>实际上使用的索引</td></tr><tr><td>key_len</td><td>实际使用到的索引长度</td></tr><tr><td>ref</td><td>当使用索引列等值查询时，与索引列进行等值匹配的对象信息</td></tr><tr><td>rows</td><td>预估的需要读取的记录条数</td></tr><tr><td>filtered</td><td>某个表经过搜索条件过滤后剩余记录条数的百分比</td></tr><tr><td>Extra</td><td>一些额外的信息</td></tr></tbody></table><h3 id="_4-2-explain各列作用" tabindex="-1"><a class="header-anchor" href="#_4-2-explain各列作用" aria-hidden="true">#</a> <strong>4.2 EXPLAIN各列作用</strong></h3><p><strong>1. table</strong></p><p>不论我们的查询语句有多复杂，包含了多少个表 ，到最后也是需要对每个表进行<code>单表访问</code>的， 所以MySQL规定<strong>EXPLAIN语句输出的每条记录都对应着某个单表的访问方法</strong>，该条记录的table列代表着该表的表名（有时不是真实的表名字，可能是简称）。</p><p><strong>2. id</strong></p><ul><li><strong>id如果相同，可以认为是一组，从上往下顺序执行</strong></li><li><strong>在所有组中，id值越大，优先级越高，越先执行</strong></li><li><strong>关注点：id号每个号码，表示一趟独立的查询,一个sql的查询趟数越少越好</strong></li></ul><p><strong>3. select_type</strong></p><p><strong>4. partitions</strong></p><p><strong>5. type（重点）</strong></p><p><strong>结果值从最好到最坏依次是：</strong> <strong>system &gt; const &gt; eq_ref &gt; ref</strong> <strong>&gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt;</strong> <strong>range &gt; index &gt; ALL</strong></p><p><strong>SQL性能优化的目标：至少要达到 range级别，要求是ref级别，最好是consts级别。（阿里巴巴开发手册要求）</strong></p><p><strong>6. possible_keys和key</strong></p><p><strong>7. key_len（重点）</strong></p><p><strong>key_len的长度计算公式：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>varchar(10)变长字段且允许NULL = 10 * ( character set： utf8=3,gbk=2,latin1=1)+1(NULL)+2(变长字段) 

varchar(10)变长字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+2(变长字段)

char(10)固定字段且允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)+1(NULL) 

char(10)固定字段且不允许NULL = 10 * ( character set：utf8=3,gbk=2,latin1=1)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>8. ref</strong></p><p><strong>9. rows（重点）</strong></p><p>预估的需要读取的记录条数</p><p><strong>10. filtered</strong></p><p><strong>11. Extra</strong></p><h2 id="_5-explain的进一步使用" tabindex="-1"><a class="header-anchor" href="#_5-explain的进一步使用" aria-hidden="true">#</a> <strong>5. EXPLAIN的进一步使用</strong></h2><h3 id="_5-1-explain四种输出格式" tabindex="-1"><a class="header-anchor" href="#_5-1-explain四种输出格式" aria-hidden="true">#</a> <strong>5.1 EXPLAIN四种输出格式</strong></h3><p>这里谈谈EXPLAIN的输出格式。EXPLAIN可以输出四种格式：<code>传统格式</code>，<code>JSON格式</code>，<code>TREE格式</code>以及<code>可视化输出</code>。用户可以根据需要选择适用于自己的格式。</p><p><strong>1.</strong> <strong>传统格式</strong></p><p><strong>2. JSON格式</strong></p><p>JSON格式：在EXPLAIN单词和真正的查询语句中间加上<code>FORMAT=JSON</code>。用于查看执行成本<code>cost_info</code></p><p><strong>3. TREE格式</strong></p><p>TREE格式是8.0.16版本之后引入的新格式，主要根据查询的<code>各个部分之间的关系</code>和<code>各部分的执行顺序</code>来描述如何查询。</p><p><strong>4.</strong> <strong>可视化输出</strong></p><p>可视化输出，可以通过MySQL Workbench可视化查看MySQL的执行计划。</p><h3 id="_5-2-show-warnings的使用" tabindex="-1"><a class="header-anchor" href="#_5-2-show-warnings的使用" aria-hidden="true">#</a> <strong>5.2 SHOW WARNINGS的使用</strong></h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> s1<span class="token punctuation">.</span>key1<span class="token punctuation">,</span> s2<span class="token punctuation">.</span>key1 <span class="token keyword">FROM</span> s1 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> s2 <span class="token keyword">ON</span> s1<span class="token punctuation">.</span>key1 <span class="token operator">=</span> s2<span class="token punctuation">.</span>key1 <span class="token keyword">WHERE</span> s2<span class="token punctuation">.</span>common_field <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment"># 查看优化后的执行语句</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> <span class="token keyword">WARNINGS</span>\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-分析优化器执行计划-trace" tabindex="-1"><a class="header-anchor" href="#_6-分析优化器执行计划-trace" aria-hidden="true">#</a> <strong>6.</strong> <strong>分析优化器执行计划：trace</strong></h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 开启</span>
<span class="token keyword">SET</span> optimizer_trace<span class="token operator">=</span><span class="token string">&quot;enabled=on&quot;</span><span class="token punctuation">,</span>end_markers_in_json<span class="token operator">=</span><span class="token keyword">on</span><span class="token punctuation">;</span> 
<span class="token comment"># 设置大小</span>
<span class="token keyword">set</span> optimizer_trace_max_mem_size<span class="token operator">=</span><span class="token number">1000000</span><span class="token punctuation">;</span>
<span class="token comment"># 使用</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> id <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span>optimizer_trace\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-mysql监控分析视图-sys-schema" tabindex="-1"><a class="header-anchor" href="#_7-mysql监控分析视图-sys-schema" aria-hidden="true">#</a> <strong>7. MySQL监控分析视图-sys schema</strong></h2><p><strong>7.1 Sys schema视图使用场景</strong></p><p><strong>索引情况</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#1. 查询冗余索引 </span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_redundant_indexes<span class="token punctuation">;</span> 
<span class="token comment">#2. 查询未使用过的索引 </span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_unused_indexes<span class="token punctuation">;</span> 
<span class="token comment">#3. 查询索引的使用情况 </span>
<span class="token keyword">select</span> index_name<span class="token punctuation">,</span>rows_selected<span class="token punctuation">,</span>rows_inserted<span class="token punctuation">,</span>rows_updated<span class="token punctuation">,</span>rows_deleted <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_index_statistics <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">&#39;dbname&#39;</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>表相关</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 1. 查询表的访问量 </span>
<span class="token keyword">select</span> table_schema<span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>io_read_requests<span class="token operator">+</span>io_write_requests<span class="token punctuation">)</span> <span class="token keyword">as</span> io <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_table_statistics <span class="token keyword">group</span> <span class="token keyword">by</span> table_schema<span class="token punctuation">,</span>table_name <span class="token keyword">order</span> <span class="token keyword">by</span> io <span class="token keyword">desc</span><span class="token punctuation">;</span> 
<span class="token comment"># 2. 查询占用bufferpool较多的表 </span>
<span class="token keyword">select</span> object_schema<span class="token punctuation">,</span>object_name<span class="token punctuation">,</span>allocated<span class="token punctuation">,</span><span class="token keyword">data</span>
<span class="token keyword">from</span> sys<span class="token punctuation">.</span>innodb_buffer_stats_by_table <span class="token keyword">order</span> <span class="token keyword">by</span> allocated <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span> 
<span class="token comment"># 3. 查看表的全表扫描情况 </span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sys<span class="token punctuation">.</span>statements_with_full_table_scans <span class="token keyword">where</span> db<span class="token operator">=</span><span class="token string">&#39;dbname&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>语句相关</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#1. 监控SQL执行的频率 </span>
<span class="token keyword">select</span> db<span class="token punctuation">,</span>exec_count<span class="token punctuation">,</span>query <span class="token keyword">from</span> sys<span class="token punctuation">.</span>statement_analysis <span class="token keyword">order</span> <span class="token keyword">by</span> exec_count <span class="token keyword">desc</span><span class="token punctuation">;</span> 
<span class="token comment">#2. 监控使用了排序的SQL </span>
<span class="token keyword">select</span> db<span class="token punctuation">,</span>exec_count<span class="token punctuation">,</span>first_seen<span class="token punctuation">,</span>last_seen<span class="token punctuation">,</span>query
<span class="token keyword">from</span> sys<span class="token punctuation">.</span>statements_with_sorting <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span> 
<span class="token comment">#3. 监控使用了临时表或者磁盘临时表的SQL </span>
<span class="token keyword">select</span> db<span class="token punctuation">,</span>exec_count<span class="token punctuation">,</span>tmp_tables<span class="token punctuation">,</span>tmp_disk_tables<span class="token punctuation">,</span>query
<span class="token keyword">from</span> sys<span class="token punctuation">.</span>statement_analysis <span class="token keyword">where</span> tmp_tables<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">or</span> tmp_disk_tables <span class="token operator">&gt;</span><span class="token number">0</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">(</span>tmp_tables<span class="token operator">+</span>tmp_disk_tables<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>IO相关</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#1. 查看消耗磁盘IO的文件 </span>
<span class="token keyword">select</span> <span class="token keyword">file</span><span class="token punctuation">,</span>avg_read<span class="token punctuation">,</span>avg_write<span class="token punctuation">,</span>avg_read<span class="token operator">+</span>avg_write <span class="token keyword">as</span> avg_io
<span class="token keyword">from</span> sys<span class="token punctuation">.</span>io_global_by_file_by_bytes <span class="token keyword">order</span> <span class="token keyword">by</span> avg_read <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Innodb</strong> <strong>相关</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">#1. 行锁阻塞情况 </span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sys<span class="token punctuation">.</span>innodb_lock_waits<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,78),p=[o];function l(r,c){return n(),a("div",null,p)}const u=s(t,[["render",l],["__file","slow-query.html.vue"]]);export{u as default};

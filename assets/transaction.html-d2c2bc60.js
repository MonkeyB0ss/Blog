const e=JSON.parse('{"key":"v-0e25f8d7","path":"/mysql/mysql-advanced/transaction.html","title":"第13章_事务基础知识","lang":"zh-CN","frontmatter":{"date":"2022-12-14T00:00:00.000Z","category":"基础进阶","tag":["MySQL"]},"headers":[{"level":2,"title":"1. 数据库事务概述","slug":"_1-数据库事务概述","link":"#_1-数据库事务概述","children":[{"level":3,"title":"1.1 基本概念","slug":"_1-1-基本概念","link":"#_1-1-基本概念","children":[]},{"level":3,"title":"1.2 事务的ACID特性","slug":"_1-2-事务的acid特性","link":"#_1-2-事务的acid特性","children":[]},{"level":3,"title":"1.3 事务的状态","slug":"_1-3-事务的状态","link":"#_1-3-事务的状态","children":[]}]},{"level":2,"title":"2. 如何使用事务","slug":"_2-如何使用事务","link":"#_2-如何使用事务","children":[{"level":3,"title":"2.1 显式事务","slug":"_2-1-显式事务","link":"#_2-1-显式事务","children":[]},{"level":3,"title":"2.2 隐式事务","slug":"_2-2-隐式事务","link":"#_2-2-隐式事务","children":[]},{"level":3,"title":"2.3 隐式提交数据的情况","slug":"_2-3-隐式提交数据的情况","link":"#_2-3-隐式提交数据的情况","children":[]}]},{"level":2,"title":"3. 事务隔离级别","slug":"_3-事务隔离级别","link":"#_3-事务隔离级别","children":[{"level":3,"title":"3.1 数据并发问题","slug":"_3-1-数据并发问题","link":"#_3-1-数据并发问题","children":[]},{"level":3,"title":"3.2 SQL中的四种隔离级别","slug":"_3-2-sql中的四种隔离级别","link":"#_3-2-sql中的四种隔离级别","children":[]},{"level":3,"title":"3.3 如何设置事务的隔离级别","slug":"_3-3-如何设置事务的隔离级别","link":"#_3-3-如何设置事务的隔离级别","children":[]}]}],"git":{"createdTime":1671029305000,"updatedTime":1671029305000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":7.75,"words":2325},"filePathRelative":"mysql/mysql-advanced/transaction.md","localizedDate":"2022年12月14日","excerpt":"<h1> 第13章_事务基础知识</h1>\\n<h2> <strong>1.</strong> <strong>数据库事务概述</strong></h2>\\n<h3> <strong>1.1</strong> <strong>基本概念</strong></h3>\\n<p><strong>事务</strong>：一组逻辑操作单元，使数据从一种状态变换到另一种状态。</p>\\n<p><strong>事务处理的原则</strong>：保证所有事务都作为<code>一个工作单元</code>\\n来执行，即使出现了故障，都不能改变这种执行方式。当在一个事务中执行多个操作时，要么所有的事务都被提交(<code>commit</code>)\\n，那么这些修改就<code>永久</code>地保存下来；要么数据库管理系统将<code>放弃</code>所作的所有<code>修改</code>，整个事务回滚(<code>rollback</code>)到最初状态。</p>"}');export{e as data};

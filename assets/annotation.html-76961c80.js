const l=JSON.parse('{"key":"v-c50f2d5c","path":"/java/java-advanced/enum/annotation.html","title":"注解的使用","lang":"zh-CN","frontmatter":{"date":"2022-11-29T00:00:00.000Z","category":"基础进阶","tag":["JAVA"]},"headers":[{"level":2,"title":"注解的理解","slug":"注解的理解","link":"#注解的理解","children":[]},{"level":2,"title":"注解的使用示例","slug":"注解的使用示例","link":"#注解的使用示例","children":[]},{"level":2,"title":"如何自定义注解","slug":"如何自定义注解","link":"#如何自定义注解","children":[]},{"level":2,"title":"元注解","slug":"元注解","link":"#元注解","children":[]},{"level":2,"title":"如何获取注解信息:通过发射来进行获取、调用。","slug":"如何获取注解信息-通过发射来进行获取、调用。","link":"#如何获取注解信息-通过发射来进行获取、调用。","children":[]},{"level":2,"title":"JDK8中注解的新特性","slug":"jdk8中注解的新特性","link":"#jdk8中注解的新特性","children":[{"level":3,"title":"可重复注解","slug":"可重复注解","link":"#可重复注解","children":[]},{"level":3,"title":"类型注解","slug":"类型注解","link":"#类型注解","children":[]}]}],"git":{"createdTime":1669734734000,"updatedTime":1669734734000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":2.42,"words":725},"filePathRelative":"java/java-advanced/enum/annotation.md","localizedDate":"2022年11月29日","excerpt":"<h1> 注解的使用</h1>\\n<h2> 注解的理解</h2>\\n<ol>\\n<li>jdk 5.0 新增的功能</li>\\n<li>Annotation 其实就是代码里的特殊标记, 这些标记可以在编译, 类加载, 运行时被读取, 并执行相应的处理。通过使用\\nAnnotation,程序员可以在不改变原逻辑的情况下, 在源文件中嵌入一些补充信息。</li>\\n<li>在JavaSE中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在JavaEE/Android中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替JavaEE旧版中所遗留的繁冗代码和XML配置等。</li>\\n</ol>\\n"}');export{l as data};

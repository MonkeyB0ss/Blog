const l=JSON.parse('{"key":"v-7bf5fab5","path":"/other/audition/JUC/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html","title":"阻塞队列","lang":"zh-CN","frontmatter":{"date":"2023-03-31T00:00:00.000Z","category":"面试","tag":["JUC"]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[{"level":3,"title":"队列","slug":"队列","link":"#队列","children":[]},{"level":3,"title":"阻塞队列","slug":"阻塞队列-1","link":"#阻塞队列-1","children":[]}]},{"level":2,"title":"为什么要用？","slug":"为什么要用","link":"#为什么要用","children":[{"level":3,"title":"为什么需要BlockingQueue","slug":"为什么需要blockingqueue","link":"#为什么需要blockingqueue","children":[]}]},{"level":2,"title":"架构","slug":"架构","link":"#架构","children":[]},{"level":2,"title":"BlockingQueue核心方法","slug":"blockingqueue核心方法","link":"#blockingqueue核心方法","children":[{"level":3,"title":"抛出异常组","slug":"抛出异常组","link":"#抛出异常组","children":[]},{"level":3,"title":"布尔类型组","slug":"布尔类型组","link":"#布尔类型组","children":[]},{"level":3,"title":"阻塞队列组","slug":"阻塞队列组","link":"#阻塞队列组","children":[]},{"level":3,"title":"不见不散组","slug":"不见不散组","link":"#不见不散组","children":[]}]},{"level":2,"title":"SynchronousQueue","slug":"synchronousqueue","link":"#synchronousqueue","children":[]},{"level":2,"title":"阻塞队列的用处","slug":"阻塞队列的用处","link":"#阻塞队列的用处","children":[{"level":3,"title":"生产者消费者模式","slug":"生产者消费者模式","link":"#生产者消费者模式","children":[]}]},{"level":2,"title":"生成者和消费者3.0","slug":"生成者和消费者3-0","link":"#生成者和消费者3-0","children":[]}],"git":{"createdTime":1680279876000,"updatedTime":1680449106000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":2}]},"readingTime":{"minutes":10.49,"words":3146},"filePathRelative":"other/audition/JUC/阻塞队列.md","localizedDate":"2023年3月31日","excerpt":"<h1> 阻塞队列</h1>\\n<h2> 概念</h2>\\n<h3> 队列</h3>\\n<p>队列就可以想成是一个数组，从一头进入，一头出去，排队买饭</p>\\n<h3> 阻塞队列</h3>\\n<p>BlockingQueue 阻塞队列，排队拥堵，首先它是一个队列，而一个阻塞队列在数据结构中所起的作用大致如下图所示：</p>\\n<p></p>\\n<p>线程1往阻塞队列中添加元素，而线程2从阻塞队列中移除元素</p>\\n<ul>\\n<li>\\n<p><code>当阻塞队列是空时，从队列中获取元素的操作将会被阻塞</code></p>\\n<ul>\\n<li>当蛋糕店的柜子空的时候，无法从柜子里面获取蛋糕</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>当阻塞队列是满时，从队列中添加元素的操作将会被阻塞</code></p>\\n<ul>\\n<li>当蛋糕店的柜子满的时候，无法继续向柜子里面添加蛋糕了</li>\\n</ul>\\n</li>\\n</ul>"}');export{l as data};

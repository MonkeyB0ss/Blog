import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as o,b as c,d as t,a as r,e,r as l}from"./app.21f1e6f9.js";const h={},n=e('<h1 id="thread类中的常用方法" tabindex="-1"><a class="header-anchor" href="#thread类中的常用方法" aria-hidden="true">#</a> Thread类中的常用方法</h1><h2 id="thread类中的常用的方法" tabindex="-1"><a class="header-anchor" href="#thread类中的常用的方法" aria-hidden="true">#</a> Thread类中的常用的方法</h2><ol><li><code>start()</code>:启动当前线程；调用当前线程的run()</li><li><code>run()</code>: 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中</li><li><code>currentThread()</code>:静态方法，返回执行当前代码的线程</li><li><code>getName()</code>:获取当前线程的名字</li><li><code>setName()</code>:设置当前线程的名字</li><li><code>yield()</code>:释放当前cpu的执行权</li><li><code>join()</code>:在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。</li><li><code>stop()</code>:已过时。当执行此方法时，强制结束当前线程。</li><li><code>sleep(long millitime)</code>:让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。</li><li><code>isAlive()</code>:判断当前线程是否存活</li></ol><h2 id="线程的优先级" tabindex="-1"><a class="header-anchor" href="#线程的优先级" aria-hidden="true">#</a> 线程的优先级</h2><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h3><p>MAX_PRIORITY：10</p><p>MIN _PRIORITY：1</p>',7),s=e('<h3 id="如何获取和设置当前线程的优先级" tabindex="-1"><a class="header-anchor" href="#如何获取和设置当前线程的优先级" aria-hidden="true">#</a> 如何获取和设置当前线程的优先级</h3><p><code>getPriority()</code>:获取线程的优先级</p><p><code>setPriority(int p)</code>:设置线程的优先级</p><div class="custom-container info"><p class="custom-container-title">说明</p><p>高优先级的线程要抢占低优先级线程cpu的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。</p></div><h3 id="线程通信" tabindex="-1"><a class="header-anchor" href="#线程通信" aria-hidden="true">#</a> 线程通信</h3><p><code>wait()</code> / <code>notify()</code> / <code>notifyAll()</code> :此三个方法定义在Object类中的。</p><h3 id="线程的分类" tabindex="-1"><a class="header-anchor" href="#线程的分类" aria-hidden="true">#</a> 线程的分类</h3><ul><li>守护线程</li><li>用户线程</li></ul>',8);function p(u,m){const a=l("Badge");return i(),o("div",null,[n,c("p",null,[t("NORM_PRIORITY：5 "),r(a,{text:"默认"})]),s])}const x=d(h,[["render",p],["__file","thread-methods.html.vue"]]);export{x as default};

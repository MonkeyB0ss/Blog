const e=JSON.parse('{"key":"v-b16bee38","path":"/java/java-basic/object/middle/keyword-super.html","title":"关键字：super","lang":"zh-CN","frontmatter":{"date":"2022-11-21T00:00:00.000Z","category":"基础","tag":["JAVA"]},"headers":[{"level":2,"title":"可以用来调用的结构","slug":"可以用来调用的结构","link":"#可以用来调用的结构","children":[]},{"level":2,"title":"super调用属性、方法","slug":"super调用属性、方法","link":"#super调用属性、方法","children":[]},{"level":2,"title":"super调用构造器：","slug":"super调用构造器","link":"#super调用构造器","children":[]}],"git":{"createdTime":1669474184000,"updatedTime":1669474184000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.42,"words":426},"filePathRelative":"java/java-basic/object/middle/keyword-super.md","localizedDate":"2022年11月21日","excerpt":"<h1> 关键字：super</h1>\\n<p><strong><code>super</code>关键字可以理解为：<code>父类的</code></strong></p>\\n<h2> 可以用来调用的结构</h2>\\n<p><code>属性</code>、<code>方法</code>、<code>构造器</code></p>\\n<h2> super调用属性、方法</h2>\\n<ol>\\n<li>我们可以在子类的方法或构造器中。通过使用<code>super.属性</code>或<code>super.方法</code>\\n的方式，显式的调用父类中声明的属性或方法。但是，通常情况下，我们习惯省略<code>super.</code></li>\\n<li>特殊情况：当子类和父类中定义了同名的属性时，我们要想在子类中调用父类中声明的属性，则必须显式的使用<code>super.属性</code>\\n的方式，表明调用的是父类中声明的属性。</li>\\n<li>特殊情况：当子类重写了父类中的方法以后，我们想在子类的方法中调用父类中被重写的方法时，则必须显式的使用<code>super.方法</code>\\n的方式，表明调用的是父类中被重写的方法。</li>\\n</ol>"}');export{e as data};

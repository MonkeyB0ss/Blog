import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,e as t}from"./app.71f9ab67.js";const e="/Blog/assets/ClassLoader1.a77bd6a7.png",p="/Blog/assets/ClassLoader2.8177b9e7.png",o="/Blog/assets/ClassLoader3.4efbf9b1.png",c="/Blog/assets/ClassLoader4.24a5b696.png",l={},i=t('<h1 id="了解classloader" tabindex="-1"><a class="header-anchor" href="#了解classloader" aria-hidden="true">#</a> 了解ClassLoader</h1><h2 id="类的加载过程-了解" tabindex="-1"><a class="header-anchor" href="#类的加载过程-了解" aria-hidden="true">#</a> 类的加载过程----了解</h2><p><img src="'+e+'" alt="img.png"></p><h2 id="类的加载器的作用" tabindex="-1"><a class="header-anchor" href="#类的加载器的作用" aria-hidden="true">#</a> 类的加载器的作用</h2><p><img src="'+p+'" alt="img_1.png"></p><h2 id="类的加载器的分类" tabindex="-1"><a class="header-anchor" href="#类的加载器的分类" aria-hidden="true">#</a> 类的加载器的分类</h2><p><img src="'+o+'" alt="img_2.png"></p><h2 id="java类编译、运行的执行的流程" tabindex="-1"><a class="header-anchor" href="#java类编译、运行的执行的流程" aria-hidden="true">#</a> Java类编译、运行的执行的流程</h2><p><img src="'+c+`" alt="img_3.png"></p><h2 id="使用classloader加载src目录下的配置文件" tabindex="-1"><a class="header-anchor" href="#使用classloader加载src目录下的配置文件" aria-hidden="true">#</a> 使用Classloader加载src目录下的配置文件</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

	<span class="token class-name">Properties</span> pros <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 此时的文件默认在当前的module下。</span>
	<span class="token comment">// 读取配置文件的方式一：</span>
	<span class="token comment">// FileInputStream fis = new FileInputStream(&quot;jdbc.properties&quot;);</span>
	<span class="token comment">// FileInputStream fis = new FileInputStream(&quot;src\\\\jdbc1.properties&quot;);</span>
	<span class="token comment">// pros.load(fis);</span>
	
	<span class="token comment">// 读取配置文件的方式二：使用ClassLoader</span>
	<span class="token comment">// 配置文件默认识别为：当前module的src下</span>
	<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">ClassLoaderTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">InputStream</span> is <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc1.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	pros<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token class-name">String</span> user <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> password <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;user = &quot;</span> <span class="token operator">+</span> user <span class="token operator">+</span> <span class="token string">&quot;,password = &quot;</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),r=[i];function u(d,k){return n(),a("div",null,r)}const h=s(l,[["render",u],["__file","ClassLoader.html.vue"]]);export{h as default};

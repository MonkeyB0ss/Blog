const e=JSON.parse('{"key":"v-1987ca6a","path":"/other/audition/JUC/AtomicInteger%E7%9A%84ABA%E9%97%AE%E9%A2%98.html","title":"AtomicInteger的ABA问题","lang":"zh-CN","frontmatter":{"date":"2023-03-30T00:00:00.000Z","category":"面试","tag":["JUC"]},"headers":[{"level":2,"title":"连环套路","slug":"连环套路","link":"#连环套路","children":[]},{"level":2,"title":"ABA问题是什么","slug":"aba问题是什么","link":"#aba问题是什么","children":[]},{"level":2,"title":"CAS导致ABA问题","slug":"cas导致aba问题","link":"#cas导致aba问题","children":[]},{"level":2,"title":"ABA问题","slug":"aba问题","link":"#aba问题","children":[]},{"level":2,"title":"原子引用","slug":"原子引用","link":"#原子引用","children":[{"level":3,"title":"基于原子引用的ABA问题","slug":"基于原子引用的aba问题","link":"#基于原子引用的aba问题","children":[]}]},{"level":2,"title":"解决ABA问题","slug":"解决aba问题","link":"#解决aba问题","children":[]},{"level":2,"title":"AtomicStampedReference","slug":"atomicstampedreference","link":"#atomicstampedreference","children":[]},{"level":2,"title":"LongAdder（CAS机制优化）","slug":"longadder-cas机制优化","link":"#longadder-cas机制优化","children":[{"level":3,"title":"为什么有了AtomicLong还要新增一个LongAdder呢","slug":"为什么有了atomiclong还要新增一个longadder呢","link":"#为什么有了atomiclong还要新增一个longadder呢","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1680189607000,"updatedTime":1680189607000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":13.74,"words":4121},"filePathRelative":"other/audition/JUC/AtomicInteger的ABA问题.md","localizedDate":"2023年3月30日","excerpt":"<h1> AtomicInteger的ABA问题</h1>\\n<h2> 连环套路</h2>\\n<p>从AtomicInteger引出下面的问题</p>\\n<p>CAS -&gt; Unsafe -&gt; CAS底层思想 -&gt; ABA -&gt; 原子引用更新 -&gt; 如何规避ABA问题</p>\\n<h2> ABA问题是什么</h2>\\n<p>狸猫换太子</p>\\n<p></p>\\n<p>假设现在有两个线程，分别是T1 和\\nT2，然后T1执行某个操作的时间为10秒，T2执行某个时间的操作是2秒，最开始AB两个线程，分别从主内存中获取A值，但是因为B的执行速度更快，他先把A的值改成B，然后在修改成A，然后执行完毕，T1线程在10秒后，执行完毕，判断内存中的值为A，并且和自己预期的值一样，它就认为没有人更改了主内存中的值，就快乐的修改成B，但是实际上\\n可能中间经历了 ABCDEFA 这个变换，也就是中间的值经历了狸猫换太子。</p>"}');export{e as data};

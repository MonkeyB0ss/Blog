import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as i,e as o}from"./app.2f82c418.js";const r="/Blog/assets/package1.e371b5d2.png",t="/Blog/assets/package2.3a3266e1.png",l="/Blog/assets/package3.ad428854.png",c={},d=o('<h1 id="关键字-package-import" tabindex="-1"><a class="header-anchor" href="#关键字-package-import" aria-hidden="true">#</a> 关键字：package/import</h1><h2 id="package的使用" tabindex="-1"><a class="header-anchor" href="#package的使用" aria-hidden="true">#</a> package的使用</h2><h3 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明" aria-hidden="true">#</a> 使用说明</h3><ol><li>为了更好的实现项目中类的管理，提供包的概念</li><li>使用<code>package</code>声明类或接口所属的包，声明在源文件的首行</li><li>包，属于标识符，遵循标识符的命名规则、规范(xxxyyyzzz)、“见名知意”</li><li>每&quot;.&quot;一次，就代表一层文件目录。</li></ol><h3 id="举例" tabindex="-1"><a class="header-anchor" href="#举例" aria-hidden="true">#</a> 举例</h3><ul><li>某航运软件系统包括：一组域对象、GUI和reports子系统 <img src="'+r+'" alt="img.png" loading="lazy"></li><li>MVC设计模式 <img src="'+t+'" alt="img_1.png" loading="lazy"></li></ul><h3 id="jdk中的主要包介绍" tabindex="-1"><a class="header-anchor" href="#jdk中的主要包介绍" aria-hidden="true">#</a> JDK中的主要包介绍</h3><p><img src="'+l+'" alt="img_2.png" loading="lazy"></p><h2 id="import的使用" tabindex="-1"><a class="header-anchor" href="#import的使用" aria-hidden="true">#</a> import的使用</h2><ol><li>在源文件中显式的使用<code>import</code>结构导入指定包下的类、接口</li><li>声明在包的声明和类的声明之间</li><li>如果需要导入多个结构，则并列写出即可</li><li>可以使用&quot;xxx.*&quot;的方式，表示可以导入xxx包下的所结构</li><li>如果使用的类或接口是<code>java.lang</code>包下定义的，则可以省略<code>import</code>结构</li><li>如果使用的类或接口是本包下定义的，则可以省略<code>import</code>结构</li><li>如果在源文件中，使用了不同包下的同名的类，则必须至少一个类需要以全类名的方式显示。</li><li>使用&quot;xxx.*&quot;方式表明可以调用xxx包下的所结构。但是如果使用的是xxx子包下的结构，则仍需要显式导入</li><li><code>import static</code>:导入指定类或接口中的静态结构:属性或方法。</li></ol>',10),s=[d];function n(h,p){return e(),i("div",null,s)}const x=a(c,[["render",n],["__file","keyword-import.html.vue"]]);export{x as default};

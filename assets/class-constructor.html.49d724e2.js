const e=JSON.parse('{"key":"v-3d6dac4c","path":"/java/java-basic/object/class-constructor.html","title":"类的结构之三：构造器","lang":"zh-CN","frontmatter":{"date":"2022-11-20T00:00:00.000Z","category":["基础"],"tag":["JAVA"],"description":"作用 1. 创建对象 2. 初始化对象的信息 使用说明 1. 如果没显式的定义类的构造器的话，则系统默认提供一个空参的构造器 2. 定义构造器的格式：权限修饰符 类名(形参列表){} 3. 一个类中定义的多个构造器，彼此构成重载 4. 一旦我们显式的定义了类的构造器之后，系统就不再提供默认的空参构造器 5. 一个类中，至少会有一个构造器。 举例 属性赋...","head":[["meta",{"property":"og:url","content":"https://monkeyb0ss.github.io/Blog/java/java-basic/object/class-constructor.html"}],["meta",{"property":"og:site_name","content":"MonkeyBoss"}],["meta",{"property":"og:title","content":"类的结构之三：构造器"}],["meta",{"property":"og:description","content":"作用 1. 创建对象 2. 初始化对象的信息 使用说明 1. 如果没显式的定义类的构造器的话，则系统默认提供一个空参的构造器 2. 定义构造器的格式：权限修饰符 类名(形参列表){} 3. 一个类中定义的多个构造器，彼此构成重载 4. 一旦我们显式的定义了类的构造器之后，系统就不再提供默认的空参构造器 5. 一个类中，至少会有一个构造器。 举例 属性赋..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-20T15:49:01.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"JAVA"}],["meta",{"property":"article:published_time","content":"2022-11-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-20T15:49:01.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[]},{"level":2,"title":"举例","slug":"举例","link":"#举例","children":[]},{"level":2,"title":"属性赋值顺序","slug":"属性赋值顺序","link":"#属性赋值顺序","children":[]},{"level":2,"title":"JavaBean的概念","slug":"javabean的概念","link":"#javabean的概念","children":[]}],"git":{"createdTime":1668959341000,"updatedTime":1668959341000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":0.96,"words":289},"filePathRelative":"java/java-basic/object/class-constructor.md","localizedDate":"2022年11月20日"}');export{e as data};

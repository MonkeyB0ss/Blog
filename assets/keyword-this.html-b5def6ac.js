const e=JSON.parse('{"key":"v-54fd2172","path":"/java/java-basic/object/upper/keyword-this.html","title":"关键字：this","lang":"zh-CN","frontmatter":{"date":"2022-11-20T00:00:00.000Z","category":"基础","tag":["JAVA"]},"headers":[{"level":2,"title":"可以调用的结构","slug":"可以调用的结构","link":"#可以调用的结构","children":[]},{"level":2,"title":"this调用属性、方法：","slug":"this调用属性、方法","link":"#this调用属性、方法","children":[]},{"level":2,"title":"this调用构造器","slug":"this调用构造器","link":"#this调用构造器","children":[]}],"git":{"createdTime":1669474184000,"updatedTime":1669474184000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"java/java-basic/object/upper/keyword-this.md","localizedDate":"2022年11月20日","excerpt":"<h1> 关键字：this</h1>\\n<h2> 可以调用的结构</h2>\\n<p><code>属性</code>、<code>方法</code>；<code>构造器</code></p>\\n<h2> this调用属性、方法：</h2>\\n<p><code>this</code>理解为<code>当前对象</code> 或 <code>当前正在创建的对象</code></p>\\n<ol>\\n<li>\\n<p>在类的方法中，我们可以使用\\"<code>this</code>.属性\\"或\\"<code>this</code>.方法\\"的方式，调用当前对象属性或方法。但是，\\n通常情况下，我们都择省略\\"<code>this</code>.\\"。特殊情况下，如果方法的形参和类的属性同名时，我们必须显式\\n的使用\\"<code>this</code>.变量\\"的方式，表明此变量是属性，而非形参。</p>\\n</li>\\n<li>\\n<p>在类的构造器中，我们可以使用\\"<code>this</code>.属性\\"或\\"<code>this</code>.方法\\"\\n的方式，调用当前正在创建的对象属性或方法。但是，通常情况下，我们都择省略\\"<code>this</code>.\\"\\n。特殊情况下，如果构造器的形参和类的属性同名时，我们必须显式的使用\\"<code>this</code>.变量\\"的方式，表明此变量是属性，而非形参。</p>\\n</li>\\n</ol>"}');export{e as data};

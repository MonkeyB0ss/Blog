const e=JSON.parse('{"key":"v-1450f1bc","path":"/other/audition/JUC/CyclicBarrier.html","title":"CyclicBarrier","lang":"zh-CN","frontmatter":{"date":"2023-03-31T00:00:00.000Z","category":"面试","tag":["JUC"]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[]}],"git":{"createdTime":1680279876000,"updatedTime":1680279876000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.49,"words":446},"filePathRelative":"other/audition/JUC/CyclicBarrier.md","localizedDate":"2023年3月31日","excerpt":"<h1> CyclicBarrier</h1>\\n<h2> 概念</h2>\\n<p>和CountDownLatch相反，需要集齐七颗龙珠，召唤神龙。也就是做加法，开始是0，加到某个值的时候就执行</p>\\n<p>CyclicBarrier的字面意思就是可循环（cyclic）使用的屏障（Barrier）。它要求做的事情是，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所有被屏障拦截的线程才会继续干活，线程进入屏障通过CyclicBarrier的await方法</p>\\n<h2> 案例</h2>\\n<p>集齐7个龙珠，召唤神龙的Demo，我们需要首先创建CyclicBarrier</p>"}');export{e as data};

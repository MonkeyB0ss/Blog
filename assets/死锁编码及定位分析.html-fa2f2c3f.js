import{_ as n,X as s,Y as a,a2 as p}from"./framework-a20dc394.js";const t="/Blog/assets/img51-3a6e912f.png",e="/Blog/assets/img52-7e2bc0ad.png",o={},c=p('<h1 id="死锁编码及定位分析" tabindex="-1"><a class="header-anchor" href="#死锁编码及定位分析" aria-hidden="true">#</a> 死锁编码及定位分析</h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>死锁是指两个或多个以上的进程在执行过程中，因争夺资源而造成一种互相等待的现象，若无外力干涉那他们都将无法推进下去。如果资源充足，进程的资源请求都能够得到满足，死锁出现的可能性就很低，否则就会因争夺有限的资源而陷入死锁。</p><p><img src="'+t+`" alt="img.png"></p><h2 id="产生死锁的原因" tabindex="-1"><a class="header-anchor" href="#产生死锁的原因" aria-hidden="true">#</a> 产生死锁的原因</h2><ul><li>系统资源不足</li><li>进程运行推进的顺序不对</li><li>资源分配不当</li></ul><h2 id="死锁产生的四个必要条件" tabindex="-1"><a class="header-anchor" href="#死锁产生的四个必要条件" aria-hidden="true">#</a> 死锁产生的四个必要条件</h2><ul><li>互斥 <ul><li>解决方法：把互斥的共享资源封装成可同时访问</li></ul></li><li>占有且等待 <ul><li>解决方法：进程请求资源时，要求它不占有任何其它资源，也就是它必须一次性申请到所有的资源，这种方式会导致资源效率低。</li></ul></li><li>非抢占式 <ul><li>解决方法：如果进程不能立即分配资源，要求它不占有任何其他资源，也就是只能够同时获得所有需要资源时，才执行分配操作</li></ul></li><li>循环等待 <ul><li>解决方法：对资源进行排序，要求进程按顺序请求资源。</li></ul></li></ul><h2 id="死锁代码" tabindex="-1"><a class="header-anchor" href="#死锁代码" aria-hidden="true">#</a> 死锁代码</h2><p>我们创建了一个资源类，然后让两个线程分别持有自己的锁，同时在尝试获取别人的，就会出现死锁现象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 资源类
 */</span>
<span class="token keyword">class</span> <span class="token class-name">HoldLockThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> lockA<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> lockB<span class="token punctuation">;</span>

    <span class="token comment">// 持有自己的锁，还想得到别人的锁</span>

    <span class="token keyword">public</span> <span class="token class-name">HoldLockThread</span><span class="token punctuation">(</span><span class="token class-name">String</span> lockA<span class="token punctuation">,</span> <span class="token class-name">String</span> lockB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lockA <span class="token operator">=</span> lockA<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lockB <span class="token operator">=</span> lockB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>lockA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t 自己持有&quot;</span> <span class="token operator">+</span> lockA <span class="token operator">+</span> <span class="token string">&quot;\\t 尝试获取：&quot;</span> <span class="token operator">+</span> lockB<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>lockB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t 自己持有&quot;</span> <span class="token operator">+</span> lockB <span class="token operator">+</span> <span class="token string">&quot;\\t 尝试获取：&quot;</span> <span class="token operator">+</span> lockA<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeadLockDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> lockA <span class="token operator">=</span> <span class="token string">&quot;lockA&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> lockB <span class="token operator">=</span> <span class="token string">&quot;lockB&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HoldLockThread</span><span class="token punctuation">(</span>lockA<span class="token punctuation">,</span> lockB<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;t1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HoldLockThread</span><span class="token punctuation">(</span>lockB<span class="token punctuation">,</span> lockA<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;t2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果，main线程无法结束</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>t1	 自己持有lockA	 尝试获取：lockB
t2	 自己持有lockB	 尝试获取：lockA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何排查死锁" tabindex="-1"><a class="header-anchor" href="#如何排查死锁" aria-hidden="true">#</a> 如何排查死锁</h2><p>当我们出现死锁的时候，首先需要使用jps命令查看运行的程序</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jps -l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们能看到DeadLockDemo这个类，一直在运行</p><p><img src="`+e+`" alt="img.png"></p><p>在使用jstack查看堆栈信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jstack  7560   # 后面参数是 jps输出的该类的pid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>得到的结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Found</span> one <span class="token class-name">Java</span><span class="token operator">-</span>level deadlock<span class="token operator">:</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token string">&quot;BBB&quot;</span><span class="token operator">:</span>
  waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> monitor <span class="token number">0x000001717506ad48</span> <span class="token punctuation">(</span>object <span class="token number">0x000000076b56bc88</span><span class="token punctuation">,</span> a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  which is held by <span class="token string">&quot;AAA&quot;</span>
<span class="token string">&quot;AAA&quot;</span><span class="token operator">:</span>
  waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> monitor <span class="token number">0x000001717506d688</span> <span class="token punctuation">(</span>object <span class="token number">0x000000076b56bcc0</span><span class="token punctuation">,</span> a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  which is held by <span class="token string">&quot;BBB&quot;</span>

<span class="token class-name">Java</span> stack information <span class="token keyword">for</span> the threads listed above<span class="token operator">:</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token string">&quot;BBB&quot;</span><span class="token operator">:</span>
        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>monkeyboss<span class="token punctuation">.</span>shop<span class="token punctuation">.</span>product<span class="token punctuation">.</span></span>ThreadLock</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ShopProductApplicationTests</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">81</span><span class="token punctuation">)</span>
        <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000076b56bc88<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
        <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000076b56bcc0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">748</span><span class="token punctuation">)</span>
<span class="token string">&quot;AAA&quot;</span><span class="token operator">:</span>
        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>monkeyboss<span class="token punctuation">.</span>shop<span class="token punctuation">.</span>product<span class="token punctuation">.</span></span>ThreadLock</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ShopProductApplicationTests</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">81</span><span class="token punctuation">)</span>
        <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000076b56bcc0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
        <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000076b56bc88<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">748</span><span class="token punctuation">)</span>

<span class="token class-name">Found</span> <span class="token number">1</span> deadlock<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过查看最后一行，我们看到 Found 1 deadlock，即存在一个死锁</p>`,23),l=[c];function i(u,k){return s(),a("div",null,l)}const d=n(o,[["render",i],["__file","死锁编码及定位分析.html.vue"]]);export{d as default};

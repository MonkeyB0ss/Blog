const e=JSON.parse('{"key":"v-1beca418","path":"/java/java-advanced/multi-thread/thread.html","title":"创建多线程的两种方式","lang":"zh-CN","frontmatter":{"date":"2022-11-28T00:00:00.000Z","category":"基础进阶","tag":["JAVA"]},"headers":[{"level":2,"title":"继承Thread类的方式","slug":"继承thread类的方式","link":"#继承thread类的方式","children":[]},{"level":2,"title":"实现Runnable接口的方式","slug":"实现runnable接口的方式","link":"#实现runnable接口的方式","children":[]},{"level":2,"title":"两种方式的对比","slug":"两种方式的对比","link":"#两种方式的对比","children":[]}],"git":{"createdTime":1669650990000,"updatedTime":1669650990000,"contributors":[{"name":"MonkeyBoss","email":"1912290362@qq.com","commits":1}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"java/java-advanced/multi-thread/thread.md","localizedDate":"2022年11月28日","excerpt":"<h1> 创建多线程的两种方式</h1>\\n<h2> 继承Thread类的方式</h2>\\n<ol>\\n<li>创建一个继承于Thread类的子类</li>\\n<li>重写Thread类的run() --&gt; 将此线程执行的操作声明在run()中</li>\\n<li>创建Thread类的子类的对象</li>\\n<li>通过此对象调用start()：\\n<ul>\\n<li>启动当前线程</li>\\n<li>调用当前线程的run()</li>\\n</ul>\\n</li>\\n</ol>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">两个问题</p>\\n<p>问题一：我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。</p>\\n<p>问题二：如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().</p>\\n</div>"}');export{e as data};

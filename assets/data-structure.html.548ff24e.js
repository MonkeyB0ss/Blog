import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as r,e}from"./app.912b6410.js";const s="/Blog/assets/data-structure1.e5066d92.png",i="/Blog/assets/data-structure2.63c75e57.png",c="/Blog/assets/data-structure3.5ef1a6a9.png",n="/Blog/assets/data-structure4.4303e799.png",o={},p=e('<h1 id="数据结构简述" tabindex="-1"><a class="header-anchor" href="#数据结构简述" aria-hidden="true">#</a> 数据结构简述</h1><h2 id="数据结构概述" tabindex="-1"><a class="header-anchor" href="#数据结构概述" aria-hidden="true">#</a> 数据结构概述</h2><p>数据结构（Data Structure是一门和计算机硬件与软件都密切相关的学科，它的研究重点是在计算机的程序设计领域中探讨如何在计算机中组织和存储数据并进行高效率的运用，<mark>涉及的内容包含：数据的逻辑关系、数据的存储结构、排序算法（Algorithm）、查找（或搜索）等。</mark></p><h2 id="数据结构与算法的理解" tabindex="-1"><a class="header-anchor" href="#数据结构与算法的理解" aria-hidden="true">#</a> 数据结构与算法的理解</h2><p><mark>程序能否快速而高效地完成预定的任务，取决于是否选对了数据结构，而程序是否能清楚而正确地把问题解决，则取决于算法。</mark></p><p>所以大家认为：&quot;<mark>Algorithms + Data Structures = Programs</mark>&quot;（出自：Pascal之父Nicklaus Wirth）</p><div class="custom-container info"><p class="custom-container-title">总结</p><p>算法是为了解决实际问题而设计的，数据结构是算法需要处理的问题载体。</p></div><h2 id="数据结构的研究对象" tabindex="-1"><a class="header-anchor" href="#数据结构的研究对象" aria-hidden="true">#</a> 数据结构的研究对象</h2><h3 id="数据间的逻辑结构" tabindex="-1"><a class="header-anchor" href="#数据间的逻辑结构" aria-hidden="true">#</a> 数据间的逻辑结构</h3><p>集合结构</p><p><img src="'+s+'" alt="img.png" loading="lazy"></p><p>一对一：线性结构</p><p><img src="'+i+'" alt="img.png" loading="lazy"></p><p>一对多：树形结构</p><p><img src="'+c+'" alt="img.png" loading="lazy"></p><p>多对多：图形结构</p><p><img src="'+n+'" alt="img.png" loading="lazy"></p><h3 id="数据的存储结构" tabindex="-1"><a class="header-anchor" href="#数据的存储结构" aria-hidden="true">#</a> 数据的存储结构</h3><p>线性表（顺序表、链表、栈、队列）</p><p>树</p><p>图</p><div class="custom-container info"><p class="custom-container-title">说明</p><p>习惯上把顺序表和链表看做基本数据结构（或真实数据结构）</p><p>习惯上把栈、队列、树、图看做抽象数据类型，简称ADT</p></div>',22),d=[p];function h(l,u){return t(),r("div",null,d)}const _=a(o,[["render",h],["__file","data-structure.html.vue"]]);export{_ as default};
